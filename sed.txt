#!/bin/bash
#这是一个批量去除dos格式^M的脚本，将目录php下的所有文件读取并去除^M,然后将asp文件改为html文件（js文件名不变）保存至php1目录下
for i in ./php/*
do
	j=$i
	a1=${j##*/}
	b1="./php1/"
	c1=$b1$a1
	j=${c1/%asp/html}
	sed -e 's/.$//' $i > $j
done
<font color=red>单独去除一个文件中dos格式^M的做法： sed -e 's/.$//' dos.txt > linux.txt
单独转换一个linux格式文件为dos文件的做法： sed -e 's/$/\r/ unix.file > dos.file'</font>
#将unix格式的文件转换为dos格式的文件时使用：sed -e 's/$/\r/ unix.file > dos.file'
#bash ${ } 用法总结 
#假设我们定义了一个变量为：
#file=/dir1/dir2/dir3/my.file.txt
#我们可以用 ${} 分别替换获得不同的值：

#    ${file#*/}：拿掉第一条 / 及其左边的字串：dir1/dir2/dir3/my.file.txt

#    ${file##*/}：拿掉最后一条 / 及其左边的字串：my.file.txt

#    ${file#*.}：拿掉第一个 . 及其左边的字串：file.txt

#    ${file##*.}：拿掉最后一个 . 及其左边的字串：txt

#    ${file%/*}：拿掉最后一条 / 及其右边的字串：/dir1/dir2/dir3

#    ${file%/*}：拿掉第一条 / 及其右边的字串：(空值)

#    ${file%.*}：拿掉最后一个 . 及其右边的字串：/dir1/dir2/dir3/my.file

#    ${file%%.*}：拿掉第一个 . 及其右边的字串：/dir1/dir2/dir3/my
#我们也可以对变量值里的字串作替换：

#    ${file/dir/path}：将第一个 dir 提换为 path：/path1/dir2/dir3/my.file.txt

#    ${file//dir/path}：将全部 dir 提换为 path：/path1/path2/path3/my.file.txt

#	 ${file/#dir/path}：将全部dir开头的替换为path：

#	 ${file/%dir/path}：将全部dir结尾的替换为path



