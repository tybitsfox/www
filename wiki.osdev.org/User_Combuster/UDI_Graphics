<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>User:Combuster/UDI Graphics - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"68230bea0e07bf86fd937e0a","wgCSPNonce":false,"wgCanonicalNamespace":"User","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":2,"wgPageName":"User:Combuster/UDI_Graphics","wgTitle":"Combuster/UDI Graphics","wgCurRevisionId":16320,"wgRevisionId":16320,"wgArticleId":2732,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"User:Combuster/UDI_Graphics","wgRelevantArticleId":2732,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgRelevantUserName":"Combuster","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="../favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="../opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="../api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-2 ns-subject page-User_Combuster_UDI_Graphics rootpage-User_Combuster skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-namespace">User</span><span class="mw-page-title-separator">:</span><span class="mw-page-title-main">Combuster/UDI Graphics</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="https://wiki.osdev.org/User:Combuster" title="User:Combuster">User:Combuster</a></span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="UDI_Graphics#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="UDI_Graphics#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>While this may be hijacking of the OS development wiki for now, its imo the best place for collaborative editing and public scrutiny.
</p><p>Long story short, the last revival of UDI led to a movement that would be trying to make it viable - initially with hobbyist drivers, but also for a larger audience when it does pick up. I was invited (and I agreed) to draft a specification for an UDI sub-protocol, targeted at graphics drivers.
</p><p><b>Please add comments</b> - they can be used for error checking now, and as a justification later.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="UDI_Graphics#Video_card_basics"><span class="tocnumber">1</span> <span class="toctext">Video card basics</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="UDI_Graphics#Connectors"><span class="tocnumber">2</span> <span class="toctext">Connectors</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="UDI_Graphics#Video_sources"><span class="tocnumber">3</span> <span class="toctext">Video sources</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="UDI_Graphics#Pipe_Layouts"><span class="tocnumber">3.1</span> <span class="toctext">Pipe Layouts</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="UDI_Graphics#State_manipulation"><span class="tocnumber">4</span> <span class="toctext">State manipulation</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="UDI_Graphics#Reference"><span class="tocnumber">5</span> <span class="toctext">Reference</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="UDI_Graphics#State_changes"><span class="tocnumber">5.1</span> <span class="toctext">State changes</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="UDI_Graphics#Metalanguage_definition"><span class="tocnumber">5.2</span> <span class="toctext">Metalanguage definition</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="UDI_Graphics#See_Also"><span class="tocnumber">6</span> <span class="toctext">See Also</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Video_card_basics">Video card basics</span></h2>
<p>There is only one "standard" video analogy that is in common use - the framebuffer. It is not alone however, there are still many devices that do not comprise a square grid of pixels, like text LED/LCD displays. And even when you do have a square array of pixels, it might not be possible to address and control each pixel individually and freely. The latter is especially the case in the default video mode during boot of desktop hardware - text mode. Also, in the console market tile-attribute engines are not uncommon - in fact they are the bigger brothers which have sprite engines. They have a certain amount of freedom in the location of images compared to the fixed grid of a tile-only engine, but lack the freedom that is provided by framebuffer engines.
</p><p>The specification hopes to cover the vast majority of graphics hardware, without requiring too much special casing.
</p>
<h2><span class="mw-headline" id="Connectors">Connectors</span></h2>
<p>Graphics hardware serve no purpose if the result is not available to the user. Any device should thus have at least one output. On a desktop video card, the output is connected through a connector on the rear, VGA was the standard, DVI is the current. The choice is however not limited to these two. Industry video standards include PAL and NTSC, which are used in TV, and their data is transmitted in a signal of various forms: RF, composite, component, HDMI amongst others. A device has a number of outputs, each with a transfer type attached.
Some connectors (DVI/SCART) allow video data to be transferred in multiple formats. That implies there is no 1-on-1 mapping between connector types and signal types. When enumerating the outputs, the information returned should contain the type of connector, and the signal used over the connector.
Depending on the signal, sideband data may also be transferred - it may be DDC for VGA (with the purpose of identifying and manipulating the attached monitor), it may be audio (for HDMI, DVI, SCART, RF), it may be USB (DVI). The interface should thus support various combinations of side channels. Some video-related side channels should be included in the graphics specification.
</p><p>A graphics device has one or more outputs, each has a connector type (which is constant over time), and a signal type (which is variable). The connectors to include are:
</p>
<ul><li>VGA</li>
<li>DVI</li>
<li>S-video</li>
<li>Component</li>
<li>Composite</li>
<li>RF</li>
<li>SCART</li>
<li>HDMI</li>
<li>Hidden (when there is no physical connector, such as laptop screens)</li></ul>
<p>The signals they carry:
</p>
<ul><li>RGBHV (VGA, DVI-A)</li>
<li>RGBS</li>
<li>RGsB</li>
<li>YPbPr (which is the common "Component" signal)</li>
<li>DVI-D</li>
<li>Composite YUV (PAL)</li>
<li>Composite YIQ (NTSC)</li>
<li>Separated Y and UV (PAL S-Video)</li>
<li>Separated Y and IQ (NTSC S-Video)</li>
<li>HDMI</li>
<li>Integrated (when the display device is inseparable from the graphics controller, including LED displays and emulated displays)</li>
<li>Internal (proprietary)</li></ul>
<p>Based on the signal and connector, software using the device may base choices such as resolution. Software may also change the signal used on each connector when applicable. Important to note is that this excludes the capabilities of the receiving end.
</p><p>A connector can be queried for the signals it supports, and a signal can be selected. To implement specifics of a signal, a signal-specific parameter block containing the parameters can be passed. When a new signal is chosen for a connector, a default configuration for that signal is assumed to ease configuration. This configuration is designed to be as widely supported as possible.
</p><p>For VGA or DVI-D signals this shall be 640 pixels by 480 progressive lines at 60Hz according to the original VGA standard. The configuration includes: 
</p>
<ul><li>sync, frontportch, backporch, left overscan, right overscan and active display in both dimensions</li>
<li>status of synchronisation pulses (positive, negative, disabled)</li>
<li>the presence of a half interleaving line</li>
<li>the pixel clock</li></ul>
<p>For YUV signals, the signal shall match a PAL display.
For YIQ signals, the signal shall match an NTSC display.
Integrated protocols assume a implementation defined resolution. The only configuration option is the output resolution.
</p><p>Connectors are to be listed according to probability of use. This ordering must be constant across instantiations of the driver in order to reliably track connected peripherals. Drivers may pose limitations on the ranges of configuration values that they deem valid.
</p>
<h2><span class="mw-headline" id="Video_sources">Video sources</span></h2>
<p>Connectors require an input - colour data. This data is generated from the internal state of the graphics controller. This state may be raw pixel data (in framebuffer engines), or it may be references to objects (in tile engines). An important observation is that most real instances share a integrated form of image generation - layering. The most obvious form in tile engines is the sprite layer present in 3rd generation consoles, where the background consists of tiled objects, and where another set of objects is positioned above it. This layering is also found in framebuffer devices, most obviously in the form of overlays, however the mouse pointer is in essence a single hardware-accelerated fixed-dimension sprite.
</p><p>Hardware may have one or more display engines. Engines are connected together into display pipes (independent of the actual method of implementation, which usually isn't pipe-based). Display pipes may be wired to one or more connectors. A connector may however not be linked to more than one display pipe. The rules that determine whether a pipe may be connected or not is hardware-specific, and thus, implementation defined. A configuration that was once accepted must however be accepted in all future cases. 
</p><p>Display pipes can be edited if the hardware supports it. In most cases however, the layout of the pipe is fixed, and certain components can only be turned on and off. Some properties of the pipe may only be modified when the pipe is not connected. The properties of any attached connector may also be locked by the connection.
</p>
<h3><span class="mw-headline" id="Pipe_Layouts">Pipe Layouts</span></h3>
<p>Each engine in the pipe combines its inputs, and the local state into the pipe's output. The result is a tree of operations, with each node applying its local data to the data it receives. It may choose to overwrite the data, it may choose to pass through the data unmodified, or it may alter the data in some form. In all cases, the information about the pipe and the engines must be complete enough so that the result can be computed <b>exactly</b>. This has to be the case, because the information seen on screen should match the expectations of the programmer.
</p>
<h2><span class="mw-headline" id="State_manipulation">State manipulation</span></h2>
<p>In order to render information to the screen, the graphics controller requires that its internal state is manipulated. In some cases, this state can only be modified directly by outside influences (like all older graphics cards do), more recent hardware have integrated processing units that can manipulate the state of the device with little to no intervention of the host system. In some configurations, direct access is very limited and the state can only be manipulated via operations on the graphics controller.
</p><p>To level the playing field, a framebuffer configuration requires a SetPixel command, as this represents the basic unit. However, this approach has significant overhead and should be avoided unless there is no viable alternative.
</p><p>When direct access is supported and the buffer has an identity mapping to the pixel or tile data, the device may expose a function that returns the physical offset and size of the framebuffer. If there is no such mapping, the function should yield an error.
</p>
<h2><span class="mw-headline" id="Reference">Reference</span></h2>
<p>You can use this as a basis for creating your UDI implementation. Details follow...
</p><p>All drivers must include the the following declaration in their udiprops.txt:
</p>
<pre>  requires udi_gfx 0x101
</pre>
<p>Each driver source code file must contain the following:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#define UDI_GFX_VERSION 0x101</span>

<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;udi.h&gt;</span><span class="c1">        // Must come before udi_gfx.h</span><span class="cp"></span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;udi_gfx.h&gt;</span><span class="c1">    // Contains the UDI GFX interfaces</span><span class="cp"></span>
</pre></div>
<p>Versions that have the same major version number but a larger minor number are strict supersets of those with smaller minor numbers.
</p>
<h3><span class="mw-headline" id="State_changes">State changes</span></h3>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="k">typedef</span><span class="w"> </span><span class="n">udi_ubit8_t</span><span class="w"> </span><span class="n">udi_gfx_state_op_t</span><span class="p">;</span><span class="w"></span>
<span class="cp">#define UDI_GFX_OP_WRITE 2                    </span><span class="c1">// Write a state property</span>
<span class="cp">#define UDI_GFX_OP_READ 1                     </span><span class="c1">// Read a state property</span>
<span class="cp">#define UDI_GFX_TARGET_CONNECTOR (0 &lt;&lt; 2)     </span><span class="c1">// The target is an output connector</span>
<span class="cp">#define UDI_GFX_TARGET_PIPE (1 &lt;&lt; 2)          </span><span class="c1">// The target is a component in a pipeline</span>

<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">udi_cb_t</span><span class="w"> </span><span class="o">*</span><span class="n">gcb</span><span class="p">;</span><span class="w">                  </span><span class="c1">// generic control block</span>
<span class="w">    </span><span class="n">udi_ubit_32_t</span><span class="w"> </span><span class="n">unit</span><span class="p">;</span><span class="w">             </span><span class="c1">// the unit to address</span>
<span class="w">    </span><span class="n">udi_ubit_32_t</span><span class="w"> </span><span class="n">index</span><span class="p">;</span><span class="w">            </span><span class="c1">// the property&#39;s index</span>
<span class="w">    </span><span class="n">udi_ubit_32_t</span><span class="w"> </span><span class="n">value</span><span class="p">;</span><span class="w">            </span><span class="c1">// the property&#39;s value</span>
<span class="w">    </span><span class="n">udi_gfx_state_op_t</span><span class="w"> </span><span class="n">operation</span><span class="p">;</span><span class="w">   </span><span class="c1">// general operation parameters</span>
<span class="p">}</span><span class="w"> </span><span class="n">udi_gfx_state_req_cb_t</span><span class="p">;</span><span class="w"></span>
</pre></div>
<p>The following properties can be used:
</p><p><br />
<tt>#define UDI_GFX_PROP_ENABLE 0</tt>
</p>
<dl><dd>The connector or engine is enabled (nonzero) or disabled (zero). A disabled engine forwards all data from the previous stage unmodified. A disabled connector does not send any data over the connector. Drivers may power down the physical counterparts of disabled components to preserve power, and users should expect delays when enabling connectors or components representing framebuffers. Disabling is however not recommended for sprite layers, which may repeatedly be enabled and disabled. A disabled component can still have its state changed, and the driver must complete all commands and other state changes as expected, regardless of disabled or power state. The valid ranges reported for this property may be 1 (always enabled) or 0-1 (either enabled or disabled).</dd></dl>
<p><tt>#define UDI_GFX_PROP_INPUT 1</tt>
</p>
<dl><dd>Points to the engine that is processed before this unit. In the case of a connector, it points to the last engine in a pipeline, and each engine points to the next engine in the sequence. A value of -1 indicates a source that only yields black pixels. Implementations must not allow cyclic structures. Changing this value may reallocate resources, and engines that are no longer referenced may lose their data (but not their state) when it is not part of any pipeline. If preservation is required, the ENABLE state should be used instead. Valid ranges includes one or more from the list of engines and -1 combined. In most cases, this property can not be modified.</dd></dl>
<p><tt>#define UDI_GFX_PROP_WIDTH 2</tt>
</p>
<dl><dd>Contains the amount of pixels in the horizontal direction. For connectors, this is the amount of data pixels rendered horizontally. For engines, this is the width in pixels of the image. Pixels requested from an engine outside the range (0..width-1) are defined according to the CLIP property. In some cases, hardware may support only fixed combinations of width and height. In such cases, changing the width will also change the height to a corresponding valid number. Valid ranges include any values strictly above zero. For connectors, expect large continuous ranges, large ranges with a certain modulus, a limited number of fixed values, or a constant value.</dd></dl>
<p><tt>#define UDI_GFX_PROP_HEIGHT 3</tt>
</p>
<dl><dd>Contains the amount of pixels in the vertical direction. Functions similar to the width property, but changing it will not alter the width property, and it's range at any time contains the valid range for the currently selected width.</dd></dl>
<p><tt>#define UDI_GFX_PROP_CLIP 4</tt>
</p>
<dl><dd>For engines, contains the behaviour for pixels requested outside the width and height of the engine. Can be either 0 (pass from next stage), 1 (the coordinates are wrapped modulus the height and width), 2 (the coordinates overflow onto the next scanline horizontally, and wrap vertically), 3 (the coordinates overflow onto the next column vertically, and wrap horizontally). Valid ranges contain one or more of these options. For overlays and sprites, a value 0 is common. For framebuffers, 2 is the most common value. For connectors, this property is always 0</dd></dl>
<p><tt>#define UDI_GFX_PROP_UNIT_WIDTH 5</tt>
</p>
<dl><dd>For engines, represents the width in pixels for each entry in the buffer. For framebuffers, this is normally either 1 (1 pixel per memory entry) or two (pixel doubled). For tile engines, this is the width of each individual tile. As an example, a driver for a VGA compatible card supports modes that either are 1 pixel wide (4-bit color), 2 pixels wide (8-bit color; data of two pixels are used to generate one higher-depth pixel), 8 and 9 (in alphanumeric mode, where each character is 8 wide, with an optional 9th line). Attempts to change this number may change the width and height properties when they must be a multiple of the unit sizes. UNIT_HEIGHT may also be changed according to hardware restrictions. Valid values include any positive number.</dd></dl>
<p><tt>#define UDI_GFX_PROP_UNIT_HEIGHT 6</tt>
</p>
<dl><dd>For engines, represents the height in pixels for each entry in the buffer. For framebuffers, this is normally either 1 (1 pixel per memory entry) or two (doublescanned). For tile engines, this is the height of each individual tile. See also UNIT_WIDTH. Valid values include any positive number.</dd></dl>
<p><tt>#define UDI_GFX_PROP_TILESHEET 7</tt>
</p>
<dl><dd>For engines, represents a texture object that contains the tile data. This object can be used as the target of a glTexSubImage2D command, and can be selected for reading using the glReadBuffer command, for which it is a valid argument. It's height equals the UNIT_HEIGHT; its width equals UNIT_WIDTH times the maximal addressable tile. Multiple tilesheets may exist. Changing this state will cause the output to use the new tilesheet. A value of zero indicates that no tilesheet is present, and such a tilesheet can not be addressed by the format. Tilesheets which are not selected must be preserved during the lifetime of the pipeline. Tilesheets may be read-only, in part or in whole. Valid values are zero, or any pointers to unique tilesheets, they can't point to objects that might be returned by a glGenTextures command, or any other command that yields a hardware resource.</dd></dl>
<p><tt>#define UDI_GFX_PROP_PALETTE 8</tt>
</p>
<dl><dd>For engines, represents a texture object that contains the palette information. This object can be used as the target of a glTexSubImage2D command, and can be selected for reading using the glReadBuffer command, for which it is a valid argument. In contrast to common palettes, not all entries are required to be of the same format. Valid values are any pointers to unique palettes, they can't point to objects that might be returned by a glGenTextures command, or any other command that yields a hardware resource. Palettes can be read-write or read-only, partially or in whole. Valid values are zero, or any pointers to unique tilesheets, they can't point to objects that might be returned by a glGenTextures command, or any other command that yields a hardware resource.</dd></dl>
<p><tt>#define UDI_GFX_PROP_BUFFER 9</tt>
</p>
<dl><dd>For engines, represents the texture that contains the currently visible data. This texture is often different from the currently active framebuffer, which is the target of rendering calls. It's value is arbitrary, other than that different engines may point to the same buffer, in which case it is a shared resource. This is often the case where multiple pipelines are active. This state is commonly read-only. All numbers are valid values for this state.</dd></dl>
<h3><span class="mw-headline" id="Metalanguage_definition">Metalanguage definition</span></h3>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="k">typedef</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="p">(</span><span class="n">udi_gfx_command_cb_t</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">udi_gfx_command_op_t</span><span class="p">;</span><span class="w"></span>
<span class="k">typedef</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="p">(</span><span class="n">udi_gfx_request_cb_t</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">udi_gfx_request_op_t</span><span class="p">;</span><span class="w"></span>
<span class="k">typedef</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="p">(</span><span class="n">udi_gfx_state_cb_t</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">udi_gfx_state_req_op_t</span><span class="p">;</span><span class="w"></span>
<span class="k">typedef</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="p">(</span><span class="n">udi_gfx_range_cb_t</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="n">udi_gfx_get_range_op_t</span><span class="p">;</span><span class="w"></span>

<span class="c1">// the metalanguage</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">udi_gfx_command_op_t</span><span class="w"> </span><span class="o">*</span><span class="n">gfx_command_op</span><span class="p">;</span><span class="w">       </span><span class="c1">// send commands to change data</span>
<span class="w">    </span><span class="n">udi_gfx_request_op_t</span><span class="w"> </span><span class="o">*</span><span class="n">gfx_request_op</span><span class="p">;</span><span class="w">       </span><span class="c1">// send commands to read data</span>
<span class="w">    </span><span class="n">udi_gfx_state_req_op_t</span><span class="w"> </span><span class="o">*</span><span class="n">gfx_state_req_op</span><span class="p">;</span><span class="w">   </span><span class="c1">// set or get socket or pipe state</span>
<span class="w">    </span><span class="n">udi_gfx_get_range_op_t</span><span class="w"> </span><span class="o">*</span><span class="n">gfx_get_range_op</span><span class="p">;</span><span class="w">   </span><span class="c1">// read valid socket and pipe values</span>
<span class="p">}</span><span class="w"> </span><span class="n">udi_gfx_device_ops_t</span><span class="p">;</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<ul><li><a rel="nofollow" class="external text" href="http://www.d-rift.nl/combuster/mos3/?p=viewsource&amp;file=/include/common/udi_gfx.h">udi_gfx.h</a> - nightly version</li></ul>
<!-- 
NewPP limit report
Cached time: 20250211142020
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.028 seconds
Real time usage: 0.409 seconds
Preprocessor visited node count: 42/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 5930/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2732-0!canonical and timestamp 20250211142020 and revision id 16320.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=User:Combuster/UDI_Graphics&amp;oldid=16320">https://wiki.osdev.org/index.php?title=User:Combuster/UDI_Graphics&amp;oldid=16320</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="../Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=User%3ACombuster%2FUDI+Graphics" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="UDI_Graphics#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-user" class="selected mw-list-item"><a href="UDI_Graphics" title="View the user page [c]" accesskey="c"><span>User page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="../User_talk:Combuster/UDI_Graphics" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="UDI_Graphics"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Combuster/UDI_Graphics&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Combuster/UDI_Graphics&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="../index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="../index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="../Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="../Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="../OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="../OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="../OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="../Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="../Special:WhatLinksHere/User:Combuster/UDI_Graphics" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/User:Combuster/UDI_Graphics" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-contributions" class="mw-list-item"><a href="../Special:Contributions/Combuster" title="A list of contributions by this user"><span>User contributions</span></a></li><li id="t-log" class="mw-list-item"><a href="../Special:Log/Combuster"><span>Logs</span></a></li><li id="t-userrights" class="mw-list-item"><a href="../Special:UserRights/Combuster"><span>View user groups</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="../Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Combuster/UDI_Graphics&amp;oldid=16320" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Combuster/UDI_Graphics&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 27 April 2014, at 17:52.</li>
	<li id="footer-info-0">This page has been accessed 1,112 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="../OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="../OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="../OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=User:Combuster/UDI_Graphics&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="../resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="../resources/assets/poweredby_mediawiki_132x47.png 1.5x, ../resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.028","walltime":"0.409","ppvisitednodes":{"value":42,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":5930,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211142020","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":528});});</script>
</body>
</html>