<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Generic Interrupt Controller versions 3 and 4 - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"dc61cb5045816c55450b988d","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Generic_Interrupt_Controller_versions_3_and_4","wgTitle":"Generic Interrupt Controller versions 3 and 4","wgCurRevisionId":27983,"wgRevisionId":27983,"wgArticleId":4011,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["ARM","Interrupts"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Generic_Interrupt_Controller_versions_3_and_4","wgRelevantArticleId":4011,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,
"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Generic_Interrupt_Controller_versions_3_and_4 rootpage-Generic_Interrupt_Controller_versions_3_and_4 skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Generic Interrupt Controller versions 3 and 4</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Generic_Interrupt_Controller_versions_3_and_4#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Generic_Interrupt_Controller_versions_3_and_4#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Generic_Interrupt_Controller_versions_3_and_4#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Generic_Interrupt_Controller_versions_3_and_4#Version_difference_summary"><span class="tocnumber">2</span> <span class="toctext">Version difference summary</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="Generic_Interrupt_Controller_versions_3_and_4#Differences_between_GICv2_and_GICv3"><span class="tocnumber">2.1</span> <span class="toctext">Differences between GICv2 and GICv3</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="Generic_Interrupt_Controller_versions_3_and_4#Differences_between_GICv3_and_GICv4"><span class="tocnumber">2.2</span> <span class="toctext">Differences between GICv3 and GICv4</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="Generic_Interrupt_Controller_versions_3_and_4#Interrupt_Grouping_changes"><span class="tocnumber">3</span> <span class="toctext">Interrupt Grouping changes</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="Generic_Interrupt_Controller_versions_3_and_4#Acknowledging_and_EOIing_Group0_IRQs"><span class="tocnumber">3.1</span> <span class="toctext">Acknowledging and EOIing Group0 IRQs</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="Generic_Interrupt_Controller_versions_3_and_4#Acknowledging_and_EOIing_Group1_IRQs"><span class="tocnumber">3.2</span> <span class="toctext">Acknowledging and EOIing Group1 IRQs</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-8"><a href="Generic_Interrupt_Controller_versions_3_and_4#Redistributors"><span class="tocnumber">4</span> <span class="toctext">Redistributors</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="Generic_Interrupt_Controller_versions_3_and_4#Affinity_Routing"><span class="tocnumber">5</span> <span class="toctext">Affinity Routing</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="Generic_Interrupt_Controller_versions_3_and_4#Affinity_routing_mode_with_SPIs"><span class="tocnumber">5.1</span> <span class="toctext">Affinity routing mode with SPIs</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="Generic_Interrupt_Controller_versions_3_and_4#Affinity_routing_mode_with_SGIs"><span class="tocnumber">5.2</span> <span class="toctext">Affinity routing mode with SGIs</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="Generic_Interrupt_Controller_versions_3_and_4#Participating_nodes"><span class="tocnumber">5.3</span> <span class="toctext">Participating nodes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="Generic_Interrupt_Controller_versions_3_and_4#IntIDs"><span class="tocnumber">6</span> <span class="toctext">IntIDs</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="Generic_Interrupt_Controller_versions_3_and_4#IntID_space_division"><span class="tocnumber">6.1</span> <span class="toctext">IntID space division</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="Generic_Interrupt_Controller_versions_3_and_4#ARM&#39;s_Recommended_default_mapping_of_private_peripheral_IRQs_to_PPI_IDs"><span class="tocnumber">6.2</span> <span class="toctext">ARM's Recommended default mapping of private peripheral IRQs to PPI IDs</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="Generic_Interrupt_Controller_versions_3_and_4#Special_IntIDs_(and_changes_from_GICv2)"><span class="tocnumber">6.3</span> <span class="toctext">Special IntIDs (and changes from GICv2)</span></a>
<ul>
<li class="toclevel-3 tocsection-17"><a href="Generic_Interrupt_Controller_versions_3_and_4#Interrupt_acknowledgment"><span class="tocnumber">6.3.1</span> <span class="toctext">Interrupt acknowledgment</span></a></li>
<li class="toclevel-3 tocsection-18"><a href="Generic_Interrupt_Controller_versions_3_and_4#EOI"><span class="tocnumber">6.3.2</span> <span class="toctext">EOI</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-19"><a href="Generic_Interrupt_Controller_versions_3_and_4#Message-Based_IRQ_support"><span class="tocnumber">7</span> <span class="toctext">Message-Based IRQ support</span></a>
<ul>
<li class="toclevel-2 tocsection-20"><a href="Generic_Interrupt_Controller_versions_3_and_4#Locality-based_Peripheral_IRQ"><span class="tocnumber">7.1</span> <span class="toctext">Locality-based Peripheral IRQ</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="Generic_Interrupt_Controller_versions_3_and_4#Interrupt_Translation_Service"><span class="tocnumber">7.2</span> <span class="toctext">Interrupt Translation Service</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-22"><a href="Generic_Interrupt_Controller_versions_3_and_4#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
</ul>
</div>

<h1><span class="mw-headline" id="Introduction">Introduction</span></h1>
<p>This page seeks to give a quick reference to the behaviour of the version 3 and 4 GIC, especially relative to version 2. It heavily references <a href="Generic_Interrrupt_Controller" class="mw-redirect" title="Generic Interrrupt Controller">Generic Interrrupt Controller</a>, and recommends that page as prior reading.
</p><p>Version 3 of the GIC specification is no longer separate from the core ARM specification, but as of version 3, the GICv3 is part of the architectural state of the ARM architecture, from <b>ARMv8 and onward</b>. In particular, from ARMv8 onwards, access to the GICC_*, GICV_* and GICH_* groups of registers are provided as ARM architected system registers, and not only as memory-mapped registers. In other words, they are accessible as ARM coprocessors. The GICD_*, GICR_* and GICS_* groups of registers however, are always memory mapped.
</p><p>On an ARMv7 platform, the GIC is an extension that is not architecturally specified. On ARMv8 platforms, the GIC, if implemented, is architecturally specified.
</p><p>Another key improvement over GICv2 is that CPUIDs in GICv3 are no longer restricted to a maximum of 8 processor IDs, and so GICv3 and upwards supports the delivery of IRQs to more than 8 Processing Elements (PEs).
</p>
<h1><span class="mw-headline" id="Version_difference_summary">Version difference summary</span></h1>
<h2><span class="mw-headline" id="Differences_between_GICv2_and_GICv3">Differences between GICv2 and GICv3</span></h2>
<h2><span class="mw-headline" id="Differences_between_GICv3_and_GICv4">Differences between GICv3 and GICv4</span></h2>
<h1><span class="mw-headline" id="Interrupt_Grouping_changes">Interrupt Grouping changes</span></h1>
<p>In GICv3, the meaning of interrupt Grouping has been expanded a bit; in GICv2, group0 was simply about secure IRQs, and group1 was about non-secure IRQs. This remains the same in GICv2. However, there are slight changes to the way that group1 IRQs are handled. In a system with two security states, an IRQ can either be:
</p>
<ul><li>Group0: ARM expects that these will be handled at EL3 (Monitor mode).</li>
<li>Secure Group1: ARM expects that these will be handled by Secure PL1.</li>
<li>Non-secure Group1: ARM expects that these will be handled by non-secure PL2 (Hyp mode) or non-secure PL1 (kernel/supervisor mode). Essentially, if a Hypervisor exists, then the Hypervisor will handle these and re-inject them into the guest VM as virtual IRQs; if there is no hypervisor, then these will be handled by the PL1 kernel directly.</li></ul>
<p>GICD_CTLR.DS indicates if the GIC is configured with one or two security states; or more specifically, GICD_CTLR.DS indicates whether or not the GIC implements a security model compatible with the ARMv8 security model.
</p><p>In a system where there is only one security state supported (no Security Extensions), IRQs can be configured as either:
</p>
<ul><li>Group0</li>
<li>Group1</li></ul>
<p><b>LPIs are always Group1</b> IRQs. In a GICv3 implementation that has 2 security states, they are specifically <b>non-secure Group1</b> IRQs.
</p>
<h2><span class="mw-headline" id="Acknowledging_and_EOIing_Group0_IRQs">Acknowledging and EOIing Group0 IRQs</span></h2>
<p>For group0 IRQs, software should attempt to manage them using: ICC_IAR0_EL1, ICC_EOIR0_EL1, ICC_BPR0_EL1, ICC_HPPIR0_EL1, and finally ICC_IGRPEN0_EL1 to enable Group0 IRQs at the CPU interface.
</p>
<h2><span class="mw-headline" id="Acknowledging_and_EOIing_Group1_IRQs">Acknowledging and EOIing Group1 IRQs</span></h2>
<p>For group1 IRQs, software should attempt to manage them using: ICC_IAR1_EL1, ICC_EOIR1_EL1, ICC_BPR1_EL1, ICC_HPPIR1_EL1, and finally ICC_IGRPEN1_EL1 to enable Group1 IRQs at the CPU interface <b>for the target security state</b> (secure vs non-secure PL1).
</p>
<h1><span class="mw-headline" id="Redistributors">Redistributors</span></h1>
<p>Redistributors are a new component of the IRI (Interrupt Routing Infrastructure) that are responsible for holding information about all pending physical LPIs (MSI IRQs). In a GICv4 implementation, a Redistributor also holds information about pending virtual LPIs, enabling the injection of virtual MSI IRQs into CPUs (which is not supported in hardware in GICv3; a hypervisor must emulate the injection of a virtual MSI IRQ in GICv3).
</p>
<h1><span class="mw-headline" id="Affinity_Routing">Affinity Routing</span></h1>
<p>Introduced in GICv3, Affinity routing is a form of specifying PE node IDs in a multiprocessor system using a 32-bit integer that is split into 4 subcomponents: a, b, c and d. If you want to use all 4 levels of addressing, you must be running on an AArch64 processor. AArch32 only supports 3 levels.
</p>
<ul><li>A 4-level identifier is of the form a.b.c.d.</li>
<li>A 3-level identifier is of the form 0.b.c.d, where the "a" component must be 0.</li></ul>
<p>To enable affinity-based routing in the Distributor for Secure IRQs, set GICD_CTLR.ARE_S to 1. To enable affinity-based routing in the Distributor for non-secure IRQs, set GICD_CTLR.ARE_NS to 1. Changing the value of either or both of these bits from 1 to 0 is &lt;UNPREDICTABLE&gt;. Changing the value from 0 to 1 is &lt;UNPREDICTABLE&gt; unless both groups of interrupts (group0 and group1) are disabled. Specifically:
</p>
<ul><li>If GICD_CTLR.DS == 0, changing the value from 0 to 1 is &lt;UNPREDICTABLE&gt; when:
<ul><li>GICD_CTLR.EnableGrp0 == 1.</li>
<li>GICD_CTLR.EnableGrp1S == 1.</li>
<li>GICD_CTLR.EnableGrp1NS == 1.</li></ul></li></ul>
<ul><li>If GICD_CTLR.DS == 1, then changing the value from 0 to 1 is &lt;UNPREDICTABLE&gt; when:
<ul><li>GICD_CTLR.EnableGrp0 == 1.</li>
<li>GICD_CTLR.EnableGrp1 == 1.</li></ul></li></ul>
<p>Software (the kernel) should ensure that the Distributor has commited the effects of these writes before proceeding, by polling GICD_CTLR.RWP before continuing.
</p><p>Some GIC implementations may have affinity based routing permanently enabled. In such a case, GICD_CTLR.ARE_S and GICD_CTLR.ARE_NS are both RAO/WI.
</p>
<h2><span class="mw-headline" id="Affinity_routing_mode_with_SPIs">Affinity routing mode with SPIs</span></h2>
<p>SPIs are routed using the GICD_IROUTER&lt;n&gt;.Interrupt_Routing_Mode bit:
</p>
<ul><li>If GICD_IROUTER&lt;n&gt;.Interrupt_Routing_Mode == 0, SPIs are forwarded to a single target PE, matching a.b.c.d.</li>
<li>If GICD_IROUTER&lt;n&gt;.Interrupt_Routing_Mode == 1, SPIs are forwarded to all PEs that qualify as a "participating node".</li></ul>
<h2><span class="mw-headline" id="Affinity_routing_mode_with_SGIs">Affinity routing mode with SGIs</span></h2>
<p>SGIs are routed using the ICC_SGI0R_EL1.IRM and ICC_SGI1R_EL1.IRM bit:
</p>
<ul><li>If the IRM bit is set to 1, SGIs are broadcast to all participating PEs in the system, excluding the originating PE (all-but-self).</li>
<li>If the IRM bit is set to 0, SGIs are routed to a group of PEs, selected according to a.b.d.&lt;TARGET_LIST&gt;. TARGET_LIST is a bitfield for encoding values from 0-15.</li></ul>
<h2><span class="mw-headline" id="Participating_nodes">Participating nodes</span></h2>
<p>Participating nodes are those PEs which are setup to be ready to receive an interrupt which is being delivered in 1 of N mode. In order to prepare a PE to take a 1 of N routed interrupt, that PE must be configured as follows:
</p>
<ul><li>GICR_WAKER.ProcessorSleep == 0, and the interrupt group of the interrupt must be enabled on that PE.</li>
<li>GICD_CTLR.E1NWF == 1.</li>
<li>GICR_TYPER.DPGS == 1. (DPGS = Disable Processor Group Selections). Furthermore, GICR_CTLR.{DPG1S, DPG1NS, DPG0} == 0.</li></ul>
<h1><span class="mw-headline" id="IntIDs">IntIDs</span></h1>
<p>Interrupt IDs are the unique identifiers for an IRQ. The number of IntIDs available in hardware at the Distributor <b>and Redistributor</b> is limited to a 10-bit space if LPIs are not supported. If LPIs are supported, the IntID space is of bit-width &lt;IMPLEMENTATION DEFINED&gt;, between 14 and 24 bits. Read GICD_TYPER to find out the bit-width of the IntID space in this case.
</p><p>The number of IntIDs supported by the ITS (if LPIs are supported) is defined as a bit-width that is IMPLEMENTATION DEFINED between 14-and 24 bits. Read GITS_TYPER to discover the bit-width of the IntID space. Given that the ITS is used for the purpose of managing LPIs, one can assume that if an ITS exists, then LPIs also exist, but this is just my personal conclusion. Be careful to only program the ITS to forward IRQs whose IntIDs are within the range of the target Redistributor's IntID bit-space.
</p><p>The number of IntIDs supported by the GICv3 CPU Interface is is <b>either</b> an IMPLEMENTATION DEFINED 16 bits or 24 bits. Check ICC_CTLR_EL1.IDbits and ICC_CTLR_EL3.IDbits.
</p><p>ARM imposes the following constraints on GIC implementations:
</p>
<ul><li>PEs (Processor Interfaces) must implement either 16 or 24 bits of IntID. However, a system might have a mixture of PEs that support both sizes!</li>
<li>The <i>Distributor and Redistributors must all implement the same number</i> of ID bits. The ID bits for the Distributor and Redistributor must not exceed the minimum IntID size implemented by any single PE in the system. I.e, the Distributor and Redistributor IntID bit-width cannot must be smaller than or equal to the bit width of the smallest PE bit-width.</li>
<li>If LPIs are <i>not</i> supported, the Distributor and Redistributors must implement at least 5 bits of IntID, and at most 10 bits of IntID.</li>
<li>If LPIs are supported, the Distributor and Redistributors must support at least 14 bits of IntID.</li>
<li>If an ITS exists, the ITS may implement any bit-width up to or equal to the bit-width of the Redistributors; and this bit width must be a minimum of 14 bits.</li></ul>
<h2><span class="mw-headline" id="IntID_space_division">IntID space division</span></h2>
<ul><li>ID0-ID15: Software Generated Interrupts (SGIs.)</li>
<li>ID16-ID31: Private Peripheral Interrupts (PPIs.)</li>
<li>ID32-ID1019: Shared Peripheral Interrupts (SPIs.)</li>
<li>ID1020-ID1023: Special interrupt IDs.</li>
<li>ID1024-ID8191: Reserved.</li>
<li>ID8192-&lt;IMPLEMENTATION DEFINED MAX BIT WIDTH&gt;: Locality-based Peripheral Interrupts (LPIs.)</li></ul>
<p>Orthogonal insertion: GICv4 assists in making IntIDs unique per-guest VM by providing a vPEID in addition to the IntID space.
</p>
<h2><span id="ARM.27s_Recommended_default_mapping_of_private_peripheral_IRQs_to_PPI_IDs"></span><span class="mw-headline" id="ARM's_Recommended_default_mapping_of_private_peripheral_IRQs_to_PPI_IDs">ARM's Recommended default mapping of private peripheral IRQs to PPI IDs</span></h2>
<p>This is ARM's recommended mapping; SoC designers do not need to conform to it. Where the SoC implementation differs, the core or SoC or platform documentation will state what the PPI IntIDs are. That being said, ARM recommneds that the following mapping be used:
</p>
<ul><li>ID30: Non-secure Physical Timer IRQ.</li>
<li>ID29: Secure Physical Timer IRQ.</li>
<li>ID27: Virtual Timer IRQ.</li>
<li>ID26: Hypervisor Timer Interrupt.</li>
<li>ID25: Virtual CPU Interface Maintenance IRQ (VGIC Maintenance IRQ).</li>
<li>ID24: Cross Trigger Interface IRQ.</li>
<li>ID23: PMC (Perf Monitor Counter) Overflow IRQ.</li>
<li>ID22: DCC (Debug Communications Channel) IRQ.</li></ul>
<h2><span id="Special_IntIDs_.28and_changes_from_GICv2.29"></span><span class="mw-headline" id="Special_IntIDs_(and_changes_from_GICv2)">Special IntIDs (and changes from GICv2)</span></h2>
<p>In GICv2, the special IntID 1022 is used to signal to the Secure Monitor that the current highest priority IRQ was meant to be handled in non-secure world (most likely by the hypervisor). In GICv3 onwards, this value is deprecated.
</p><p>In GICv2 and GICv3 onwards, IntID 1023 is used to signal a Spurious IRQ, or to state to a non-secure world handler that the current highest-priority IRQ is meant to be handled by the secure world. In both cases, the non-secure reader would just ignore the interrupt anyway.
</p><p>In GICv3 onwards, two new special IntIDs are introduced:
</p>
<ul><li>ID1020: The GIC returns this value when ICC_IAR0_EL1 or ICC_HPPIR0_EL1 is read from EL3 (Secure Monitor Mode), but the current highest priority IRQ is meant to be handled by Secure EL1.</li>
<li>ID1021: The GIC returns this value when ICC_IAR0_EL1 or ICC_HPPIR0_EL1 is read from EL3 (Secure Monitor Mode), but the current highest priority IRQ is meant to be handled by non-Secure EL1.</li></ul>
<ul><li><ul><li>These IntIDs do not require an EOI or deactivation.**</li></ul></li></ul>
<h3><span class="mw-headline" id="Interrupt_acknowledgment">Interrupt acknowledgment</span></h3>
<p>Interrupt acknowledgement is accomplished through a read from ICC_IAR0_EL1 for group0 IRQs, and it is accomplished via a read from ICC_IAR1_EL1 for group1 IRQs.
</p>
<h3><span class="mw-headline" id="EOI">EOI</span></h3>
<p>EOI is accomplished via a write to ICC_EOIR0_EL1 for group0 IRQs, and it is accomplished via a read from ICC_EOIR1_EL1 for group1 IRQs.
</p>
<h1><span class="mw-headline" id="Message-Based_IRQ_support">Message-Based IRQ support</span></h1>
<p>The ITS is one method of supporting MSI IRQs on ARM platforms that implement the GIC architecture. There are two approaches, and a platform must support <b>only one</b> (GICv3&amp;4 specification, section 6.2):
</p>
<ul><li>The device generates an LPI by writing directly to the Redistributor's GICR_SETLPIR.</li>
<li>The device generates an LPI via the ITS service, which will generate the LPI on its behalf.</li></ul>
<p>In GICv3 the ITS is optional, one option (ITS vs no-ITS). In GICv4, there must be at least one ITS, in order to support the injection of virtual LPIs into vPEs (so GICv4 must choose the ITS approach, and it does not have the option of using the non-ITS approach).
</p>
<h2><span class="mw-headline" id="Locality-based_Peripheral_IRQ">Locality-based Peripheral IRQ</span></h2>
<p>Support for a new type of IRQ is added from GICv3 onwards: Locality-based Peripheral IRQs (LPIs), which are used for message-based IRQs. LPIs are not routed through the Distributor, but they are routed directly to Redistributors, which are connected directly to PEs. The Distributor manages pin-based IRQs (SPIs, PPIs and SGIs) while the ITS+Redistributors manage MSIs.
</p><p>LPIs can be generated either by writing to a Redistributor's GICR_SETLPIR, or through the ITS.
</p><p><b>LPIs are always edge-triggered.</b> (GICv3&amp;4 specification, section 1.2.1).
When LPIs are acknowledged (read from the IAR), their pending state goes from pending to not-pending in the <b>Redistributor</b>. The Redistributor does not maintain an active state for LPIs.
</p><p>Section 4.2 explains that "In a system where two Security states are enabled, LPIs are always non-secure Group 1 IRQs".
</p>
<h2><span class="mw-headline" id="Interrupt_Translation_Service">Interrupt Translation Service</span></h2>
<p>Note that the configuration of ITS should have no effect on SPIs, SGI, PPIs (GICv3&amp;4 specification, section 6.2: "An ITS has no effect on SGIs, SPIs or PPIs."). Its purpose is confined to generating IRQ signals from in-band bus messages.
</p><p>For the GIC architecture, ARM devices that support MSI (message-signaled IRQs) are each assigned a DeviceID. Additionally, each MSI IRQ that the device will generate is assigned an EventID. This combination of DeviceID+EventID are used as inputs to the ITS. The ITS then uses the DeviceID to index into its Device Table, and select that device's Interrupt Translation Table (ITT). The EventID is then used to index into the ITS' ITT for that device, and select the pertinent Interrupt Translation Entry (ITE).
</p><p>Each ITE then indicates a Collection Table (CT) entry, which gives the target Redistributor for a physical MSI IRQ. For GIVc3, if a device has a physical MSI IRQ, and the OS Hypervisor would like to virtualize that IRQ to a Guest VM, the hypervisor must deliver that IRQ as a standard virtual IRQ (Not 100% sure on this yet).
</p><p>GICv4 also adds support for delivering virtual MSI IRQs. In this case, the ITE indicates a vPEID, which indicates a vPE table entry (and therefore, the physical Redistributor that hosts the target vPE for the virtual MSI).
</p><p>These tables may seem tedious, and that is because they are; but thankfully they are not exposed to the hypervisor. The hypervisor is required to simply update the global IPL configuration table, and then issue INVALIDATE (INV and INVALL) commands to the ITS machinery (if it exists), so that the ITS can read the new configuration values. It is not possible to directly access the ITS' internal tables (GICv3&amp;4 specification, section 6.2). The hypervisor should also issue a SYNC command to the ITS if it needs to be sure that the INVALIDATE command has completed before execution continues.
</p><p><i>Where there is no ITS hardware implemented, the hypervisor performs invalidation of LPI configuration via writes to GICR_INVALLR (invalidate all entries) or GICR_INVLPIR (invalidate single entry).</i>
</p><p>Caveat: All the ITS' tables are stored in non-secure physical memory.
Author's comment: It appears that the entire GIC MSI IRQ architecture is based on routing of MSI IRQs directly to a Redistributor, or indirectly to a Redistributor through an ITS.
</p>
<h1><span class="mw-headline" id="References">References</span></h1>
<ul><li>[<a rel="nofollow" class="external text" href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.subset.architecture.gic/index.html%7CARM">GIC version 3 and 4 specifiction</a>] (Click on the arrow icon next to "Contents" to get a link to the PDF from ARM.)</li>
<li>[<a rel="nofollow" class="external text" href="http://www.wiki.xilinx.com/GIC%7CXilinx">GIC Wiki page</a>]</li>
<li>[<a rel="nofollow" class="external text" href="http://ssup2.iptime.org/wiki/ARM_Generic_Interrupt_Controller_(GIC)%7C">Another Wiki page</a>]</li></ul>
<!-- 
NewPP limit report
Cached time: 20250211132825
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.012 seconds
Real time usage: 0.012 seconds
Preprocessor visited node count: 66/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4011-0!canonical and timestamp 20250211132825 and revision id 27983.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Generic_Interrupt_Controller_versions_3_and_4&amp;oldid=27983">https://wiki.osdev.org/index.php?title=Generic_Interrupt_Controller_versions_3_and_4&amp;oldid=27983</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="./Category:ARM" title="Category:ARM">ARM</a></li><li><a href="./Category:Interrupts" title="Category:Interrupts">Interrupts</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Generic+Interrupt+Controller+versions+3+and+4" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Generic_Interrupt_Controller_versions_3_and_4#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Generic_Interrupt_Controller_versions_3_and_4" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Generic_Interrupt_Controller_versions_3_and_4&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Generic_Interrupt_Controller_versions_3_and_4"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Generic_Interrupt_Controller_versions_3_and_4&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Generic_Interrupt_Controller_versions_3_and_4&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Generic_Interrupt_Controller_versions_3_and_4" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Generic_Interrupt_Controller_versions_3_and_4" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Generic_Interrupt_Controller_versions_3_and_4&amp;oldid=27983" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Generic_Interrupt_Controller_versions_3_and_4&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 9 July 2023, at 17:27.</li>
	<li id="footer-info-0">This page has been accessed 3,944 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Generic_Interrupt_Controller_versions_3_and_4&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.012","walltime":"0.012","ppvisitednodes":{"value":66,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":0,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211132825","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":113});});</script>
</body>
</html>