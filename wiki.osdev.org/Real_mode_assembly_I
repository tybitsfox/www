<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Real mode assembly I - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"4c2c1375d60b6430ce0a780c","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Real_mode_assembly_I","wgTitle":"Real mode assembly I","wgCurRevisionId":27894,"wgRevisionId":27894,"wgArticleId":2493,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","Tone","Articles Written in First Person","Level 1 Tutorials","Assembly","Real mode assembly"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Real_mode_assembly_I",
"wgRelevantArticleId":2493,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook",
"ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Real_mode_assembly_I rootpage-Real_mode_assembly_I skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Real mode assembly I</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Real_mode_assembly_I#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Real_mode_assembly_I#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p>This article's <b>tone or style</b> may not reflect the encyclopedic tone used throughout the wiki. See <a rel="nofollow" class="external text" href="https://en.wikipedia.org/wiki/Wikipedia:Writing_better_articles#Tone">Wikipedia's article on tone</a> for suggestions.
</p>
</td></tr></tbody></table>
</center>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p>This page or section refers to its readers or editors using <i>I</i>, <i>my</i>, <i>we</i> or <i>us</i>. It should be <a rel="nofollow" class="external text" href="https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;action=edit">edited</a> to be in an encyclopedic tone.
</p>
</td></tr></tbody></table>
</center><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_1.png" class="image"><img alt="Difficulty 1.png" src="images/d/d3/Difficulty_1.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Beginner</td></tr></tbody></table>
<center>
<table style="border: 1px solid #bfcfcf; padding: .0em .25em .0em; background-color: #fff0f0; text-align: center;">
<tbody><tr>
<td>
<p><b>WARNING:</b> Please see the <a href="Real_Mode_OS_Warning" title="Real Mode OS Warning">Real Mode OS Warning</a> page before continuing.
</p>
</td></tr></tbody></table>
</center>
<p><i>In this tutorial we will assemble a small 16-bit <a href="Assembly" title="Assembly">assembly language</a> kernel with <a href="NASM" title="NASM">NASM</a> and boot it.</i>
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Real_mode_assembly_I#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Real_mode_assembly_I#So_what&#39;s_it_going_to_look_like?"><span class="tocnumber">2</span> <span class="toctext">So what's it going to look like?</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="Real_mode_assembly_I#But_I_want_a_GUI_and_sound_effects_and_all_the_Windows_games_to_work_on_my_OS..."><span class="tocnumber">2.1</span> <span class="toctext">But I want a GUI and sound effects and all the Windows games to work on my OS...</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="Real_mode_assembly_I#So_where&#39;s_the_code?"><span class="tocnumber">3</span> <span class="toctext">So where's the code?</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Real_mode_assembly_I#What_next?"><span class="tocnumber">4</span> <span class="toctext">What next?</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p>You're probably going to sigh and dismiss yet <i>another</i> tutorial on writing operating systems in <a href="X86" class="mw-redirect" title="X86">x86</a> assembly language, especially since this one uses real mode. But there's a catch to this one; it actually does more than printing "Hello World" to the screen and halting.
</p><p>For this, you'll need:
</p>
<ul><li>the latest version of NASM (2.05.01 as of November 28<sup>th</sup>, 2008)</li>
<li>PARTCOPY on Windows or dd on Linux</li>
<li>an emulator like <a href="QEMU" title="QEMU">QEMU</a>, <a href="Bochs" title="Bochs">Bochs</a>, or <a href="Microsoft_Virtual_PC" title="Microsoft Virtual PC">Microsoft Virtual PC</a></li></ul>
<h2><span id="So_what.27s_it_going_to_look_like.3F"></span><span class="mw-headline" id="So_what's_it_going_to_look_like?">So what's it going to look like?</span></h2>
<p>Well, there will be a single source file, the kernel. What about a <a href="Bootloader" title="Bootloader">bootloader</a>? This is such a small kernel, we're not going to use a filesystem at all, we're just going to put the kernel into the first few sectors of the disk image!
</p><p>The system will have a string printing call (of course), keyboard input, and a strcmp call similar to that of C, all packaged into less than a sector.
</p>
<h3><span class="mw-headline" id="But_I_want_a_GUI_and_sound_effects_and_all_the_Windows_games_to_work_on_my_OS...">But I want a GUI and sound effects and all the Windows games to work on my OS...</span></h3>
<p><a href="Beginner_Mistakes" title="Beginner Mistakes">Beginner Mistakes</a>
</p>
<h2><span id="So_where.27s_the_code.3F"></span><span class="mw-headline" id="So_where's_the_code?">So where's the code?</span></h2>
<p>Here you go, go wild.
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="w"> </span><span class="nf">org</span><span class="w"> </span><span class="mi">0x7C00</span><span class="w">   </span><span class="c1">; add 0x7C00 to label addresses</span>
<span class="w"> </span><span class="nf">bits</span><span class="w"> </span><span class="mi">16</span><span class="w">      </span><span class="c1">; tell the assembler we want 16 bit code</span>

<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w">  </span><span class="c1">; set up segments</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">es</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ss</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w">     </span><span class="c1">; setup stack</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">sp</span><span class="p">,</span><span class="w"> </span><span class="mi">0x7C00</span><span class="w"> </span><span class="c1">; stack grows downwards from 0x7C00</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">welcome</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">print_string</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">mainloop:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">prompt</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">print_string</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">di</span><span class="p">,</span><span class="w"> </span><span class="no">buffer</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">get_string</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">buffer</span><span class="w"></span>
<span class="w">   </span><span class="nf">cmp</span><span class="w"> </span><span class="no">byte</span><span class="w"> </span><span class="p">[</span><span class="no">si</span><span class="p">],</span><span class="w"> </span><span class="mi">0</span><span class="w">  </span><span class="c1">; blank line?</span>
<span class="w">   </span><span class="nf">je</span><span class="w"> </span><span class="no">mainloop</span><span class="w">       </span><span class="c1">; yes, ignore it</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">buffer</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">di</span><span class="p">,</span><span class="w"> </span><span class="no">cmd_hi</span><span class="w">  </span><span class="c1">; &quot;hi&quot; command</span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">strcmp</span><span class="w"></span>
<span class="w">   </span><span class="nf">jc</span><span class="w"> </span><span class="no">.helloworld</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">buffer</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">di</span><span class="p">,</span><span class="w"> </span><span class="no">cmd_help</span><span class="w">  </span><span class="c1">; &quot;help&quot; command</span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">strcmp</span><span class="w"></span>
<span class="w">   </span><span class="nf">jc</span><span class="w"> </span><span class="no">.help</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="no">badcommand</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">print_string</span><span class="w"> </span>
<span class="w">   </span><span class="no">jmp</span><span class="w"> </span><span class="no">mainloop</span><span class="w">  </span>
<span class="w"> </span>
<span class="w"> </span><span class="no">.helloworld</span><span class="p">:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">msg_helloworld</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">print_string</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="no">mainloop</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">.help:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">msg_help</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">print_string</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="no">mainloop</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nf">welcome</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&#39;</span><span class="no">Welcome</span><span class="w"> </span><span class="no">to</span><span class="w"> </span><span class="no">My</span><span class="w"> </span><span class="no">OS</span><span class="p">!</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0D</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0A</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span><span class="nf">msg_helloworld</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&#39;</span><span class="no">Hello</span><span class="w"> </span><span class="no">OSDev</span><span class="w"> </span><span class="no">World</span><span class="p">!</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0D</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0A</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span><span class="nf">badcommand</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&#39;</span><span class="no">Bad</span><span class="w"> </span><span class="no">command</span><span class="w"> </span><span class="no">entered.</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0D</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0A</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span><span class="nf">prompt</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&#39;&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span><span class="nf">cmd_hi</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&#39;</span><span class="no">hi</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span><span class="nf">cmd_help</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&#39;</span><span class="no">help</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span><span class="nf">msg_help</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&#39;</span><span class="no">My</span><span class="w"> </span><span class="no">OS</span><span class="p">:</span><span class="w"> </span><span class="no">Commands</span><span class="p">:</span><span class="w"> </span><span class="no">hi</span><span class="p">,</span><span class="w"> </span><span class="no">help</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0D</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0A</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span><span class="nf">buffer</span><span class="w"> </span><span class="no">times</span><span class="w"> </span><span class="mi">64</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="c1">; ================</span>
<span class="w"> </span><span class="c1">; calls start here</span>
<span class="w"> </span><span class="c1">; ================</span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">print_string:</span><span class="w"></span>
<span class="w">   </span><span class="nf">lodsb</span><span class="w">        </span><span class="c1">; grab a byte from SI</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">or</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w">  </span><span class="c1">; logical or AL by itself</span>
<span class="w">   </span><span class="nf">jz</span><span class="w"> </span><span class="no">.done</span><span class="w">   </span><span class="c1">; if the result is zero, get out</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ah</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0E</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">0x10</span><span class="w">      </span><span class="c1">; otherwise, print out the character!</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="no">print_string</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">.done:</span><span class="w"></span>
<span class="w">   </span><span class="nf">ret</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">get_string:</span><span class="w"></span>
<span class="w">   </span><span class="nf">xor</span><span class="w"> </span><span class="no">cl</span><span class="p">,</span><span class="w"> </span><span class="no">cl</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">.loop:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ah</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">0x16</span><span class="w">   </span><span class="c1">; wait for keypress</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">cmp</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0x08</span><span class="w">    </span><span class="c1">; backspace pressed?</span>
<span class="w">   </span><span class="nf">je</span><span class="w"> </span><span class="no">.backspace</span><span class="w">   </span><span class="c1">; yes, handle it</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">cmp</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0D</span><span class="w">  </span><span class="c1">; enter pressed?</span>
<span class="w">   </span><span class="nf">je</span><span class="w"> </span><span class="no">.done</span><span class="w">      </span><span class="c1">; yes, we&#39;re done</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">cmp</span><span class="w"> </span><span class="no">cl</span><span class="p">,</span><span class="w"> </span><span class="mi">0x3F</span><span class="w">  </span><span class="c1">; 63 chars inputted?</span>
<span class="w">   </span><span class="nf">je</span><span class="w"> </span><span class="no">.loop</span><span class="w">      </span><span class="c1">; yes, only let in backspace and enter</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ah</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0E</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">0x10</span><span class="w">      </span><span class="c1">; print out character</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">stosb</span><span class="w">  </span><span class="c1">; put character in buffer</span>
<span class="w">   </span><span class="nf">inc</span><span class="w"> </span><span class="no">cl</span><span class="w"></span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="no">.loop</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">.backspace:</span><span class="w"></span>
<span class="w">   </span><span class="nf">cmp</span><span class="w"> </span><span class="no">cl</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w">	</span><span class="c1">; beginning of string?</span>
<span class="w">   </span><span class="nf">je</span><span class="w"> </span><span class="no">.loop</span><span class="w">	</span><span class="c1">; yes, ignore the key</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">dec</span><span class="w"> </span><span class="no">di</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">byte</span><span class="w"> </span><span class="p">[</span><span class="no">di</span><span class="p">],</span><span class="w"> </span><span class="mi">0</span><span class="w">	</span><span class="c1">; delete character</span>
<span class="w">   </span><span class="nf">dec</span><span class="w"> </span><span class="no">cl</span><span class="w">		</span><span class="c1">; decrement counter as well</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ah</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0E</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0x08</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">10</span><span class="no">h</span><span class="w">		</span><span class="c1">; backspace on the screen</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="err">&#39;</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">10</span><span class="no">h</span><span class="w">		</span><span class="c1">; blank character out</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0x08</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">10</span><span class="no">h</span><span class="w">		</span><span class="c1">; backspace again</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="no">.loop</span><span class="w">	</span><span class="c1">; go to the main loop</span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">.done:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w">	</span><span class="c1">; null terminator</span>
<span class="w">   </span><span class="nf">stosb</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ah</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0E</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0D</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">0x10</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0A</span><span class="w"></span>
<span class="w">   </span><span class="nf">int</span><span class="w"> </span><span class="mi">0x10</span><span class="w">		</span><span class="c1">; newline</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">ret</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">strcmp:</span><span class="w"></span>
<span class="w"> </span><span class="nl">.loop:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">si</span><span class="p">]</span><span class="w">   </span><span class="c1">; grab a byte from SI</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">bl</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">di</span><span class="p">]</span><span class="w">   </span><span class="c1">; grab a byte from DI</span>
<span class="w">   </span><span class="nf">cmp</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="no">bl</span><span class="w">     </span><span class="c1">; are they equal?</span>
<span class="w">   </span><span class="nf">jne</span><span class="w"> </span><span class="no">.notequal</span><span class="w">  </span><span class="c1">; nope, we&#39;re done.</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">cmp</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w">  </span><span class="c1">; are both bytes (they were equal before) null?</span>
<span class="w">   </span><span class="nf">je</span><span class="w"> </span><span class="no">.done</span><span class="w">   </span><span class="c1">; yes, we&#39;re done.</span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">inc</span><span class="w"> </span><span class="no">di</span><span class="w">     </span><span class="c1">; increment DI</span>
<span class="w">   </span><span class="nf">inc</span><span class="w"> </span><span class="no">si</span><span class="w">     </span><span class="c1">; increment SI</span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="no">.loop</span><span class="w">  </span><span class="c1">; loop!</span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">.notequal:</span><span class="w"></span>
<span class="w">   </span><span class="nf">clc</span><span class="w">  </span><span class="c1">; not equal, clear the carry flag</span>
<span class="w">   </span><span class="nf">ret</span><span class="w"></span>
<span class="w"> </span>
<span class="w"> </span><span class="nl">.done:</span><span class="w"> 	</span>
<span class="w">   </span><span class="nf">stc</span><span class="w">  </span><span class="c1">; equal, set the carry flag</span>
<span class="w">   </span><span class="nf">ret</span><span class="w"></span>
<span class="w"> </span>
<span class="w">   </span><span class="nf">times</span><span class="w"> </span><span class="mi">510</span><span class="p">-(</span><span class="no">$-$$</span><span class="p">)</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">   </span><span class="nf">dw</span><span class="w"> </span><span class="mi">0</span><span class="no">AA55h</span><span class="w"> </span><span class="c1">; some BIOSes require this signature</span>
</pre></div>
<p>To assemble on Windows:
</p>
<div class="mw-highlight mw-highlight-lang-bat mw-content-ltr" dir="ltr"><pre><span></span>nasm kernel.asm -f bin -o kernel.bin
partcopy kernel.bin 0 200 -f0
</pre></div>
<p>Or on Linux:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>nasm kernel.asm -f bin -o kernel.bin
dd <span class="k">if</span><span class="o">=</span>kernel.bin <span class="nv">of</span><span class="o">=</span>/dev/sda
</pre></div>
<p>Those commands assemble your kernel binary and write them to the first disk (sda might be your system disk, so use sdb, sdc etc. according to your configuration. USB-sticks also appear as one of the "sd" devices). Go ahead and test out your operating system now!
</p>
<h2><span id="What_next.3F"></span><span class="mw-headline" id="What_next?">What next?</span></h2>
<p>Why, that's up to you of course! You could add more commands, expand your OS to another sector and learn to use the BIOS sector load functions, add a stack and improve the calls, etc.
</p><p>Have fun with your OS, however you decide to write it!
</p><p><b>EDIT on December 12 2008: I've written a second part to this tutorial at <a href="Real_mode_assembly_II" title="Real mode assembly II">Real mode assembly II</a>. This and future parts will have less code to copy and paste and more theory!</b>
</p>
<pre>&lt;- none  |  <a href="Real_mode_assembly_II" title="Real mode assembly II">Real mode assembly II</a> -&gt;
</pre>
<!-- 
NewPP limit report
Cached time: 20250211150310
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.057 seconds
Real time usage: 0.484 seconds
Preprocessor visited node count: 126/1000000
Post‐expand include size: 2167/2097152 bytes
Template argument size: 542/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 23568/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    8.599      1 -total
 42.74%    3.675      1 Template:Rating
 37.47%    3.222      2 Template:If
 31.61%    2.718      2 Template:Show1
 31.02%    2.667      1 Template:Warning
 16.29%    1.401      1 Template:Tone
 11.02%    0.947      2 Template:Eq
  8.22%    0.707      1 Template:FirstPerson
  7.72%    0.664      2 Template:NoteBox
  5.80%    0.499      2 Template:Eq1
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2493-0!canonical and timestamp 20250211150309 and revision id 27894.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;oldid=27894">https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;oldid=27894</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Tone" title="Category:Tone">Tone</a></li><li><a href="./Category:Articles_Written_in_First_Person" title="Category:Articles Written in First Person">Articles Written in First Person</a></li><li><a href="./Category:Level_1_Tutorials" title="Category:Level 1 Tutorials">Level 1 Tutorials</a></li><li><a href="./Category:Assembly" title="Category:Assembly">Assembly</a></li><li><a href="./Category:Real_mode_assembly" title="Category:Real mode assembly">Real mode assembly</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Real+mode+assembly+I" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Real_mode_assembly_I#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Real_mode_assembly_I" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Real_mode_assembly_I&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Real_mode_assembly_I"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Real_mode_assembly_I" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Real_mode_assembly_I" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;oldid=27894" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 9 July 2023, at 04:44.</li>
	<li id="footer-info-0">This page has been accessed 5,410 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Real_mode_assembly_I&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.057","walltime":"0.484","ppvisitednodes":{"value":126,"limit":1000000},"postexpandincludesize":{"value":2167,"limit":2097152},"templateargumentsize":{"value":542,"limit":2097152},"expansiondepth":{"value":15,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":23568,"limit":5000000},"timingprofile":["100.00%    8.599      1 -total"," 42.74%    3.675      1 Template:Rating"," 37.47%    3.222      2 Template:If"," 31.61%    2.718      2 Template:Show1"," 31.02%    2.667      1 Template:Warning"," 16.29%    1.401      1 Template:Tone"," 11.02%    0.947      2 Template:Eq","  8.22%    0.707      1 Template:FirstPerson","  7.72%    0.664      2 Template:NoteBox","  5.80%    0.499      2 Template:Eq1"]},"cachereport":{"timestamp":"20250211150310","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":596});});</script>
</body>
</html>