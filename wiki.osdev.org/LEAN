<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>LEAN - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"9c74ea6b0375d9b6290589a6","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"LEAN","wgTitle":"LEAN","wgCurRevisionId":27486,"wgRevisionId":27486,"wgArticleId":2851,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Filesystems"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"LEAN","wgRelevantArticleId":2851,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{
"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-LEAN rootpage-LEAN skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">LEAN</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="LEAN#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="LEAN#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear: right; border:1px solid #aaaaaa; background:#eee; text-align:center; width:200px; ;"><tbody><tr><th style="background:#ffce7b; padding:0.3em; font-size:1.1em;"><a href="File_Systems" title="File Systems">Filesystems</a></th></tr><tr><th>Virtual Filesystems</th></tr><tr><td><div>
<p><a href="VFS" title="VFS">VFS</a><br />
</p>
</div></td></tr><tr><th>Disk Filesystems</th></tr><tr><td><div>
<p><a href="FAT" title="FAT">FAT</a> <a href="FAT12" class="mw-redirect" title="FAT12">12</a>/<a href="FAT16" class="mw-redirect" title="FAT16">16</a>/<a href="FAT32" class="mw-redirect" title="FAT32">32</a>, <a href="VFAT" class="mw-redirect" title="VFAT">VFAT</a>, <a href="ExFAT" title="ExFAT">ExFAT</a><br />
<a href="Ext2" title="Ext2">Ext 2</a>/<a href="Ext3" title="Ext3">3</a>/<a href="Ext4" title="Ext4">4</a><br />
<a class="mw-selflink selflink">LEAN</a><br />
<a href="HPFS" title="HPFS">HPFS</a><br />
<a href="NTFS" title="NTFS">NTFS</a><br />
<a href="HFS" title="HFS">HFS</a><br />
<a href="HFS+" title="HFS+">HFS+</a><br />
<a href="MFS" title="MFS">MFS</a><br />
<a href="ReiserFS" title="ReiserFS">ReiserFS</a><br />
<a href="FFS_(Amiga)" title="FFS (Amiga)">FFS (Amiga)</a><br />
<a href="FFS_(BSD)" class="mw-redirect" title="FFS (BSD)">FFS (BSD)</a>/<a href="UFS" title="UFS">UFS</a><br />
<a href="BeFS" title="BeFS">BeFS</a><br />
<a href="BFS" title="BFS">BFS</a><br />
<a href="XFS" title="XFS">XFS</a><br />
<a href="SFS" title="SFS">SFS</a><br />
<a href="ZDSFS" title="ZDSFS">ZDSFS</a><br />
<a href="ZFS" title="ZFS">ZFS</a><br />
<a href="USTAR" title="USTAR">USTAR</a><br />
</p>
</div></td></tr><tr><th>CD/DVD Filesystems</th></tr><tr><td><div>
<p><a href="ISO_9660" title="ISO 9660">ISO 9660</a><br />
<a href="Joliet" title="Joliet">Joliet</a><br />
<a href="UDF" title="UDF">UDF</a><br />
</p>
</div></td></tr><tr><th><a href="./Category:Network_Filesystems" title="Category:Network Filesystems">Network Filesystems</a></th></tr><tr><td><div>
<p><a href="NFS" title="NFS">NFS</a><br />
<a href="RFS" title="RFS">RFS</a><br />
<a href="AFS" title="AFS">AFS</a><br />
</p>
</div></td></tr><tr><th>Flash Filesystems</th></tr><tr><td><div>
<p><a href="JFFS2" title="JFFS2">JFFS2</a><br />
<a href="YAFFS" title="YAFFS">YAFFS</a><br />
</p>
</div></td></tr></tbody></table>
<p>LEAN is a (recursive) backronym that stands for "Lean yet Effective Allocation and Naming" and is an alternative to the FAT filesystem used by the <a rel="nofollow" class="external text" href="http://freedos-32.sourceforge.net/">FreeDOS-32</a> and <a rel="nofollow" class="external text" href="https://www.fysnet.net/fysos.htm">FYSOS</a> projects.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="LEAN#Information"><span class="tocnumber">1</span> <span class="toctext">Information</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="LEAN#Partition_Layout"><span class="tocnumber">2</span> <span class="toctext">Partition Layout</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="LEAN#Superblock"><span class="tocnumber">3</span> <span class="toctext">Superblock</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="LEAN#Bitmap"><span class="tocnumber">4</span> <span class="toctext">Bitmap</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="LEAN#Inode"><span class="tocnumber">5</span> <span class="toctext">Inode</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="LEAN#Indirect_Addressing"><span class="tocnumber">6</span> <span class="toctext">Indirect Addressing</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="LEAN#Tools"><span class="tocnumber">7</span> <span class="toctext">Tools</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="LEAN#More_Information"><span class="tocnumber">8</span> <span class="toctext">More Information</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="LEAN#See_Also"><span class="tocnumber">9</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="LEAN#Threads"><span class="tocnumber">9.1</span> <span class="toctext">Threads</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="LEAN#External_Links"><span class="tocnumber">9.2</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Information">Information</span></h2>
<p>LEAN uses an extent-based allocation algorithm and is designed to use the little-endian byte ordering. There have been a total of 8 revisions (at the time of writing) and the changelog for each release can be found in the specification (see link below). LEAN provides the following features:
</p>
<ul><li>Supports Unicode long file names (in contrary to FAT long names, patented by Microsoft).</li>
<li>Supports extended attributes (name-value metadata, embedded in files or forks).</li>
<li>Requires only a small memory footprint and isn't too intensive on the CPU.</li>
<li>Fairly easy to implement and to understand.</li>
<li>Suitable for both large and small volumes.</li>
<li>Hard and symbolic links.</li>
<li>POSIX-compatible.</li></ul>
<p>A more detailed overview of the filesystem's actual capabilities:
</p>
<ul><li>arbitrary sized allocation unit (usually matching the sector size of the media, but not required)</li>
<li>A maximum volume size of 2^63 - 1 sectors</li>
<li>A maximum file size of 2^64 - 1 bytes</li>
<li>File names of up to 4068 bytes (case sensitive and in UTF-8 format)</li></ul>
<h2><span class="mw-headline" id="Partition_Layout">Partition Layout</span></h2>
<p>To improve locality in space and to help dynamically change the size of a volume, the disk is logically subdivided into bands, made up of several contiguous blocks. Bands are equally sized, perhaps except the last one, and must be made up of a power of two worth of blocks. A volume contains at least one band. Bands are numbered starting from 0, where block 0 is the first block of band 0.
</p><p>Each band contains a portion of the bitmap representing the allocation state of the blocks of that band. That is, each bitmap portion represents the state of closely located blocks. The bitmap portion for each band must start at the first block of the band. Band 0 is an exception in that it contains blocks reserved for the boot loader and the superblock, thus a specific field is used to tell where the bitmap of band 0 starts.  See the image below.
</p><p><img src="https://www.fysnet.net/leanfs/lean_layout.png" alt="lean_layout.png" />
</p>
<h2><span class="mw-headline" id="Superblock">Superblock</span></h2>
<p>The superblock is a structure containing fundamental information about a LEAN volume. The superblock must be stored in one of any block in range from 1 to 32, inclusive.  The specification specifies how to find this superblock.
</p>
<table class="wikitable" style="width: 85%;">

<tbody><tr>
<th>Member
</th>
<th>Definition
</th></tr>
<tr>
<td style="width: 15%">uint32_t checksum
</td>
<td style="width: 85%">The checksum value for the superblock. All 32-bit dwords in this block or included in the calculation.
</td></tr>
<tr>
<td>uint32_t magic
</td>
<td>This must be equal to 0x4E41454C (the 'LEAN' characters in ASCII), and it must be used to identify a valid LEAN file system. It should be used to find the superblock backup in case the primary copy gets lost or damaged.
</td></tr>
<tr>
<td>uint16_t fsVersion
</td>
<td>This field identifies the version of the LEAN file system, and it is provided for future development. The high byte identifies the major version number and the low byte the minor version number (for example 0x0110 would mean version 1.16). At present, in the alpha development stage, it must be set to 0x0008 (that is version 0.8) and drivers must not try to access an unknown file system version, backward compatibility making no sense.
</td></tr>
<tr>
<td>uint8_t preallocCount
</td>
<td>The count minus one of contiguous blocks that the driver should try to preallocate when a new block is to be added to a file. A value of zero means that the driver should append a single block. Values greater than zero are recommended, especially for slowly-growing files such as directories, to reduce fragmentation and improve locality.
</td></tr>
<tr>
<td>uint8_t logBlocksPerBand
</td>
<td>The base-2 logarithm of the number of blocks per band. The latter is easily computed as 1 &lt;&lt; logBlocksPerBand. For 512-byte blocks, it must be at least equal to 12 (4096 bits per band, that is 512 bytes of a block), so that a bitmap portion is always made up of an integral amount of blocks. This field must be equal to 13 for 1024-byte blocks, 14 for 2048-byte blocks, 15 for 4096-byte blocks, and so on. This means, when using 512-byte blocks, the smallest band size is 4096 sectors, that is 2 MiB.
</td></tr>
<tr>
<td>uint32_t state
</td>
<td>This field identifies the state of the file system.
<p>Bit 0 (the LSB) is the clean unmount bit: it must be set to '0' while the volume is mounted, and it must set '1' while the volume is unmounted. Thus, if a driver finds this bit set to '0' when mounting a volume, it means the volume was not unmounted properly.
Bit 1 is the error bit: it must be normally '0'. Drivers must set it to '1' in case of major errors, like when file system corruption is detected. File system checkup programs may use this bit to know if some major problem happened with the volume.
Bits 2 to 31 are reserved for future use.
</p>
</td></tr>
<tr>
<td>uint8_t uuid[16]
</td>
<td>A 128-bit universally unique identifier (UUID) that should uniquely identify the volume. A driver should use it to check for media change in a removable media drive. A driver may use it for automatic volume identification. Drivers must create a sequence of 16 bytes as unique as possible, for example using a good random number generator or one of the canonical algorithms for UUID generation.
</td></tr>
<tr>
<td>char volumeLabel[64]
</td>
<td>A descriptive string, encoded in Unicode UTF-8, null-terminated, to help the user identify the volume. It may be empty.
</td></tr>
<tr>
<td>uint64_t blockCount
</td>
<td>The total number of blocks that form the volume.
</td></tr>
<tr>
<td>uint64_t freeBlockCount
</td>
<td>The number of free (or available, or unallocated) blocks in the volume. A driver must keep it consistent to the rest of the file system to measure the free volume space to store files, directories and book keeping. A value of zero must mean disk full. Drivers may choose to not update this field every time there is a change if performance is a constraint or the disk has limited write capabilities (e.g. flash memories). However, this field must be updated when dismounting the volume.
</td></tr>
<tr>
<td>uint64_t primarySuper
</td>
<td>The address of the block containing the primary copy of the superblock. A driver must use this number to know where to write changes made to the superblock back to disk. This field is provided for robustness, for example against repair utilities operating on a disk containing a LEAN file system image file.
</td></tr>
<tr>
<td>uint64_t backupSuper
</td>
<td>The address of the block containing the backup copy of the superblock. A driver must use this number to know where to write the backup copy when changes are made to the superblock.
<p>In the event the primary copy of the superblock gets lost or damaged, recovery utilities should search for the backup copy of the superblock looking for valid magic and checksum fields, and may also use the backupSuper field itself for further validation.
</p>
</td></tr>
<tr>
<td>uint64_t bitmapStart
</td>
<td>The address of the block where the bitmap of the first band (that is, band 0) starts. This is, usually but not mandated, the block right after the superblock. For any other band, the bitmap must start in the first block of the band. The size of the bitmap in each band is related to the logBlocksPerBand field.
</td></tr>
<tr>
<td>uint64_t rootInode
</td>
<td>The inode number (that is, the address of the first block) of the root directory. This is, usually but not mandated, the block right after the bitmap for band 0.
</td></tr>
<tr>
<td>uint64_t badInode
</td>
<td>The inode number (that is, the address of the first block) of a pseudo-file to track bad blocks. This pseudo-file should be generated and managed by a file system checkup program, and should be made up of any blocks that the program detected as bad. This ensures that a driver can not allocate them. If the volume has no bad blocks, badInode must be zero. See a later section for the format of this pseudo-file.
</td></tr>
<tr>
<td>uint64_t journalInode
</td>
<td>The inode number of the "file" representing the Journal data. This field may be zero indicating no Journal. An implementation must verify the Journal Data before using it. It is outside this specification on how this Journal is to be formatted/used. See a later section for more information.
</td></tr>
<tr>
<td>uint8_t logBlockSize
</td>
<td>The base-2 logarithm of the size of a block in bytes when this volume was formatted. A value of 9 is 512, 10 = 1024, 11 = 2048, 12 = 4096, and so on. It is calculated as 1 &lt;&lt; logBlockSize. This value must be at least 8.
</td></tr>
<tr>
<td>uint8_t reserved0[7]
</td>
<td>Padding, reserved for future use. See the definition for Reserved
</td></tr>
<tr>
<td>uint8_t reserved1[344]<sup>(1)</sup>
</td>
<td>Reserved for future use. These bytes pad the size of the superblock structure to the size of the block used and must be included in checksum calculation. A value of 344 is used for 512-byte blocks. See the definition for Reserved.
<p><sup>(1)</sup> 344 for 512-byte blocks, 865 for 1024-byte blocks, 1880 for 2048-byte blocks, 3928 for 4096-byte blocks, etc.
</p>
</td></tr></tbody></table>
<h2><span class="mw-headline" id="Bitmap">Bitmap</span></h2>
<p>The complete bitmap is a non-contiguous data structure, made up of blocks that, as a whole, form an array of bits, each of them indicating the allocated/unallocated state of each block of a volume. The bitmap is not contiguous because its blocks are subdivided into bands, instead of being stored in a single chunk in a fixed location.  Each Band has its own bitmap.
</p>
<h2><span class="mw-headline" id="Inode">Inode</span></h2>
<p>All fundamental metadata of a file are stored in a structure called inode structure. Such file metadata include file size, attributes and time stamps, as well as the means to access directly- and indirectly-addressable extents of a file.
</p>
<table class="wikitable" style="width: 85%;">

<tbody><tr>
<th>Member
</th>
<th>Definition
</th></tr>
<tr>
<td style="width: 20%">uint32_t checksum
</td>
<td style="width: 80%">The checksum value for the inode structure. Any optional inline extended attributes or file data following the inode structure are not part of the inode structure itself, thus must not be included in checksum calculation.
</td></tr>
<tr>
<td>uint32_t magic
</td>
<td>This must be equal to 0x45444F4E (the 'NODE' characters in ASCII).
</td></tr>
<tr>
<td>uint8_t extentCount
</td>
<td>The number of valid extent specifications stored in the inode structure, that is the count of the first elements in the extentStarts and extentSizes arrays that refer to actual file extents, from 1 (the first extent contains the inode structure itself) to extentsPerInode = 6. Directly-addressable extents must be used from the first to the last before using indirect blocks. If extentCount &lt; extentsPerInode, unused extent specification are undefined. If extentCount &lt; extentsPerInode and any of indirectCount, firstIndirect, or lastIndirect is not zero, this inode is considered corrupt.
</td></tr>
<tr>
<td>uint8_t reserved[3]
</td>
<td>Padding, reserved for future use. See the definition for Reserved.
</td></tr>
<tr>
<td>uint32_t indirectCount
</td>
<td>The number of indirect blocks owned by the file.
</td></tr>
<tr>
<td>uint32_t linkCount
</td>
<td>If this file is not a fork, this field must be equal to the number of hard links (the count of directory entries) referring to this file. If this file is a fork, this field must be equal to the number of non-fork files referring to this fork. Drivers may implement fork sharing and copy-on-write. In any case, for non-deleted files this field must be at least 1.
</td></tr>
<tr>
<td>uint32_t uid
</td>
<td>The numeric identifier of the user that owns the file. Interpretation of this field is operating system dependent. A mono-user driver must use zero.
</td></tr>
<tr>
<td>uint32_t gid
</td>
<td>The numeric identifier of the group that owns of the file. Interpretation of this field is operating system dependent. A mono-user driver must use zero.
</td></tr>
<tr>
<td>uint32_t attributes
</td>
<td>The attributes mask for the file, see enum InodeAttributes. It includes POSIX permissions, behavior flags and the file type specification. Interpretation of permissions is operating system dependent. A mono-user driver must use the owner user permission bits only (ia?USR). Note that the "file type" values are mutually exclusive enumerated values, they are not single bits that can be combined. The iaFmtMask mask can be used to retrieve the file type.
</td></tr>
<tr>
<td>uint64_t fileSize
</td>
<td>The size in bytes of the file data, thus excluding the size of the inode structure, the optional extra space for inline extended attributes, and indirect blocks.
</td></tr>
<tr>
<td>uint64_t blockCount
</td>
<td>The number of data blocks (thus excluding indirect blocks, and including the first block with the inode structure) allocated for the file. Must always be at least 1. A driver may preallocate more blocks than required for a specified fileSize to implement strategies to reduce fragmentation.
</td></tr>
<tr>
<td>int64_t accessTime
</td>
<td>Last access time stamp. This field is computed as the signed number of microseconds since 1970-01-01 00:00:00.000000 UTC, not including leap seconds. Drivers may choose to not update this field if performance is a constraint or the disk has limited write capabilities (e.g. flash memories). A mount-time flag or an open-time flag may be implemented to disable last access time stamps, and the implementation may want this to be the default. Initially it must have the same value as creationTime. If the operating system semantics allows it, drivers may delay update of this time stamp instead of updating it at every access.
</td></tr>
<tr>
<td>int64_t statusChangeTime
</td>
<td>Status modification time stamp. This field is computed as the signed number of microseconds since 1970-01-01 00:00:00.000000 UTC, not including leap seconds. Initially it must have the same value as creationTime. If the operating system semantics allows it, drivers may delay update of this time stamp instead of updating it at every modification to the inode structure.
</td></tr>
<tr>
<td>int64_t modificationTime
</td>
<td>Last data modification time stamp. This field is computed as the signed number of microseconds since 1970-01-01 00:00:00.000000 UTC, not including leap seconds. Initially it must have the same value as creationTime. If the operating system semantics allows it, drivers may delay update of this time stamp instead of updating it at every write to the file.
</td></tr>
<tr>
<td>int64_t creationTime
</td>
<td>File creation time stamp. This field is computed as the signed number of microseconds since 1970-01-01 00:00:00.000000 UTC, not including leap seconds. Depending on the operating system semantics, this field may be greater than the other time stamps if this file is created as a copy of an existing file.
</td></tr>
<tr>
<td>uint64_t firstIndirect
</td>
<td>The address of the first indirect block of the file. If the file has no indirect blocks the value of this field must be zero. Example: If there is only 1 indirect block currently being used, this will have the same value as lastIndirect.
</td></tr>
<tr>
<td>uint64_t lastIndirect
</td>
<td>The address of the last indirect block of the file. If the file has no indirect blocks the value of this field must be zero. Example: If there is only 1 indirect block currently being used, this will have the same value as firstIndirect.
</td></tr>
<tr>
<td>uint64_t fork
</td>
<td>If this file is not a fork, this field is the address of the first block of the optional fork associated with this file, or zero if this file has not a fork. If this file is a fork, this field must be zero.
</td></tr>
<tr>
<td>uint64_t extentStarts[extentsPerInode]
</td>
<td>The array of starting block addresses of the extent specifications. The count of valid extent specifications, starting from index 0, is determined by the extentCount field. Any unused extent specification is unspecified. Note that the first element of this array is also -by definition- the address of the block containing this inode structure.
</td></tr>
<tr>
<td>uint32_t extentSizes[extentsPerInode]
</td>
<td>The array of extent sizes of the extent specifications. Each element represents the size in blocks of the corresponding extent whose first block is specified in extentStarts.
</td></tr></tbody></table>
<h2><span class="mw-headline" id="Indirect_Addressing">Indirect Addressing</span></h2>
<p>If a file needs more than extentsPerInode extents, indirect addressing is used for subsequent extents. An indirect block is a block storing an array of extentsPerIndirect extent specifications instead of file data. Indirect blocks are linked together to form a doubly-linked list in order to support arbitrary file lengths.
</p>
<table class="wikitable" style="width: 85%;">

<tbody><tr>
<th>Member
</th>
<th>Definition
</th></tr>
<tr>
<td style="width: 20%">uint32_t checksum
</td>
<td style="width: 80%">The checksum value for the indirect block. All bytes in the block do count for checksum calculation.
</td></tr>
<tr>
<td>uint32_t magic
</td>
<td>This must be equal to 0x58444E49 (the 'INDX' characters in ASCII).
</td></tr>
<tr>
<td>uint64_t blockCount
</td>
<td>The total number of blocks addressable using this indirect block. A driver should use this information to quickly traverse the list of indirect blocks to find the desired data block. It must be equal to the sum of the used extentSizes (see below).
</td></tr>
<tr>
<td>uint64_t inode
</td>
<td>The inode number of the file this indirect block belongs to. This is provided for robustness.
</td></tr>
<tr>
<td>uint64_t thisblock
</td>
<td>The address of the block storing this indirect block. This is provided for robustness.
</td></tr>
<tr>
<td>uint64_t prevIndirect
</td>
<td>The address of the previous indirect block. If there is no previous indirect block, this field must be zero. A driver may use this value to traverse the list of indirect blocks in reverse order.
</td></tr>
<tr>
<td>uint64_t nextIndirect
</td>
<td>The address of the next indirect block. If there is no next indirect block, this field must be zero. This is the primary means for a driver to traverse the list of indirect blocks to seek into a file.
</td></tr>
<tr>
<td>uint16_t extentCount
</td>
<td>The number of valid extent specifications stored in the indirect block, that is the count of the first elements in the extentStarts and extentSizes arrays that refer to actual file extents. If the indirect block is not the last indirect block of a file, all extent specifications must be in use, that is extentCount must be equal to extentsPerIndirect.
</td></tr>
<tr>
<td>uint8_t reserved0[2]
</td>
<td>Padding, reserved for future use. See the definition for Reserved.
</td></tr>
<tr>
<td>uint32_t reserved1
</td>
<td>Padding, reserved for future use. See the definition for Reserved.
</td></tr>
<tr>
<td>uint64_t extentStarts[extentsPerIndirect]
</td>
<td>The array of starting block addresses of the extent specifications.
</td></tr>
<tr>
<td>uint32_t extentSizes[extentsPerIndirect]
</td>
<td>The array of extent sizes of the extent specifications. Each element represents the size in blocks of the corresponding extent whose first block is specified in extentStarts.
</td></tr>
<tr>
<td>uint8_t reserved2[n]
</td>
<td>Zero to eleven bytes. A 512-byte block will have zero bytes here. A 4096-byte block will have 8 bytes here. The value of these bytes are included in the checksum calculation. See the definition for Reserved.
</td></tr></tbody></table>
<h2><span class="mw-headline" id="Tools">Tools</span></h2>
<p>The creators of LEAN have a reference implementation and binaries of a LEAN file manager (Windows/Debian/Linux) available on their website. See <a rel="nofollow" class="external text" href="http://www.fysnet.net/leanfs/downloads.php">this page</a> for more information.
</p>
<h2><span class="mw-headline" id="More_Information">More Information</span></h2>
<p>The specification, linked below, details these structures and their members in more detail, as well as information on other aspects of the file system.
</p>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="Threads">Threads</span></h3>
<ul><li><a href="http://forum.osdev.org/viewtopic.php?t=41924" class="extiw" title="topic:41924">About LeanFS</a></li>
<li><a href="http://forum.osdev.org/viewtopic.php?t=37558" class="extiw" title="topic:37558">LeanFS and 4,096-bytes sectors</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="https://www.fysnet.net/leanfs/index.php">LEAN Overview 0.8</a> (<a rel="nofollow" class="external text" href="http://freedos-32.sourceforge.net/lean/">LEAN Overview 0.6</a>)</li>
<li><a rel="nofollow" class="external text" href="https://www.fysnet.net/leanfs/specification.php">LEAN 0.8 Specification</a> (<a rel="nofollow" class="external text" href="http://freedos-32.sourceforge.net/lean/specification.php">LEAN 0.6 Specification</a>)</li></ul>
<!-- 
NewPP limit report
Cached time: 20250212011532
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.028 seconds
Real time usage: 0.029 seconds
Preprocessor visited node count: 364/1000000
Post‐expand include size: 3240/2097152 bytes
Template argument size: 2358/2097152 bytes
Highest expansion depth: 8/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    6.550      1 Template:Filesystems
100.00%    6.550      1 -total
 84.76%    5.552      1 Template:SmallNavBox
 64.06%    4.196     20 Template:If
 43.94%    2.878     20 Template:Show1
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2851-0!canonical and timestamp 20250212011532 and revision id 27486.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=LEAN&amp;oldid=27486">https://wiki.osdev.org/index.php?title=LEAN&amp;oldid=27486</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="./Category:Filesystems" title="Category:Filesystems">Filesystems</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=LEAN" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="LEAN#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="LEAN" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:LEAN&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="LEAN"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LEAN&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LEAN&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/LEAN" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="./Special:RecentChangesLinked/LEAN" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LEAN&amp;oldid=27486" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LEAN&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 9 November 2022, at 22:15.</li>
	<li id="footer-info-0">This page has been accessed 2,854 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=LEAN&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.028","walltime":"0.029","ppvisitednodes":{"value":364,"limit":1000000},"postexpandincludesize":{"value":3240,"limit":2097152},"templateargumentsize":{"value":2358,"limit":2097152},"expansiondepth":{"value":8,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":0,"limit":5000000},"timingprofile":["100.00%    6.550      1 Template:Filesystems","100.00%    6.550      1 -total"," 84.76%    5.552      1 Template:SmallNavBox"," 64.06%    4.196     20 Template:If"," 43.94%    2.878     20 Template:Show1"]},"cachereport":{"timestamp":"20250212011532","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":125});});</script>
</body>
</html>