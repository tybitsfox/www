<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>User:Johnburger/Demo/Ints/Util - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"d7d3a3a37d7818f85771a3d2","wgCSPNonce":false,"wgCanonicalNamespace":"User","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":2,"wgPageName":"User:Johnburger/Demo/Ints/Util","wgTitle":"Johnburger/Demo/Ints/Util","wgCurRevisionId":21444,"wgRevisionId":21444,"wgArticleId":3536,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"User:Johnburger/Demo/Ints/Util","wgRelevantArticleId":3536,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],
"wgRestrictionMove":[],"wgRelevantUserName":"Johnburger","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="../../../favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="../../../opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="../../../api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-2 ns-subject page-User_Johnburger_Demo_Ints_Util rootpage-User_Johnburger skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-namespace">User</span><span class="mw-page-title-separator">:</span><span class="mw-page-title-main">Johnburger/Demo/Ints/Util</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="https://wiki.osdev.org/User:Johnburger" title="User:Johnburger">User:Johnburger</a>&lrm; | <a href="../../Demo" title="User:Johnburger/Demo">Demo</a></span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Util#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Util#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>There are four utility functions and a useful table that different interrupt handlers may want to use.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Util#Ints.Switch"><span class="tocnumber">1</span> <span class="toctext">Ints.Switch</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Util#Ints.System"><span class="tocnumber">2</span> <span class="toctext">Ints.System</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="Util#.Init"><span class="tocnumber">2.1</span> <span class="toctext">.Init</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="Util#.Done"><span class="tocnumber">2.2</span> <span class="toctext">.Done</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="Util#Ints.Hex"><span class="tocnumber">3</span> <span class="toctext">Ints.Hex</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="Util#Ints.Name"><span class="tocnumber">4</span> <span class="toctext">Ints.Name</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="Util#Demo/Ints/Util.inc"><span class="tocnumber">5</span> <span class="toctext">Demo/Ints/Util.inc</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Ints.Switch"><code>Ints.Switch</code></span></h2>
<p>This function switches to the next available Task. It does it by getting the current Task Register, then looking past that one in the GDT for the next available TSS. If it reaches the end of the GDT it starts from the beginning again. If it finds a different one, it <code>JMP</code>s to it, invoking a Task Switch. Otherwise, it simply returns.
</p><p>Note that there are some TSSes that should NOT be switched to: in particular, the ones that are waiting around to handle any special Fault exceptions. To flag those as special, I make use of the <code><a href="../x86/Desc" title="User:Johnburger/Demo/x86/Desc">x86.Desc.Gran.Avail</a></code> bit in the Descriptor: Intel reserved that bit for system use, and that is what I want to use it for - with TSSes, at least.
</p><p>For that matter, special TSSes shouldn't be switched away from either. If they were, there'd be bouncing balls all over the carefully-crafted Hex screen contents...
</p>
<h2><span class="mw-headline" id="Ints.System"><code>Ints.System</code></span></h2>
<p>I use the <code>System.TSS</code> flag to mark a TSS as being "special", as described above. But I also need to be able to temporarily mark a normal TSS as special so that I can debug it. These two routines handle this.
</p>
<h3><span class="mw-headline" id=".Init"><code>.Init</code></span></h3>
<p>This routine marks the current Task (as indicated in the <code>TR</code>) as a <code>System.TSS</code> - unless it already is one. It returns a flag to indicate what it did, which needs to be saved and passed back to <code>.Done</code> below when the TSS is finished with.
</p>
<h3><span class="mw-headline" id=".Done"><code>.Done</code></span></h3>
<p>This routine undoes whatever <code>.Init</code> above did.
</p>
<h2><span class="mw-headline" id="Ints.Hex"><code>Ints.Hex</code></span></h2>
<p>This routine takes a number of parameters:
</p>
<ul><li>Value to display;</li>
<li>Number of Hex digits to display;</li>
<li>Where on the screen to display it;</li>
<li>What colour to use;</li></ul>
<p>and displays the Hex representation of the Value, updating the screen position.
</p>
<h2><span class="mw-headline" id="Ints.Name"><code>Ints.Name</code></span></h2>
<p>I wanted both the Fault handler and the Debugger to display register contents, but I wanted a minimal overhead. So I designed a simple table with five fields:
</p>
<ul><li>A one-byte screen location for the Debug window (the Fault window just displays them one below the other);</li>
<li>A four-character register name, with internal padding for alignment:</li>
<li>A one-byte number of Hex digits to display;</li>
<li>A one-byte offset on the stack for the register's location;</li>
<li>A one-byte offset within a TSS for the register's location.</li></ul>
<p>It turns out that even when displaying a TSS' contents, some of the values of interest are actually still on the stack. The code can distinguish those, though: the low-down offsets are stack offsets rather than TSS ones.
</p>
<h2><span id="Demo.2FInts.2FUtil.inc"></span><span class="mw-headline" id="Demo/Ints/Util.inc"><code><a href="../Demo" title="User:Johnburger/Demo/Demo">Demo</a>/<a href="Ints" title="User:Johnburger/Demo/Ints/Ints">Ints</a>/Util.inc</code></span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">;</span>
<span class="c1">; Ints/Util.inc</span>
<span class="c1">;</span>

<span class="c1">; This module holds Utility functions for various Fault handlers to use</span>

<span class="c1">;...............................................................................</span>
<span class="c1">; This function switches to the next available Task. Note that it assumes that</span>
<span class="c1">; interrupts are OFF!</span>
<span class="c1">;</span>
<span class="c1">; It cycles through the Global Descriptors looking for Idle TSSs. When it finds</span>
<span class="c1">; one, it JMPs to it - stopping the current Task, making it Idle for next time.</span>
<span class="c1">;</span>
<span class="c1">; Note that I use x86.Desc.Mem.Gran.Avail to flag a System TSS: it may be Idle</span>
<span class="c1">; now, but that&#39;d be because nothing&#39;s using it yet -  a Fault handler is a</span>
<span class="c1">; good example of a System TSS waiting to be used.</span>
<span class="c1">;</span>
<span class="c1">; Also note that if the TSS that is currently running is a System TSS, I won&#39;t</span>
<span class="c1">; switch away from it either!</span>

<span class="nl">Ints.Switch:</span><span class="w"></span>

<span class="na">.Type.Mask</span><span class="w">      </span><span class="no">EQU</span><span class="w">             </span><span class="no">x86.Desc.Type.Present</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">x86.Desc.Type.Sys</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">x86.Desc.Type.Type</span><span class="w"></span>
<span class="na">.IdleTSS</span><span class="w">        </span><span class="no">EQU</span><span class="w">             </span><span class="no">Type.Sys</span><span class="p">(</span><span class="no">TSS</span><span class="p">,</span><span class="w"> </span><span class="no">DPL0</span><span class="p">,</span><span class="w"> </span><span class="mi">386</span><span class="p">)</span><span class="w"> </span><span class="c1">; Target!</span>

<span class="w">                </span><span class="nf">STR</span><span class="w">             </span><span class="no">EAX</span><span class="w">             </span><span class="c1">; Get current TSS</span>
<span class="w">                </span><span class="nf">TEST</span><span class="w">            </span><span class="no">EAX</span><span class="p">,</span><span class="no">EAX</span><span class="w">         </span><span class="c1">; Switching Tasks yet?</span>
<span class="w">                </span><span class="nf">JZ</span><span class="w">              </span><span class="no">.End</span><span class="w">            </span><span class="c1">; No, so leave</span>

<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="no">EBX</span><span class="w">             </span><span class="c1">; Need some more registers</span>
<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="no">DS</span><span class="w">              </span><span class="c1">; And a Segment register</span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EBX</span><span class="p">,</span><span class="no">EAX</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">     </span><span class="no">WORD</span><span class="w">    </span><span class="no">AX</span><span class="p">,</span><span class="no">Selector</span><span class="p">(</span><span class="no">GDT.Alias</span><span class="p">,</span><span class="w"> </span><span class="no">GDT</span><span class="p">,</span><span class="w"> </span><span class="no">RPL0</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DS</span><span class="p">,</span><span class="no">AX</span><span class="w">           </span><span class="c1">; To point to the GDT</span>

<span class="w">                </span><span class="c1">; I know that EAX holds a TSS - but is it a System TSS?</span>
<span class="w">                </span><span class="nf">TEST</span><span class="w">    </span><span class="no">BYTE</span><span class="w">    </span><span class="p">[</span><span class="no">EBX</span><span class="err">+</span><span class="no">x86.Desc.Mem.Gran</span><span class="p">],</span><span class="no">System.TSS</span><span class="w"></span>
<span class="w">                </span><span class="nf">JNZ</span><span class="w">             </span><span class="no">.Kill</span><span class="w">           </span><span class="c1">; Yes! Abort!</span>

<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="no">EDX</span><span class="w">             </span><span class="c1">; Now need this</span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EDX</span><span class="p">,</span><span class="no">EBX</span><span class="w">         </span><span class="c1">; Starting point</span>
<span class="nl">.Loop:</span><span class="w"></span>
<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">BX</span><span class="p">,</span><span class="no">x86.Desc_size</span><span class="w">     </span><span class="c1">; Look at next descriptor</span>
<span class="w">                </span><span class="nf">JZ</span><span class="w">              </span><span class="no">.Restart</span><span class="w">             </span><span class="c1">; Overflow!</span>
<span class="w">                </span><span class="nf">CMP</span><span class="w">             </span><span class="no">BX</span><span class="p">,[</span><span class="no">GDT.Alloc.Limit</span><span class="p">]</span><span class="w"> </span><span class="c1">; Too far?</span>
<span class="w">                </span><span class="nf">JB</span><span class="w">              </span><span class="no">.Continue</span><span class="w">            </span><span class="c1">; Not yet...</span>
<span class="nl">.Restart:</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">BX</span><span class="p">,</span><span class="no">GDT.Limit</span><span class="err">+</span><span class="mi">1</span><span class="w">       </span><span class="c1">; Yes. Start at original Limit</span>
<span class="nl">.Continue:</span><span class="w"></span>
<span class="w">                </span><span class="nf">CMP</span><span class="w">             </span><span class="no">EBX</span><span class="p">,</span><span class="no">EDX</span><span class="w">         </span><span class="c1">; Looped back to here again?</span>
<span class="w">                </span><span class="nf">JE</span><span class="w">              </span><span class="no">.Finish</span><span class="w">         </span><span class="c1">; Yes, so nothing to switch to</span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AL</span><span class="p">,[</span><span class="no">EBX</span><span class="err">+</span><span class="no">x86.Desc.Mem.Type</span><span class="p">]</span><span class="w"> </span><span class="c1">; Get Descriptor Type</span>
<span class="w">                </span><span class="nf">AND</span><span class="w">             </span><span class="no">AL</span><span class="p">,.</span><span class="no">Type.Mask</span><span class="w">   </span><span class="c1">; Isolate interesting bits</span>
<span class="w">                </span><span class="nf">CMP</span><span class="w">             </span><span class="no">AL</span><span class="p">,.</span><span class="no">IdleTSS</span><span class="w">     </span><span class="c1">; Is it an Idle TSS?</span>
<span class="w">                </span><span class="nf">JNE</span><span class="w">             </span><span class="no">.Loop</span><span class="w">           </span><span class="c1">; No. Keep looking</span>

<span class="w">                </span><span class="nf">TEST</span><span class="w">    </span><span class="no">BYTE</span><span class="w">    </span><span class="p">[</span><span class="no">EBX</span><span class="err">+</span><span class="no">x86.Desc.Mem.Gran</span><span class="p">],</span><span class="no">System.TSS</span><span class="w"></span>
<span class="w">                </span><span class="nf">JNZ</span><span class="w">             </span><span class="no">.Loop</span><span class="w">           </span><span class="c1">; Ignore System TSSs too</span>

<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="no">EBX</span><span class="w">             </span><span class="c1">; Found! So JMP to it!</span>
<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="mi">0</span><span class="w">               </span><span class="c1">; (Note that Offset is ignored)</span>
<span class="w">                </span><span class="nf">JMP</span><span class="w">     </span><span class="no">FAR</span><span class="w">     </span><span class="p">[</span><span class="no">ESP</span><span class="p">]</span><span class="w">           </span><span class="c1">; Invokes Task Switch</span>
<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">ESP</span><span class="p">,</span><span class="mi">8</span><span class="w">           </span><span class="c1">; When JMPs back, continues here</span>
<span class="nl">.Finish:</span><span class="w"></span>
<span class="w">                </span><span class="nf">POP</span><span class="w">             </span><span class="no">EDX</span><span class="w"></span>
<span class="nl">.Kill:</span><span class="w"></span>
<span class="w">                </span><span class="nf">POP</span><span class="w">             </span><span class="no">DS</span><span class="w"></span>
<span class="w">                </span><span class="nf">POP</span><span class="w">             </span><span class="no">EBX</span><span class="w"></span>
<span class="nl">.End:</span><span class="w"></span>
<span class="w">                </span><span class="nf">RET</span><span class="w"></span>
<span class="c1">;...............................................................................</span>
<span class="c1">; This function sets the current TSS to be a System TSS.</span>
<span class="c1">; Output: EAX = whether it modified the Task. Pass this in EBX to .Done</span>
<span class="c1">;         GS  = GDT</span>
<span class="nl">Ints.System.Init:</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AX</span><span class="p">,</span><span class="no">Selector</span><span class="p">(</span><span class="no">GDT.Alias</span><span class="p">,</span><span class="w"> </span><span class="no">GDT</span><span class="p">,</span><span class="w"> </span><span class="no">RPL0</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">GS</span><span class="p">,</span><span class="no">AX</span><span class="w">           </span><span class="c1">; Point to GDT</span>

<span class="w">                </span><span class="nf">STR</span><span class="w">             </span><span class="no">EAX</span><span class="w">             </span><span class="c1">; Get current Task</span>
<span class="w">                </span><span class="nf">TEST</span><span class="w">            </span><span class="no">EAX</span><span class="p">,</span><span class="no">EAX</span><span class="w">         </span><span class="c1">; Is there one?</span>
<span class="w">                </span><span class="nf">JZ</span><span class="w">              </span><span class="no">.End</span><span class="w">            </span><span class="c1">; No, so nothing to do</span>
<span class="w">                </span><span class="nf">TEST</span><span class="w">    </span><span class="no">BYTE</span><span class="w">    </span><span class="p">[</span><span class="no">GS</span><span class="p">:</span><span class="no">EAX</span><span class="err">+</span><span class="no">x86.Desc.Mem.Gran</span><span class="p">],</span><span class="no">System.TSS</span><span class="w"></span>
<span class="w">                </span><span class="nf">JNZ</span><span class="w">             </span><span class="no">.System</span><span class="w">         </span><span class="c1">; Already a System TSS!</span>
<span class="w">                </span><span class="nf">OR</span><span class="w">      </span><span class="no">BYTE</span><span class="w">    </span><span class="p">[</span><span class="no">GS</span><span class="p">:</span><span class="no">EAX</span><span class="err">+</span><span class="no">x86.Desc.Mem.Gran</span><span class="p">],</span><span class="no">System.TSS</span><span class="w"></span>
<span class="w">                </span><span class="nf">JMP</span><span class="w">             </span><span class="no">.End</span><span class="w">            </span><span class="c1">; Make it one temporarily</span>
<span class="nl">.System:</span><span class="w"></span>
<span class="w">                </span><span class="nf">XOR</span><span class="w">             </span><span class="no">EAX</span><span class="p">,</span><span class="no">EAX</span><span class="w">         </span><span class="c1">; Already a System TSS! Don&#39;t touch!</span>
<span class="nl">.End:</span><span class="w"></span>
<span class="w">                </span><span class="nf">RET</span><span class="w"></span>
<span class="c1">;...............................................................................</span>
<span class="c1">; This function reverts any change made by .Init (above)</span>
<span class="c1">; Input:  EBX = EAX output from .Init</span>
<span class="c1">;         GS  = GDT</span>

<span class="nl">Ints.System.Done:</span><span class="w"></span>
<span class="w">                </span><span class="nf">TEST</span><span class="w">            </span><span class="no">EBX</span><span class="p">,</span><span class="no">EBX</span><span class="w">         </span><span class="c1">; Was current TSS modified?</span>
<span class="w">                </span><span class="nf">JZ</span><span class="w">              </span><span class="no">.End</span><span class="w">            </span><span class="c1">; No, so just leave</span>
<span class="w">                </span><span class="nf">AND</span><span class="w">     </span><span class="no">BYTE</span><span class="w">    </span><span class="p">[</span><span class="no">GS</span><span class="p">:</span><span class="no">EBX</span><span class="err">+</span><span class="no">x86.Desc.Mem.Gran</span><span class="p">],</span><span class="err">~</span><span class="no">System.TSS</span><span class="w"></span>
<span class="nl">.End:</span><span class="w"></span>
<span class="w">                </span><span class="nf">RET</span><span class="w"></span>
<span class="c1">;...............................................................................</span>
<span class="c1">; This function displays a Hex value on the screen.</span>
<span class="c1">; Input:  AH  = Colour to use</span>
<span class="c1">;         ECX = Number of digits to display</span>
<span class="c1">;         EDX = Value to display</span>
<span class="c1">;         EDI = Screen position to display</span>
<span class="c1">;         ES  = Screen segment</span>
<span class="c1">; Output: AL, EDX modified. ECX zeroed. EDI preserved</span>
<span class="nl">Ints.Hex:</span><span class="w"></span>
<span class="w">                </span><span class="nf">STD</span><span class="w">                             </span><span class="c1">; Work backwards</span>
<span class="w">                </span><span class="nf">LEA</span><span class="w">             </span><span class="no">EDI</span><span class="p">,[</span><span class="no">EDI</span><span class="err">+</span><span class="no">ECX</span><span class="p">*</span><span class="mi">2-2</span><span class="p">]</span><span class="w"> </span><span class="c1">; Point to end of number</span>
<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="no">EDI</span><span class="w">             </span><span class="c1">; Save for end</span>
<span class="nl">.Loop:</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="no">DL</span><span class="w">           </span><span class="c1">; Get lowest byte</span>
<span class="w">                </span><span class="nf">AND</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="mi">0</span><span class="no">Fh</span><span class="w">          </span><span class="c1">; Isolate low nybble</span>
<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="err">&#39;</span><span class="mi">0</span><span class="err">&#39;</span><span class="w">          </span><span class="c1">; Turn into ASCII</span>
<span class="w">                </span><span class="nf">CMP</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="err">&#39;</span><span class="mi">9</span><span class="err">&#39;</span><span class="w">          </span><span class="c1">; Too far?</span>
<span class="w">                </span><span class="nf">JBE</span><span class="w">             </span><span class="no">.NotHex</span><span class="w">         </span><span class="c1">; No</span>
<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="err">&#39;</span><span class="no">A</span><span class="err">&#39;</span><span class="p">-</span><span class="err">&#39;</span><span class="mi">9</span><span class="err">&#39;</span><span class="mi">-1</span><span class="w">    </span><span class="c1">; Yes, so turn into Hex</span>
<span class="nl">.NotHex:</span><span class="w"></span>
<span class="w">                </span><span class="nf">STOSW</span><span class="w">                           </span><span class="c1">; Store</span>
<span class="w">                </span><span class="nf">SHR</span><span class="w">             </span><span class="no">EDX</span><span class="p">,</span><span class="mi">4</span><span class="w">           </span><span class="c1">; Shift in next nybble</span>
<span class="w">                </span><span class="nf">LOOP</span><span class="w">            </span><span class="no">.Loop</span><span class="w">           </span><span class="c1">; Loop</span>
<span class="w">                </span><span class="nf">CLD</span><span class="w">                             </span><span class="c1">; Assume forwards</span>
<span class="w">                </span><span class="nf">POP</span><span class="w">             </span><span class="no">EDI</span><span class="w">             </span><span class="c1">; Saved end</span>
<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">EDI</span><span class="p">,</span><span class="mi">2</span><span class="w">           </span><span class="c1">; Past last digit</span>
<span class="w">                </span><span class="nf">RET</span><span class="w">                             </span><span class="c1">; And return</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="c1">; The following table lists the information for each register to show:</span>
<span class="c1">; Debug offset, Label, Num Hex chars, Stack offset, TSS offset</span>

<span class="nl">Ints.Names:</span><span class="w"></span>
<span class="na">.Label</span><span class="w">          </span><span class="no">EQU</span><span class="w">             </span><span class="mi">4</span><span class="w">  </span><span class="c1">; Width of label</span>
<span class="c1">;                              Debug,  Name , W,Stk,TSS</span>
<span class="w">                </span><span class="nf">DB</span><span class="w">                 </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">Int</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="mi">68</span><span class="p">,</span><span class="w"> </span><span class="mi">20</span><span class="w"> </span><span class="c1">; On stack</span>
<span class="w">                </span><span class="nf">DB</span><span class="w">                 </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">Err</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">72</span><span class="p">,</span><span class="w"> </span><span class="mi">24</span><span class="w"> </span><span class="c1">; On stack</span>
<span class="nl">.Regs:</span><span class="w"> </span><span class="c1">; Only registers from here</span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">002</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">EAX</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">64</span><span class="p">,</span><span class="w"> </span><span class="mi">40</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">011</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">EBX</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">52</span><span class="p">,</span><span class="w"> </span><span class="mi">52</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">020</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">ECX</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">60</span><span class="p">,</span><span class="w"> </span><span class="mi">44</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">02</span><span class="no">Fh</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">EDX</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">56</span><span class="p">,</span><span class="w"> </span><span class="mi">48</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">042</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">ESI</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">40</span><span class="p">,</span><span class="w"> </span><span class="mi">64</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">051</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">EDI</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">36</span><span class="p">,</span><span class="w"> </span><span class="mi">68</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">060</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">EBP</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">44</span><span class="p">,</span><span class="w"> </span><span class="mi">60</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">DAh</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">ESP</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">48</span><span class="p">,</span><span class="w"> </span><span class="mi">56</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">C7h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">EIP</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">76</span><span class="p">,</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">C2h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w">  </span><span class="no">CS</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">80</span><span class="p">,</span><span class="w"> </span><span class="mi">76</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">082</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w">  </span><span class="no">DS</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">32</span><span class="p">,</span><span class="w"> </span><span class="mi">84</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">08</span><span class="no">Dh</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w">  </span><span class="no">ES</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">28</span><span class="p">,</span><span class="w"> </span><span class="mi">72</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">098</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w">  </span><span class="no">FS</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">24</span><span class="p">,</span><span class="w"> </span><span class="mi">88</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">A3h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w">  </span><span class="no">GS</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">20</span><span class="p">,</span><span class="w"> </span><span class="mi">92</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">D5h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w">  </span><span class="no">SS</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">16</span><span class="p">,</span><span class="w"> </span><span class="mi">80</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">06</span><span class="no">Fh</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="no">Flag</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">84</span><span class="p">,</span><span class="w"> </span><span class="mi">36</span><span class="w"></span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">AFh</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="no">PDBR</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w">  </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">28</span><span class="w"> </span><span class="c1">; Minimum NOT on stack</span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">F3h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="no">Task</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">12</span><span class="p">,</span><span class="w"> </span><span class="mi">12</span><span class="w"> </span><span class="c1">; On stack</span>
<span class="w">                </span><span class="nf">DB</span><span class="w">              </span><span class="mi">0</span><span class="no">E9h</span><span class="p">,</span><span class="w"> </span><span class="err">&#39;</span><span class="w"> </span><span class="no">LDT</span><span class="err">&#39;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w">  </span><span class="mi">8</span><span class="p">,</span><span class="w"> </span><span class="mi">96</span><span class="w"></span>
<span class="na">.End</span><span class="w">            </span><span class="no">EQU</span><span class="w">             </span><span class="no">$</span><span class="w"></span>
<span class="c1">;    0000000000000000111111111111111122222222222222223333333333333333</span>
<span class="c1">;    0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF</span>
<span class="c1">;000:  _EAX:########  _EBX:########  _ECX:########  _EDX:########</span>
<span class="c1">;040:  _ESI:########  _EDI:########  _EBP:########  Flag:########</span>
<span class="c1">;080:  __DS:####  __ES:####  __FS:####  __GS:####   PDBR:########</span>
<span class="c1">;0C0:  __CS:####:######## __SS:####:######### _LDT:#### Task:####</span>
</pre></div>
<!-- 
NewPP limit report
Cached time: 20250212023530
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.029 seconds
Real time usage: 0.169 seconds
Preprocessor visited node count: 25/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 33450/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3536-0!canonical and timestamp 20250212023530 and revision id 21444.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Util&amp;oldid=21444">https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Util&amp;oldid=21444</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="../../../Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=User%3AJohnburger%2FDemo%2FInts%2FUtil" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Util#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-user" class="selected mw-list-item"><a href="Util" title="View the user page [c]" accesskey="c"><span>User page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User_talk:Johnburger/Demo/Ints/Util&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Util"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Util&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Util&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="../../../index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="../../../index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="../../../Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="../../../Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="../../../OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="../../../OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="../../../OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="../../../Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="../../../Special:WhatLinksHere/User:Johnburger/Demo/Ints/Util" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/User:Johnburger/Demo/Ints/Util" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-contributions" class="mw-list-item"><a href="../../../Special:Contributions/Johnburger" title="A list of contributions by this user"><span>User contributions</span></a></li><li id="t-log" class="mw-list-item"><a href="../../../Special:Log/Johnburger"><span>Logs</span></a></li><li id="t-userrights" class="mw-list-item"><a href="../../../Special:UserRights/Johnburger"><span>View user groups</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="../../../Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Util&amp;oldid=21444" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Util&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 29 August 2017, at 09:32.</li>
	<li id="footer-info-0">This page has been accessed 491 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="../../../OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="../../../OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="../../../OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Util&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="../../../resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="../../../resources/assets/poweredby_mediawiki_132x47.png 1.5x, ../../../resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.029","walltime":"0.169","ppvisitednodes":{"value":25,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":33450,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250212023530","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":277});});</script>
</body>
</html>