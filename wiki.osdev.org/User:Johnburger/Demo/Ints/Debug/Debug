<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>User:Johnburger/Demo/Ints/Debug/Debug - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"f29d8b0920b1de2f00031da9","wgCSPNonce":false,"wgCanonicalNamespace":"User","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":2,"wgPageName":"User:Johnburger/Demo/Ints/Debug/Debug","wgTitle":"Johnburger/Demo/Ints/Debug/Debug","wgCurRevisionId":28461,"wgRevisionId":28461,"wgArticleId":3542,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"User:Johnburger/Demo/Ints/Debug/Debug","wgRelevantArticleId":3542,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,
"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgRelevantUserName":"Johnburger","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="../../../../favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="../../../../opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="../../../../api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-2 ns-subject page-User_Johnburger_Demo_Ints_Debug_Debug rootpage-User_Johnburger skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-namespace">User</span><span class="mw-page-title-separator">:</span><span class="mw-page-title-main">Johnburger/Demo/Ints/Debug/Debug</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="https://wiki.osdev.org/User:Johnburger" title="User:Johnburger">User:Johnburger</a>&lrm; | <a href="../../../Demo" title="User:Johnburger/Demo">Demo</a></span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Debug#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Debug#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>This module leverages the '386 debug facilities to implement a "debugger".
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Debug#Design"><span class="tocnumber">1</span> <span class="toctext">Design</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Debug#Implementation"><span class="tocnumber">2</span> <span class="toctext">Implementation</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Debug#Invocation"><span class="tocnumber">3</span> <span class="toctext">Invocation</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Debug#Interaction"><span class="tocnumber">4</span> <span class="toctext">Interaction</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="Debug#Some_Fun"><span class="tocnumber">4.1</span> <span class="toctext">Some Fun</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="Debug#Resume"><span class="tocnumber">5</span> <span class="toctext">Resume</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="Debug#Recursion"><span class="tocnumber">6</span> <span class="toctext">Recursion</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="Debug#Stack_Fault"><span class="tocnumber">6.1</span> <span class="toctext">Stack Fault</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="Debug#Double_Fault"><span class="tocnumber">6.2</span> <span class="toctext">Double Fault</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="Debug#Triple_Fault"><span class="tocnumber">6.3</span> <span class="toctext">Triple Fault</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-11"><a href="Debug#Demo/Ints/Debug/Debug.inc"><span class="tocnumber">7</span> <span class="toctext">Demo/Ints/Debug/Debug.inc</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Design">Design</span></h2>
<p>The original IBM PC only entered this interrupt as a result of an <code>INT 3</code> instruction in the code. The '386 added to this with the concept of "Hardware Debug Registers". These could be set to make an INT 3 occur on a number of different system events, such as executing an instruction at a particular address (without modifying that instruction to make it an INT 3 first) or, particularly usefully, writing to a particular memory location.
</p>
<h2><span class="mw-headline" id="Implementation">Implementation</span></h2>
<p>But all that this "debugger" does is show the memory contents of (readable) Segments on the screen. This can be VERY useful! Directly after carefully crafting a system table in memory, it is handy to add a <code>DEBUG</code> macro (<code>INT 3</code>) so that you can examine the memory, and confirm that everything is as you designed it. The alternative could be a triple-fault...
</p>
<h2><span class="mw-headline" id="Invocation">Invocation</span></h2>
<p>To invoke the debugger in code, merely call the <code>DEBUG</code> macro (which does an <code>INT 3</code>). Or, at runtime, press the &lt;Pause/Break&gt; key (get it?!). To show that the debugger is working, a <a href="../../../Dingle" title="User:Johnburger/Dingle">Dingle(tm)</a> is active in the top right corner.
</p>
<h2><span class="mw-headline" id="Interaction">Interaction</span></h2>
<p>Once the memory dump is showing, you can Arrow or Page up and down, or choose other displayable Segments (Left and Right). You can also switch between showing Bytes and DWords by pressing &lt;Del&gt;.
</p>
<h3><span class="mw-headline" id="Some_Fun">Some Fun</span></h3>
<p>For giggles, use the Right arrow to display the alias for the Screen, and then scroll down to see the Hex values for the changing Dingle<a href="../../../Dingle" title="User:Johnburger/Dingle">(tm)</a>. Then scroll further to see the changes to the Screen that are showing the values for the changing Dingle<a href="../../../Dingle" title="User:Johnburger/Dingle">(tm)</a>. Inception!
</p>
<h2><span class="mw-headline" id="Resume">Resume</span></h2>
<p>To exit the Debugger, press &lt;Esc&gt;. It will clear the screen, return to the executing code, and continue where it left off - minus the borders, which are only drawn once at the beginning of the User Task.
</p>
<h2><span class="mw-headline" id="Recursion">Recursion</span></h2>
<p>One thing to note: while the Debugger is running, you can look at its operation by... invoking the Debugger. Press &lt;Break&gt; again. And again. And again. You'll have to exit the same number of times you entered. To prove it, go look at the Ring0 Stack that's active, and look at how deep it is. Press &lt;Break&gt; again. This will start a new Debugger at the beginning again, so you'll have to find the active Ring0 Stack again. Observe that it's deeper; so press &lt;Break&gt; again. And again. And... You had to do it, didn't you? Well, it's your own fault!
</p>
<h3><span class="mw-headline" id="Stack_Fault">Stack Fault</span></h3>
<p>That red lump of text has an Int of <code>0C</code>, which corresponds to a Stack fault. Sure enough, the Stack underflowed - the <code>ESP</code> value is at the limit of the stack. (If you don't see the red lump of text, press &lt;Esc&gt; a few times.) You cannot go back from here: you've caused a Stack Fault, and nothing can un-underflow it. All you can do is invoke the Debugger again. And again. And again. Want to know how deep you are? Check the <code>SS:ESP</code> value as you go. This time the value to watch out for (if you haven't changed the Stack Fault Stack Size) is <code>FFFFF000</code>. As you get nearer to this value, you get closer to underflowing the stack again. Quick: remember the values for <code>SS</code> and <code>Task</code>!
</p>
<h3><span class="mw-headline" id="Double_Fault">Double Fault</span></h3>
<p>If you keep hitting &lt;Break&gt;, you'll underflow the Stack Fault handler stack, causing another Stack Fault. The CPU will vector through the Stack Fault IDT entry, which is a Task Gate, to attempt to switch to the defined Stack Fault TSS. Unfortunately, it's marked as Busy: with us! A Fault while trying to react to a Fault is usually a Double Fault, which has its own handler, INT 08. That also has a Task Gate, to a different TSS, so a whole new context is switched in, with its own new Stack - check the <code>SS</code> and <code>Task</code> values. The important thing to realise about a Double Fault isn't that it "remembers" it was in the middle of exception handler code when another exception happens: what triggers a Double Fault is if, while the CPU is trying to <em>start</em> the handler for an exception, another exception occurs.
</p>
<h3><span class="mw-headline" id="Triple_Fault">Triple Fault</span></h3>
<p>So, let's tempt fate and underflow this stack too. By pressing &lt;Break&gt; a few more times, the Stack will underflow again, causing a Stack Fault - but that TSS is busy, so it will generate a Double Fault. Unfortunately, even <i>that</i> TSS is busy, so the CPU starts a triple-fault - which simply shuts down the CPU. The PC (or virtualisation environment) detects this state, and reboots the CPU.
</p>
<h2><span id="Demo.2FInts.2FDebug.2FDebug.inc"></span><span class="mw-headline" id="Demo/Ints/Debug/Debug.inc"><code><a href="../../Demo" title="User:Johnburger/Demo/Demo">Demo</a>/<a href="../Ints" title="User:Johnburger/Demo/Ints/Ints">Ints</a>/<a href="../../Overview#Debug_Handler" title="User:Johnburger/Demo/Overview">Debug</a>/Debug.inc</code></span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">;</span>
<span class="c1">; Ints/Debug.inc</span>
<span class="c1">;</span>

<span class="c1">; This module leverages the &#39;386 debug facilities to implement a &quot;debugger&quot;.</span>
<span class="c1">;</span>
<span class="c1">; The original IBM PC only entered this interrupt as a result of an INT 3</span>
<span class="c1">; instruction. The &#39;386 added to this with the concept of &quot;Hardware Debug</span>
<span class="c1">; Registers&quot;. These could be set to make an INT 3 occur on a number of different</span>
<span class="c1">; system events: executing an instruction at a particular address (without</span>
<span class="c1">; modifying that instruction to make it an INT 3 first); or, particularly</span>
<span class="c1">; useful, writing to a particular memory location.</span>
<span class="c1">;</span>
<span class="c1">; But all that this &quot;debugger&quot; does is show the memory contents of (readable)</span>
<span class="c1">; Segments on the screen. This can be VERY useful! Directly after carefully</span>
<span class="c1">; crafting a system table in memory, it is handy to add a DEBUG (INT 3) so that</span>
<span class="c1">; you can examine the memory, and confirm that everything is as you designed it.</span>
<span class="c1">; The alternative could be a triple-fault...</span>
<span class="c1">;</span>
<span class="c1">; To invoke the debugger in code, merely call the &quot;DEBUG&quot; macro (which does an</span>
<span class="c1">; INT 3). Or, at runtime, press the Pause/Break key (by default: get it?!). To</span>
<span class="c1">; show that the debugger is working, a Dingle(tm) is active in the top right</span>
<span class="c1">; corner.</span>
<span class="c1">;</span>
<span class="c1">; Once the memory dump is showing, you can Scroll or Page up and down, or choose</span>
<span class="c1">; other displayable Segments (Left and Right). For giggles, display the alias</span>
<span class="c1">; for the Screen, and scroll to see the changing Dingle(tm). Then scroll further</span>
<span class="c1">; to see the changes to the Screen that are showing the Dingle(tm). Inception!</span>
<span class="c1">;</span>
<span class="c1">; To exit the Debugger, press Esc (by default). It will return and continue</span>
<span class="c1">; where it left off. One thing to note: while the Debugger is running, you can</span>
<span class="c1">; look at it by... invoking the Debugger. Press Break again. And again. And</span>
<span class="c1">; again. You&#39;ll have to exit the same number of times you entered. To prove it,</span>
<span class="c1">; go look at the Ring0 Stack that&#39;s active, and watch it get deeper, and deeper,</span>
<span class="c1">; and... You had to do it, didn&#39;t you? Well, it&#39;s your own fault!</span>

<span class="c1">; Here are the colours for the different fields of the display</span>
<span class="nf">Debug.Colour.Addr</span><span class="w">   </span><span class="no">EQU</span><span class="w">         </span><span class="no">Dev.VGA.Grey</span><span class="w">  </span><span class="c1">; Colour of Address field</span>
<span class="nf">Debug.Colour.Bytes</span><span class="w">  </span><span class="no">EQU</span><span class="w">         </span><span class="no">Dev.VGA.White</span><span class="w"> </span><span class="c1">; Colour of Hex Bytes field</span>
<span class="nf">Debug.Colour.DWords</span><span class="w"> </span><span class="no">EQU</span><span class="w">         </span><span class="no">Dev.VGA.White</span><span class="w"> </span><span class="c1">; Colour of Hex DWords field</span>
<span class="nf">Debug.Colour.ASCII</span><span class="w">  </span><span class="no">EQU</span><span class="w">         </span><span class="no">Dev.VGA.Grey</span><span class="w">  </span><span class="c1">; Colour of ASCII field</span>
<span class="nf">Debug.Colour.Label</span><span class="w">  </span><span class="no">EQU</span><span class="w">         </span><span class="no">Dev.VGA.White</span><span class="w"> </span><span class="c1">; Colour of Labels</span>
<span class="nf">Debug.Colour.Regs</span><span class="w">   </span><span class="no">EQU</span><span class="w">         </span><span class="no">Dev.VGA.Grey</span><span class="w">  </span><span class="c1">; Colour of Regs field</span>
<span class="nf">Debug.Colour.Blank</span><span class="w">  </span><span class="no">EQU</span><span class="w">         </span><span class="no">Dev.VGA.Grey</span><span class="w">  </span><span class="c1">; Colour when there&#39;s nothing there</span>

<span class="c1">; Here are the scan-codes for the different functions that the debugger can do</span>
<span class="nf">Debug.Key.Quit</span><span class="w">   </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.Break</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">Dev.Key.Esc</span><span class="w"> </span><span class="c1">; Quit on Esc UP</span>
<span class="nf">Debug.Key.Up</span><span class="w">     </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.Up</span><span class="w">    </span><span class="c1">; Scroll up (earlier in memory)</span>
<span class="nf">Debug.Key.Down</span><span class="w">   </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.Down</span><span class="w">  </span><span class="c1">; Scroll down (later in memory)</span>
<span class="nf">Debug.Key.PgUp</span><span class="w">   </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.PgUp</span><span class="w">  </span><span class="c1">; Lots of .Ups</span>
<span class="nf">Debug.Key.PgDn</span><span class="w">   </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.PgDn</span><span class="w">  </span><span class="c1">; Lots of .Downs</span>
<span class="nf">Debug.Key.Format</span><span class="w"> </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.Del</span><span class="w">   </span><span class="c1">; Toggle between Bytes and DWords</span>
<span class="nf">Debug.Key.Prev</span><span class="w">   </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.Left</span><span class="w">  </span><span class="c1">; Previous Segment</span>
<span class="nf">Debug.Key.Next</span><span class="w">   </span><span class="no">EQU</span><span class="w">            </span><span class="no">Dev.Key.Right</span><span class="w"> </span><span class="c1">; Next Segment</span>

<span class="c1">; Screen coordinates to use</span>
<span class="nf">Debug.VGA.Top</span><span class="w">    </span><span class="no">EQU</span><span class="w">            </span><span class="p">(</span><span class="no">VGA.Rows-Debug.VGA.Height</span><span class="err">+</span><span class="mi">1</span><span class="p">)</span><span class="err">/</span><span class="mi">2</span><span class="w"></span>
<span class="nf">Debug.VGA.Left</span><span class="w">   </span><span class="no">EQU</span><span class="w">            </span><span class="p">(</span><span class="no">VGA.Cols-Debug.VGA.Width</span><span class="err">+</span><span class="mi">1</span><span class="p">)</span><span class="err">/</span><span class="mi">2</span><span class="w"></span>
<span class="nf">Debug.VGA.Width</span><span class="w">  </span><span class="no">EQU</span><span class="w">            </span><span class="no">Debug.Width.Addr</span><span class="err">+</span><span class="no">Debug.Width.Byte</span><span class="w"></span>
<span class="nf">Debug.VGA.Height</span><span class="w"> </span><span class="no">EQU</span><span class="w">            </span><span class="no">VGA.Rows-1</span><span class="w"></span>
<span class="nf">Debug.Show.Height</span><span class="w"> </span><span class="no">EQU</span><span class="w">           </span><span class="no">Debug.VGA.Height-Debug.Regs.Rows</span><span class="w"></span>
<span class="nf">Debug.Regs.Rows</span><span class="w">  </span><span class="no">EQU</span><span class="w">            </span><span class="mi">4</span><span class="w"></span>

<span class="c1">; These constants could be hard to change...</span>
<span class="nf">Debug.Width.Addr</span><span class="w">  </span><span class="no">EQU</span><span class="w">           </span><span class="mi">4</span><span class="err">+</span><span class="mi">1</span><span class="err">+</span><span class="mi">8</span><span class="err">+</span><span class="mi">3</span><span class="w"></span>
<span class="nf">Debug.Width.Byte</span><span class="w">  </span><span class="no">EQU</span><span class="w">           </span><span class="p">(</span><span class="mi">2</span><span class="err">+</span><span class="mi">1</span><span class="p">)*</span><span class="no">Debug.BytesPerRow</span><span class="err">+</span><span class="no">Debug.BytesPerRow</span><span class="w"> </span><span class="c1">; Chars/Byte + ASCII</span>
<span class="nf">Debug.Width.DWord</span><span class="w"> </span><span class="no">EQU</span><span class="w">           </span><span class="p">(</span><span class="mi">8</span><span class="err">+</span><span class="mi">2</span><span class="p">)*</span><span class="no">Debug.BytesPerRow</span><span class="err">/</span><span class="mi">4</span><span class="w">  </span><span class="c1">; Chars/DWord</span>
<span class="nf">Debug.BytesPerRow</span><span class="w"> </span><span class="no">EQU</span><span class="w">           </span><span class="mi">16</span><span class="w"></span>

<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="nl">Ints.Debug:</span><span class="w"></span>
<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="mi">0</span><span class="w">               </span><span class="c1">; Duplicate Fault&#39;s stack</span>
<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="mi">3</span><span class="w">               </span><span class="c1">; Duplicate Fault&#39;s stack</span>

<span class="w">                </span><span class="nf">PUSHAD</span><span class="w"></span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Ints.Fault.Frame.Create</span><span class="w"></span>

<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">.Init</span><span class="w">           </span><span class="c1">; Initialise everything</span>
<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="no">EAX</span><span class="w">             </span><span class="c1">; Remember TSS to switch back</span>

<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">.Regs</span><span class="w">           </span><span class="c1">; Display registers</span>

<span class="w">                </span><span class="nf">XOR</span><span class="w">             </span><span class="no">AX</span><span class="p">,</span><span class="no">AX</span><span class="w">           </span><span class="c1">; Starting Descriptor</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DS</span><span class="p">,</span><span class="no">AX</span><span class="w"></span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">.Desc.Next</span><span class="w">      </span><span class="c1">; Get first (real) Descriptor to Show</span>
<span class="nl">.Refresh:</span><span class="w"></span>
<span class="w">                </span><span class="nf">INC</span><span class="w">     </span><span class="no">BYTE</span><span class="w">    </span><span class="p">[</span><span class="no">ES</span><span class="p">:(</span><span class="no">VGA.Cols-1</span><span class="p">)*</span><span class="mi">2</span><span class="p">]</span><span class="w"> </span><span class="c1">; Display Dingle(tm)</span>

<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">.Show</span><span class="w">           </span><span class="c1">; Display memory</span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">.Key</span><span class="w">            </span><span class="c1">; Look at keys</span>
<span class="w">                </span><span class="nf">CMP</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="no">Debug.Key.Quit</span><span class="w"> </span><span class="c1">; Finished?</span>
<span class="w">                </span><span class="nf">JNZ</span><span class="w">             </span><span class="no">.Refresh</span><span class="w">        </span><span class="c1">; Not yet, so re-display</span>
<span class="nl">.Finish:</span><span class="w"></span>
<span class="w">                </span><span class="nf">POP</span><span class="w">             </span><span class="no">EBX</span><span class="w">             </span><span class="c1">; Get TSS back</span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">.Done</span><span class="w"></span>

<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Ints.Fault.Frame.Destroy</span><span class="w"></span>
<span class="w">                </span><span class="nf">POPAD</span><span class="w"></span>
<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">ESP</span><span class="p">,</span><span class="mi">8</span><span class="w">           </span><span class="c1">; Ignore Int and &quot;Error&quot; values</span>
<span class="w">                </span><span class="nf">IRETD</span><span class="w">           </span><span class="c1">; Return to next instruction</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Ints</span><span class="err">/</span><span class="no">Debug</span><span class="err">/</span><span class="no">Init.inc</span><span class="err">&quot;</span><span class="w">   </span><span class="c1">; Initialisation functions</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Ints</span><span class="err">/</span><span class="no">Debug</span><span class="err">/</span><span class="no">Regs.inc</span><span class="err">&quot;</span><span class="w">   </span><span class="c1">; Display registers functions</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Ints</span><span class="err">/</span><span class="no">Debug</span><span class="err">/</span><span class="no">Show.inc</span><span class="err">&quot;</span><span class="w">   </span><span class="c1">; Display memory functions</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Ints</span><span class="err">/</span><span class="no">Debug</span><span class="err">/</span><span class="no">Key.inc</span><span class="err">&quot;</span><span class="w">    </span><span class="c1">; Key functions</span>
</pre></div>
<!-- 
NewPP limit report
Cached time: 20250212023517
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.020 seconds
Real time usage: 0.157 seconds
Preprocessor visited node count: 39/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 16299/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3542-0!canonical and timestamp 20250212023516 and revision id 28461.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Debug/Debug&amp;oldid=28461">https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Debug/Debug&amp;oldid=28461</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="../../../../Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=User%3AJohnburger%2FDemo%2FInts%2FDebug%2FDebug" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Debug#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-user" class="selected mw-list-item"><a href="Debug" title="View the user page [c]" accesskey="c"><span>User page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User_talk:Johnburger/Demo/Ints/Debug/Debug&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Debug"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Debug/Debug&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Debug/Debug&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="../../../../index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="../../../../index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="../../../../Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="../../../../Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="../../../../OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="../../../../OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="../../../../OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="../../../../Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="../../../../Special:WhatLinksHere/User:Johnburger/Demo/Ints/Debug/Debug" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/User:Johnburger/Demo/Ints/Debug/Debug" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-contributions" class="mw-list-item"><a href="../../../../Special:Contributions/Johnburger" title="A list of contributions by this user"><span>User contributions</span></a></li><li id="t-log" class="mw-list-item"><a href="../../../../Special:Log/Johnburger"><span>Logs</span></a></li><li id="t-userrights" class="mw-list-item"><a href="../../../../Special:UserRights/Johnburger"><span>View user groups</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="../../../../Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Debug/Debug&amp;oldid=28461" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Debug/Debug&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 15 November 2023, at 08:34.</li>
	<li id="footer-info-0">This page has been accessed 1,085 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="../../../../OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="../../../../OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="../../../../OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Ints/Debug/Debug&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="../../../../resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="../../../../resources/assets/poweredby_mediawiki_132x47.png 1.5x, ../../../../resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.020","walltime":"0.157","ppvisitednodes":{"value":39,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":16299,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250212023517","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":268});});</script>
</body>
</html>