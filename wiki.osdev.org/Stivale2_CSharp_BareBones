<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Stivale2 CSharp BareBones - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"2bf4934b183c4a40c5d4ef32","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Stivale2_CSharp_BareBones","wgTitle":"Stivale2 CSharp BareBones","wgCurRevisionId":27028,"wgRevisionId":27028,"wgArticleId":4669,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","Pages with syntax highlighting errors","Level 2 Tutorials","Bare bones tutorials","CSharp","Stivale"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":
"Stivale2_CSharp_BareBones","wgRelevantArticleId":4669,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve"
,"ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Stivale2_CSharp_BareBones rootpage-Stivale2_CSharp_BareBones skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Stivale2 CSharp BareBones</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Stivale2_CSharp_BareBones#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Stivale2_CSharp_BareBones#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><big><b>WAIT! Have you read <a href="Getting_Started" title="Getting Started">Getting Started</a>, <a href="Beginner_Mistakes" title="Beginner Mistakes">Beginner Mistakes</a>, and some of the related <a href="./Category:OS_theory" title="Category:OS theory">OS theory</a>?</b></big>
</p>
</td></tr></tbody></table>
</center><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_2.png" class="image"><img alt="Difficulty 2.png" src="images/a/a1/Difficulty_2.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Medium</td></tr></tbody></table>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Stivale2_CSharp_BareBones#What_is_Stivale?"><span class="tocnumber">1</span> <span class="toctext">What is Stivale?</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Stivale2_CSharp_BareBones#What_is_Limine?"><span class="tocnumber">2</span> <span class="toctext">What is Limine?</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Stivale2_CSharp_BareBones#Getting_started"><span class="tocnumber">3</span> <span class="toctext">Getting started</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="Stivale2_CSharp_BareBones#Install_required_packages"><span class="tocnumber">3.1</span> <span class="toctext">Install required packages</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="Stivale2_CSharp_BareBones#Actual_code"><span class="tocnumber">3.2</span> <span class="toctext">Actual code</span></a>
<ul>
<li class="toclevel-3 tocsection-6"><a href="Stivale2_CSharp_BareBones#limine.cfg"><span class="tocnumber">3.2.1</span> <span class="toctext">limine.cfg</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="Stivale2_CSharp_BareBones#Makefile"><span class="tocnumber">3.2.2</span> <span class="toctext">Makefile</span></a></li>
<li class="toclevel-3 tocsection-8"><a href="Stivale2_CSharp_BareBones#Linker_script"><span class="tocnumber">3.2.3</span> <span class="toctext">Linker script</span></a></li>
<li class="toclevel-3 tocsection-9"><a href="Stivale2_CSharp_BareBones#Kernel"><span class="tocnumber">3.2.4</span> <span class="toctext">Kernel</span></a></li>
<li class="toclevel-3 tocsection-10"><a href="Stivale2_CSharp_BareBones#Console"><span class="tocnumber">3.2.5</span> <span class="toctext">Console</span></a></li>
<li class="toclevel-3 tocsection-11"><a href="Stivale2_CSharp_BareBones#Stivale2.cs"><span class="tocnumber">3.2.6</span> <span class="toctext">Stivale2.cs</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-12"><a href="Stivale2_CSharp_BareBones#Building_and_running_the_kernel"><span class="tocnumber">3.3</span> <span class="toctext">Building and running the kernel</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="Stivale2_CSharp_BareBones#See_Also"><span class="tocnumber">4</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="Stivale2_CSharp_BareBones#Articles"><span class="tocnumber">4.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="Stivale2_CSharp_BareBones#External_Links"><span class="tocnumber">4.2</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span id="What_is_Stivale.3F"></span><span class="mw-headline" id="What_is_Stivale?">What is Stivale?</span></h2>
<p><b>stivale</b> means "boot" in Italian. It is a boot protocol designed to overcome shortcomings of common boot protocols used by hobbyist OS developers, such as <a href="Multiboot" title="Multiboot">Multiboot</a>.
</p><p>There are 2 revisions of the stivale boot protocol, namely: <b>stivale</b>, and <b>stivale2</b>. Stivale2 makes use of tags for bootloader writers' and kernel writers' convenience, and to make future expandability and revisioning easier. We will use second version.
</p><p><a rel="nofollow" class="external text" href="https://github.com/stivale/stivale">Stivale GitHub repository</a>
</p>
<h2><span id="What_is_Limine.3F"></span><span class="mw-headline" id="What_is_Limine?">What is Limine?</span></h2>
<p><a href="Limine" title="Limine">Limine</a> is a modern, advanced x86 bootloader for <a href="BIOS" title="BIOS">BIOS</a> and <a href="UEFI" title="UEFI">UEFI</a>, with support for cutting edge features such as 5-level paging, 64-bit <a href="Long_Mode" class="mw-redirect" title="Long Mode">Long Mode</a>, and direct higher half loading thanks to the <a href="Stivale" class="mw-redirect" title="Stivale">stivale</a> boot protocol.
</p><p><a rel="nofollow" class="external text" href="https://github.com/limine-bootloader/limine">Limine GitHub repository</a>
</p>
<h2><span class="mw-headline" id="Getting_started">Getting started</span></h2>
<p>It is recommended to check out this project <a rel="nofollow" class="external text" href="https://github.com/ilobilo/stivale2-cs-barebones">repository</a> until getting started
</p>
<h3><span class="mw-headline" id="Install_required_packages">Install required packages</span></h3>
<p>To compile and run the kernel you will need following programs installed:
</p>
<ul><li><a rel="nofollow" class="external text" href="https://docs.microsoft.com/en-us/dotnet/core/install/linux">Dotnet</a> (C# compiler) should be installed in /usr/share/dotnet/</li>
<li>Tysila2 (Debian package included in repository)</li>
<li><a rel="nofollow" class="external text" href="https://www.mono-project.com">Mono</a> (To run tysila2)</li>
<li>Make (To run everything)</li>
<li>Nasm (Assembly compiler)</li>
<li>ld.lld (Linker)</li>
<li>Xorriso (To build the iso)</li>
<li>Qemu-system-x86 (To run the OS)</li></ul>
<p>If you are using debian based system you can install most of them with these commands:
</p>
<pre>sudo apt install nasm ld.lld xorriso qemu-system-x86 mono-runtime
// First download tysila2.deb from project's repository
sudo dpkg -i tysila2.deb
</pre>
<h3><span class="mw-headline" id="Actual_code">Actual code</span></h3>
<p>First of all you need to create following files and directories:
</p>
<pre>├── limine.cfg
├── Makefile
└── source
    ├── Console.cs
    ├── kernel.asm
    ├── kernel.cs
    ├── linker.ld
    ├── Makefile
    └── stivale2.cs
</pre>
<h4><span class="mw-headline" id="limine.cfg">limine.cfg</span></h4>
<p>This is <a href="Limine" title="Limine">Limine</a> configuration file which tells bootloader what to do:
</p><p>limine.cfg
</p>
<pre>TIMEOUT=0
VERBOSE=yes
SERIAL=yes

# Kernel entry name in bootloader menu
:Stivale2
# Boot protocol to use
PROTOCOL=stivale2
# Kernel elf file path on iso
KERNEL_PATH=boot:///kernel.elf
# Disable KASLR
KASLR=no
</pre>
<h4><span class="mw-headline" id="Makefile">Makefile</span></h4>
<p>These are simple makefile that will be excecuted when you run make command:
</p><p>Note: Make sure to use tabs instead of 8 spaces
</p><p>Makefile:
</p>
<div class="mw-highlight mw-highlight-lang-make mw-content-ltr" dir="ltr"><pre><span></span><span class="nv">KERNELDIR</span> <span class="o">:=</span> <span class="k">$(</span>shell dirname <span class="k">$(</span>realpath <span class="k">$(</span>firstword <span class="k">$(</span>MAKEFILE_LIST<span class="k">))))</span>

<span class="nf">all</span><span class="o">:</span> <span class="n">limine</span>
	mkdir -p <span class="k">$(</span>KERNELDIR<span class="k">)</span>/iso_root
	<span class="k">$(</span>MAKE<span class="k">)</span> -s -C <span class="k">$(</span>KERNELDIR<span class="k">)</span>/source

<span class="nf">limine</span><span class="o">:</span>
	git clone https://github.com/limine-bootloader/limine.git --branch<span class="o">=</span>v2.0-branch-binary --depth<span class="o">=</span><span class="m">1</span>
	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KERNELDIR<span class="k">)</span>/limine

<span class="nf">clean</span><span class="o">:</span>
	<span class="k">$(</span>MAKE<span class="k">)</span> -s -C <span class="k">$(</span>KERNELDIR<span class="k">)</span>/source clean

<span class="nf">distclean</span><span class="o">:</span>
	<span class="k">$(</span>MAKE<span class="k">)</span> -s -C <span class="k">$(</span>KERNELDIR<span class="k">)</span>/source clean
	rm -rf <span class="k">$(</span>KERNELDIR<span class="k">)</span>/limine
	rm -rf <span class="k">$(</span>KERNELDIR<span class="k">)</span>/iso_root
</pre></div>
<p>source/Makefile:
</p>
<div class="mw-highlight mw-highlight-lang-make mw-content-ltr" dir="ltr"><pre><span></span><span class="nv">SOURCEDIR</span> <span class="o">:=</span> <span class="k">$(</span>shell dirname <span class="k">$(</span>realpath <span class="k">$(</span>firstword <span class="k">$(</span>MAKEFILE_LIST<span class="k">))))</span>

<span class="nv">KERNEL</span> <span class="o">:=</span> <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/kernel.elf
<span class="nv">KERNELEXE</span> <span class="o">:=</span> <span class="k">$(</span>KERNEL:.elf<span class="o">=</span>.exe<span class="k">)</span>
<span class="nv">KERNELO</span> <span class="o">:=</span> <span class="k">$(</span>KERNEL:.elf<span class="o">=</span>.o<span class="k">)</span>
<span class="nv">ISO</span> <span class="o">=</span> <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../image.iso

<span class="nv">LIMINE</span> <span class="o">=</span> <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../limine/limine-install

<span class="nv">QEMU</span> <span class="o">=</span> qemu-system-x86_64
<span class="nv">QEMUFLAGS</span> <span class="o">=</span> -enable-kvm -M q35 -cpu max -smp <span class="m">2</span> -m 512M -boot d -rtc <span class="nv">base</span><span class="o">=</span>localtime -serial stdio

<span class="nv">XORRISO</span> <span class="o">=</span> xorriso
<span class="nv">XORRISOFLAGS</span> <span class="o">=</span> -as mkisofs -b limine-cd.bin <span class="se">\</span>
		-no-emul-boot -boot-load-size <span class="m">4</span> -boot-info-table <span class="se">\</span>
		--efi-boot limine-eltorito-efi.bin -efi-boot-part <span class="se">\</span>
		--efi-boot-image --protective-msdos-label

<span class="nv">LD</span> <span class="o">=</span> ld.lld
<span class="nv">AS</span> <span class="o">=</span> nasm
<span class="nv">AOT</span> <span class="o">=</span> tysila2
<span class="nv">DOTNET</span> <span class="o">=</span> /usr/share/dotnet/dotnet
<span class="nv">CSC</span> <span class="o">=</span> /usr/share/dotnet/sdk/*/Roslyn/bincore/csc.dll

<span class="nv">ASMFLAGS</span> <span class="o">=</span> -f elf64
<span class="nv">AOTFLAGS</span> <span class="o">=</span> --arch x86_64-elf64-tysos -fno-rtti -fno-exceptions
<span class="nv">CSCFLAGS</span> <span class="o">=</span> -unsafe -target:exe -platform:x86 -nostdlib /r:/usr/share/tysila2/mscorlib.dll

<span class="nv">LDFLAGS</span> <span class="o">=</span> -T <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/linker.ld -m elf_x86_64 -z max-page-size<span class="o">=</span>0x1000

<span class="nv">CSFILES</span> <span class="o">=</span> <span class="k">$(</span>shell find <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/ -type f -name <span class="s1">&#39;*.cs&#39;</span><span class="k">)</span>
<span class="nv">ASMFILES</span> <span class="o">=</span> <span class="k">$(</span>shell find <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/ -type f -name <span class="s1">&#39;*.asm&#39;</span><span class="k">)</span>
<span class="nv">OBJ</span> <span class="o">=</span> <span class="k">$(</span>ASMFILES:.asm<span class="o">=</span>_asm.o<span class="k">)</span>

<span class="nf">.PHONY</span><span class="o">:</span> <span class="n">all</span>
<span class="nf">all</span><span class="o">:</span> <span class="k">$(</span><span class="nv">KERNEL</span><span class="k">)</span>
	<span class="k">$(</span>MAKE<span class="k">)</span> iso
	<span class="k">$(</span>MAKE<span class="k">)</span> clean run

<span class="nf">$(KERNEL)</span><span class="o">:</span> <span class="k">$(</span><span class="nv">OBJ</span><span class="k">)</span>
	<span class="k">$(</span>DOTNET<span class="k">)</span> <span class="k">$(</span>CSC<span class="k">)</span> <span class="k">$(</span>CSCFLAGS<span class="k">)</span> <span class="k">$(</span>CSFILES<span class="k">)</span> -out:<span class="k">$(</span>KERNELEXE<span class="k">)</span>
	<span class="k">$(</span>AOT<span class="k">)</span> <span class="k">$(</span>AOTFLAGS<span class="k">)</span> <span class="k">$(</span>KERNELEXE<span class="k">)</span> -o <span class="k">$(</span>KERNELO<span class="k">)</span>
	<span class="k">$(</span>LD<span class="k">)</span> <span class="k">$(</span>LDFLAGS<span class="k">)</span> <span class="k">$(</span>INTERNALLDFLAGS<span class="k">)</span> <span class="k">$(</span>OBJ<span class="k">)</span> <span class="k">$(</span>KERNELO<span class="k">)</span> -o <span class="nv">$@</span>

<span class="nf">%_asm.o</span><span class="o">:</span>&#160;%.<span class="n">asm</span>
	<span class="k">$(</span>AS<span class="k">)</span> <span class="k">$(</span>ASMFLAGS<span class="k">)</span> $^ -o <span class="nv">$@</span>

<span class="nf">iso</span><span class="o">:</span>
	cp <span class="k">$(</span>KERNEL<span class="k">)</span> <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../limine.cfg <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../limine/limine.sys <span class="se">\</span>
		<span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../limine/limine-cd.bin <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../limine/limine-eltorito-efi.bin <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../iso_root/
	<span class="k">$(</span>XORRISO<span class="k">)</span> <span class="k">$(</span>XORRISOFLAGS<span class="k">)</span> <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../iso_root -o <span class="k">$(</span>ISO<span class="k">)</span>
	<span class="k">$(</span>LIMINE<span class="k">)</span> <span class="k">$(</span>ISO<span class="k">)</span>

<span class="nf">clean</span><span class="o">:</span>
	rm -rf <span class="k">$(</span>KERNEL<span class="k">)</span> <span class="k">$(</span>OBJ<span class="k">)</span> <span class="k">$(</span>KERNELEXE<span class="k">)</span> <span class="k">$(</span>KERNELO<span class="k">)</span> <span class="k">$(</span>SOURCEDIR<span class="k">)</span>/../iso_root/*

<span class="nf">run</span><span class="o">:</span>
	<span class="k">$(</span>QEMU<span class="k">)</span> <span class="k">$(</span>QEMUFLAGS<span class="k">)</span> -cdrom <span class="k">$(</span>ISO<span class="k">)</span>
</pre></div>
<h4><span class="mw-headline" id="Linker_script">Linker script</span></h4>
<p>Script that ld.lld will use to link relocatable elf objects
</p><p>source/linker.ld
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre>OUTPUT_FORMAT(elf64-x86-64)
OUTPUT_ARCH(i386:x86-64)

ENTRY(_start)

PHDRS
{
    null    PT_NULL    FLAGS(0)&#160;;
    text    PT_LOAD    FLAGS((1 &lt;&lt; 0) | (1 &lt;&lt; 2))&#160;;
    rodata  PT_LOAD    FLAGS((1 &lt;&lt; 2))&#160;;
    data    PT_LOAD    FLAGS((1 &lt;&lt; 1) | (1 &lt;&lt; 2))&#160;;
    dynamic PT_DYNAMIC FLAGS((1 &lt;&lt; 1) | (1 &lt;&lt; 2))&#160;;
}

SECTIONS
{
    . = 0xffffffff80200000;

    .text&#160;: {
        *(.text*)
    } :text

    . += 0x1000;

    .stivale2hdr&#160;: {
        KEEP(*(.stivale2hdr))
    } :rodata

    .rodata&#160;: {
        *(.rodata*)
    } :rodata

    . += 0x1000;

    .data&#160;: {
        *(.data*)
    } :data

    .dynamic&#160;: {
        *(.dynamic)
    } :data :dynamic

    .bss&#160;: {
        *(COMMON)
        *(.bss*)
    } :data
}</pre></div>
<h4><span class="mw-headline" id="Kernel">Kernel</span></h4>
<p>These files contain code that will be executed when kernel runs:
</p><p>source/kernel.asm
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="err">[</span><span class="nf">EXTERN</span><span class="w"> </span><span class="no">_ZN6kernel6Kernel7ProgramM_0_8RealMain_Rv_P1PV26stivale2</span><span class="mi">#2</span><span class="no">Bstivale2_struct</span><span class="p">]</span><span class="w"></span>

<span class="nf">section</span><span class="w"> </span><span class="no">.data</span><span class="w"></span>
<span class="nl">stivale2_smp_tag:</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x1ab015085f3273df</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>

<span class="nl">stivale2_any_video_tag:</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">0xc75c9fa92a44c4db</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="no">stivale2_smp_tag</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>

<span class="err">[</span><span class="nf">SECTION</span><span class="w"> </span><span class="no">.bss</span><span class="p">]</span><span class="w"></span>
<span class="nf">align</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>
<span class="nl">stack_bottom:</span><span class="w"></span>
<span class="nf">resb</span><span class="w"> </span><span class="mi">8192</span><span class="w"></span>
<span class="nl">stack_top:</span><span class="w"></span>

<span class="err">[</span><span class="nf">SECTION</span><span class="w"> </span><span class="no">.stivale2hdr</span><span class="p">]</span><span class="w"></span>
<span class="nf">align</span><span class="w"> </span><span class="mi">4</span><span class="w"></span>
<span class="nl">stivale_hdr:</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="no">kmain</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="no">stack_top</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="p">(</span><span class="mi">1</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="no">stivale2_any_video_tag</span><span class="w"></span>

<span class="err">[</span><span class="nf">SECTION</span><span class="w"> </span><span class="no">.text</span><span class="p">]</span><span class="w"></span>
<span class="nl">kmain:</span><span class="w"></span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="no">rdi</span><span class="w"></span>
<span class="w">    </span><span class="nf">call</span><span class="w"> </span><span class="no">_ZN6kernel6Kernel7ProgramM_0_8RealMain_Rv_P1PV26stivale2</span><span class="mi">#2</span><span class="no">Bstivale2_struct</span><span class="w"></span>

<span class="nl">sthrow:</span><span class="w"></span>
<span class="w">    </span><span class="nf">hlt</span><span class="w"></span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">sthrow</span><span class="w"></span>
<span class="err">[</span><span class="nf">GLOBAL</span><span class="w"> </span><span class="no">sthrow</span><span class="p">]</span><span class="w"></span>

<span class="nl">_ZN6kernel6Kernel7ProgramM_0_4halt_Rv_P0:</span><span class="w"></span>
<span class="w">    </span><span class="nf">hlt</span><span class="w"></span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">_ZN6kernel6Kernel7ProgramM_0_4halt_Rv_P0</span><span class="w"></span>
<span class="err">[</span><span class="nf">GLOBAL</span><span class="w"> </span><span class="no">_ZN6kernel6Kernel7ProgramM_0_4halt_Rv_P0</span><span class="p">]</span><span class="w"></span>
</pre></div>
<p>source/kernel.cs
</p>
<div class="mw-highlight mw-highlight-lang-csharp mw-content-ltr" dir="ltr"><pre><span></span><span class="k">using</span><span class="w"> </span><span class="nn">System.Runtime.CompilerServices</span><span class="p">;</span><span class="w"></span>

<span class="k">namespace</span><span class="w"> </span><span class="nn">Kernel</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="c1">// Class is unsafe so we can use pointers</span>
<span class="w">    </span><span class="k">public</span><span class="w"> </span><span class="k">unsafe</span><span class="w"> </span><span class="k">class</span><span class="w"> </span><span class="nc">Program</span><span class="w"></span>
<span class="w">    </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="c1">// Fake kernel entry point</span>
<span class="w">        </span><span class="c1">// Do not remove</span>
<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">Main</span><span class="p">()</span><span class="w"></span>
<span class="w">        </span><span class="p">{</span><span class="w"></span>
<span class="w">            </span><span class="c1">// These line is required</span>
<span class="w">            </span><span class="c1">// Without it compiler will remove RealMain from kernel</span>
<span class="w">            </span><span class="n">RealMain</span><span class="p">(</span><span class="k">null</span><span class="p">);</span><span class="w"></span>
<span class="w">        </span><span class="p">}</span><span class="w"></span>

<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="n">stivale2</span><span class="p">.</span><span class="n">stivale2_struct_tag_smp</span><span class="w"> </span><span class="p">*</span><span class="n">smp_tag</span><span class="p">;</span><span class="w"></span>

<span class="w">        </span><span class="na">[MethodImpl(MethodImplOptions.InternalCall)]</span><span class="w"></span>
<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="k">extern</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">halt</span><span class="p">();</span><span class="w"></span>

<span class="w">        </span><span class="c1">// Real entry</span>
<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">RealMain</span><span class="p">(</span><span class="n">stivale2</span><span class="p">.</span><span class="n">stivale2_struct</span><span class="p">*</span><span class="w"> </span><span class="n">stiv</span><span class="p">)</span><span class="w"></span>
<span class="w">        </span><span class="p">{</span><span class="w"></span>
<span class="w">            </span><span class="c1">// If Stivale2 struct was not found halt</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">stiv</span><span class="w"> </span><span class="p">==</span><span class="w"> </span><span class="k">null</span><span class="p">)</span><span class="w"> </span><span class="n">halt</span><span class="p">();</span><span class="w"></span>

<span class="w">            </span><span class="c1">// Example on how to get Stivale2 structure tags</span>
<span class="w">            </span><span class="n">smp_tag</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">(</span><span class="n">stivale2</span><span class="p">.</span><span class="n">stivale2_struct_tag_smp</span><span class="p">*)</span><span class="n">stivale2</span><span class="p">.</span><span class="n">get_tag</span><span class="p">(</span><span class="n">stiv</span><span class="p">,</span><span class="w"> </span><span class="n">stivale2</span><span class="p">.</span><span class="n">STIVALE2_STRUCT_TAG_SMP_ID</span><span class="p">);</span><span class="w"></span>

<span class="w">            </span><span class="c1">// Print text</span>
<span class="w">            </span><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Hello, World!&quot;</span><span class="p">);</span><span class="w"></span>

<span class="w">            </span><span class="c1">// Halt</span>
<span class="w">            </span><span class="n">halt</span><span class="p">();</span><span class="w"></span>
<span class="w">        </span><span class="p">}</span><span class="w"></span>
<span class="w">    </span><span class="p">}</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="Console">Console</span></h4>
<p>This is an example code that provides console write and writeline functions:
source/Console.cs
</p>
<div class="mw-highlight mw-highlight-lang-csharp mw-content-ltr" dir="ltr"><pre><span></span><span class="k">namespace</span><span class="w"> </span><span class="nn">Kernel</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="c1">// Console colours</span>
<span class="w">    </span><span class="k">public</span><span class="w"> </span><span class="k">enum</span><span class="w"> </span><span class="n">ConsoleColour</span><span class="w"></span>
<span class="w">    </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="n">Black</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Blue</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Green</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Cyan</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Red</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Purple</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Brown</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Grey</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">DarkGrey</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">LightBlue</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">LightGreen</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">LightCyan</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">LightRed</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">LightPurple</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">Yellow</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="n">White</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="p">};</span><span class="w"></span>
<span class="w">    </span><span class="k">public</span><span class="w"> </span><span class="k">unsafe</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="k">class</span><span class="w"> </span><span class="nc">Console</span><span class="w"></span>
<span class="w">    </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="c1">// VGA text mode address</span>
<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="kt">ushort</span><span class="p">*</span><span class="w"> </span><span class="n">vga</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">(</span><span class="kt">ushort</span><span class="p">*)</span><span class="m">0</span><span class="n">xB8000</span><span class="p">;</span><span class="w"></span>
<span class="w">        </span><span class="c1">// Cursor positions</span>
<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="n">lastx</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="m">0</span><span class="p">;</span><span class="w"></span>
<span class="w">        </span><span class="c1">// Text colours</span>
<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="n">ConsoleColour</span><span class="w"> </span><span class="n">ForegroundColour</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="n">ConsoleColour</span><span class="p">.</span><span class="n">White</span><span class="p">;</span><span class="w"></span>
<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="n">ConsoleColour</span><span class="w"> </span><span class="n">BackgroundColour</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="n">ConsoleColour</span><span class="p">.</span><span class="n">Black</span><span class="p">;</span><span class="w"></span>

<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">Write</span><span class="p">(</span><span class="kt">string</span><span class="w"> </span><span class="n">s</span><span class="p">)</span><span class="w"></span>
<span class="w">        </span><span class="p">{</span><span class="w"></span>
<span class="w">            </span><span class="k">foreach</span><span class="w"> </span><span class="p">(</span><span class="kt">char</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">s</span><span class="p">)</span><span class="w"></span>
<span class="w">            </span><span class="p">{</span><span class="w"></span>
<span class="w">                </span><span class="n">PutChar</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="w"> </span><span class="n">BackgroundColour</span><span class="p">,</span><span class="w"> </span><span class="n">ForegroundColour</span><span class="p">);</span><span class="w"></span>
<span class="w">            </span><span class="p">}</span><span class="w"></span>
<span class="w">        </span><span class="p">}</span><span class="w"></span>

<span class="w">        </span><span class="k">public</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">WriteLine</span><span class="p">(</span><span class="kt">string</span><span class="w"> </span><span class="n">s</span><span class="p">)</span><span class="w"></span>
<span class="w">        </span><span class="p">{</span><span class="w"></span>
<span class="w">            </span><span class="k">foreach</span><span class="w"> </span><span class="p">(</span><span class="kt">char</span><span class="w"> </span><span class="n">c</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">s</span><span class="p">)</span><span class="w"></span>
<span class="w">            </span><span class="p">{</span><span class="w"></span>
<span class="w">                </span><span class="n">PutChar</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="w"> </span><span class="n">BackgroundColour</span><span class="p">,</span><span class="w"> </span><span class="n">ForegroundColour</span><span class="p">);</span><span class="w"></span>
<span class="w">            </span><span class="p">}</span><span class="w"></span>
<span class="w">            </span><span class="n">PutChar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">BackgroundColour</span><span class="p">,</span><span class="w"> </span><span class="n">ForegroundColour</span><span class="p">);</span><span class="w"></span>
<span class="w">        </span><span class="p">}</span><span class="w"></span>

<span class="w">        </span><span class="k">static</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">PutChar</span><span class="p">(</span><span class="kt">char</span><span class="w"> </span><span class="n">c</span><span class="p">,</span><span class="w"> </span><span class="n">ConsoleColour</span><span class="w"> </span><span class="n">bgcolour</span><span class="p">,</span><span class="w"> </span><span class="n">ConsoleColour</span><span class="w"> </span><span class="n">fgcolour</span><span class="p">)</span><span class="w"></span>
<span class="w">        </span><span class="p">{</span><span class="w"></span>
<span class="w">            </span><span class="k">switch</span><span class="w"> </span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="w"></span>
<span class="w">            </span><span class="p">{</span><span class="w"></span>
<span class="w">                </span><span class="c1">// Newline</span>
<span class="w">                </span><span class="k">case</span><span class="w"> </span><span class="sc">&#39;\n&#39;</span><span class="p">:</span><span class="w"></span>
<span class="w">                    </span><span class="n">lastx</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="n">x</span><span class="p">;</span><span class="w"></span>
<span class="w">                    </span><span class="n">x</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="m">0</span><span class="p">;</span><span class="w"></span>
<span class="w">                    </span><span class="n">y</span><span class="p">++;</span><span class="w"></span>
<span class="w">                    </span><span class="k">break</span><span class="p">;</span><span class="w"></span>
<span class="w">                </span><span class="c1">// Backspace</span>
<span class="w">                </span><span class="k">case</span><span class="w"> </span><span class="sc">&#39;\b&#39;</span><span class="p">:</span><span class="w"></span>
<span class="w">                    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="p">&gt;</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"></span>
<span class="w">                    </span><span class="p">{</span><span class="w"></span>
<span class="w">                        </span><span class="n">x</span><span class="p">--;</span><span class="w"></span>
<span class="w">                        </span><span class="n">vga</span><span class="p">[</span><span class="n">y</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="m">80</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="n">x</span><span class="p">]</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">(</span><span class="kt">ushort</span><span class="p">)(((</span><span class="kt">byte</span><span class="p">)</span><span class="n">bgcolour</span><span class="w"> </span><span class="p">&lt;&lt;</span><span class="w"> </span><span class="m">12</span><span class="p">)</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="p">((</span><span class="kt">byte</span><span class="p">)</span><span class="n">fgcolour</span><span class="w"> </span><span class="p">&lt;&lt;</span><span class="w"> </span><span class="m">8</span><span class="p">)</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="sc">&#39; &#39;</span><span class="p">);</span><span class="w"></span>
<span class="w">                    </span><span class="p">}</span><span class="w"></span>
<span class="w">                    </span><span class="k">else</span><span class="w"></span>
<span class="w">                    </span><span class="p">{</span><span class="w"></span>
<span class="w">                        </span><span class="n">x</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="n">lastx</span><span class="p">;</span><span class="w"></span>
<span class="w">                        </span><span class="n">y</span><span class="p">--;</span><span class="w"></span>
<span class="w">                    </span><span class="p">}</span><span class="w"></span>
<span class="w">                    </span><span class="k">break</span><span class="p">;</span><span class="w"></span>
<span class="w">                </span><span class="c1">// Everything else</span>
<span class="w">                </span><span class="k">default</span><span class="p">:</span><span class="w"></span>
<span class="w">                    </span><span class="n">vga</span><span class="p">[</span><span class="n">y</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="m">80</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="n">x</span><span class="p">]</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">(</span><span class="kt">ushort</span><span class="p">)(((</span><span class="kt">byte</span><span class="p">)</span><span class="n">bgcolour</span><span class="w"> </span><span class="p">&lt;&lt;</span><span class="w"> </span><span class="m">12</span><span class="p">)</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="p">((</span><span class="kt">byte</span><span class="p">)</span><span class="n">fgcolour</span><span class="w"> </span><span class="p">&lt;&lt;</span><span class="w"> </span><span class="m">8</span><span class="p">)</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="n">c</span><span class="p">);</span><span class="w"></span>
<span class="w">                    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="p">&lt;</span><span class="w"> </span><span class="m">80</span><span class="p">)</span><span class="w"> </span><span class="n">x</span><span class="p">++;</span><span class="w"></span>
<span class="w">                    </span><span class="k">else</span><span class="w"></span>
<span class="w">                    </span><span class="p">{</span><span class="w"></span>
<span class="w">                        </span><span class="n">lastx</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="n">x</span><span class="p">;</span><span class="w"></span>
<span class="w">                        </span><span class="n">x</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="m">0</span><span class="p">;</span><span class="w"></span>
<span class="w">                        </span><span class="n">y</span><span class="p">++;</span><span class="w"></span>
<span class="w">                    </span><span class="p">}</span><span class="w"></span>
<span class="w">                    </span><span class="k">break</span><span class="p">;</span><span class="w"></span>
<span class="w">            </span><span class="p">}</span><span class="w"></span>
<span class="w">        </span><span class="p">}</span><span class="w"></span>
<span class="w">    </span><span class="p">}</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="Stivale2.cs">Stivale2.cs</span></h4>
<p>Because file is too long its recommended to <a rel="nofollow" class="external text" href="https://github.com/ilobilo/stivale2-cs-barebones/blob/main/source/stivale2.cs">download</a> it and place under source/
</p>
<h3><span class="mw-headline" id="Building_and_running_the_kernel">Building and running the kernel</span></h3>
<p>To compile and run the kernel go to main directory (Where limine.cfg, Makefile and source/ are) and run:
</p>
<pre>make -j$(nproc --all)
</pre>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="Limine" title="Limine">Limine</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="https://github.com/stivale/stivale/blob/master/STIVALE2.md">Stivale2 Specification</a></li>
<li><a rel="nofollow" class="external text" href="https://github.com/limine-bootloader/limine">Limine bootloader</a></li>
<li><a rel="nofollow" class="external text" href="https://github.com/ilobilo/stivale2-cs-barebones/">Project's github repository</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250212011249
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.072 seconds
Real time usage: 0.876 seconds
Preprocessor visited node count: 180/1000000
Post‐expand include size: 916/2097152 bytes
Template argument size: 192/2097152 bytes
Highest expansion depth: 19/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 34086/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    5.799      1 -total
 75.27%    4.365      3 Template:If
 73.26%    4.248      1 Template:Rating
 64.29%    3.728      3 Template:Show1
 25.68%    1.489      1 Template:BeginnersWarning
 17.93%    1.040      3 Template:Eq
  9.07%    0.526      3 Template:Eq1
  7.12%    0.413      1 Template:NoteBox
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4669-0!canonical and timestamp 20250212011248 and revision id 27028.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Stivale2_CSharp_BareBones&amp;oldid=27028">https://wiki.osdev.org/index.php?title=Stivale2_CSharp_BareBones&amp;oldid=27028</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_with_syntax_highlighting_errors&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages with syntax highlighting errors (page does not exist)">Pages with syntax highlighting errors</a></li><li><a href="./Category:Level_2_Tutorials" title="Category:Level 2 Tutorials">Level 2 Tutorials</a></li><li><a href="./Category:Bare_bones_tutorials" title="Category:Bare bones tutorials">Bare bones tutorials</a></li><li><a href="./Category:CSharp" title="Category:CSharp">CSharp</a></li><li><a href="./Category:Stivale" title="Category:Stivale">Stivale</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Stivale2+CSharp+BareBones" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Stivale2_CSharp_BareBones#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Stivale2_CSharp_BareBones" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Stivale2_CSharp_BareBones&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Stivale2_CSharp_BareBones"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Stivale2_CSharp_BareBones&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Stivale2_CSharp_BareBones&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="https://wiki.osdev.org/Special:WhatLinksHere/Stivale2_CSharp_BareBones" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Stivale2_CSharp_BareBones" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Stivale2_CSharp_BareBones&amp;oldid=27028" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Stivale2_CSharp_BareBones&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 3 April 2022, at 17:43.</li>
	<li id="footer-info-0">This page has been accessed 1,571 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Stivale2_CSharp_BareBones&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.072","walltime":"0.876","ppvisitednodes":{"value":180,"limit":1000000},"postexpandincludesize":{"value":916,"limit":2097152},"templateargumentsize":{"value":192,"limit":2097152},"expansiondepth":{"value":19,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":34086,"limit":5000000},"timingprofile":["100.00%    5.799      1 -total"," 75.27%    4.365      3 Template:If"," 73.26%    4.248      1 Template:Rating"," 64.29%    3.728      3 Template:Show1"," 25.68%    1.489      1 Template:BeginnersWarning"," 17.93%    1.040      3 Template:Eq","  9.07%    0.526      3 Template:Eq1","  7.12%    0.413      1 Template:NoteBox"]},"cachereport":{"timestamp":"20250212011249","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":978});});</script>
</body>
</html>