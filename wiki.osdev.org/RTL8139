<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>RTL8139 - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"d0364da37afc0960a3fb1e0d","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"RTL8139","wgTitle":"RTL8139","wgCurRevisionId":27699,"wgRevisionId":27699,"wgArticleId":2176,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","In Progress","Network Hardware","Standards"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"RTL8139","wgRelevantArticleId":2176,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-RTL8139 rootpage-RTL8139 skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">RTL8139</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="RTL8139#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="RTL8139#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></tbody></table>
</center>
<p>The RTL8139 Network Chip is used on many old and budget Ethernet Network Devices. It supports 10 and 100 MBit.  
</p><p>While the original chip lacks the features of newer Gigabit devices, it is a commonly emulated device in virtualization environments, due to its simplicity (fewer IO operations means faster traps to the Hypervisor), and extensive OS support.  
</p><p>It also makes a for a simple driver (and so is an excellent first choice for OS development hobbyists).
</p>
<div class="thumb tright"><div class="thumbinner" style="width:402px;"><a href="./File:Rtl8139.JPG" class="image"><img alt="" src="images/c/c5/Rtl8139.JPG" decoding="async" width="400" height="300" class="thumbimage" data-file-width="400" data-file-height="300" /></a>  <div class="thumbcaption">A PCI RTL8139</div></div></div>
<p>NB If you find your driver suddenly freezes and stops receiving interrupts and you're using kvm/qemu. Try the option -no-kvm-irqchip
</p><p>The PCI vendor ID is 0x10EC and the device ID is 0x8139.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="RTL8139#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="RTL8139#Registers"><span class="tocnumber">1.1</span> <span class="toctext">Registers</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="RTL8139#Programming_Guide"><span class="tocnumber">2</span> <span class="toctext">Programming Guide</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="RTL8139#PCI_Bus_Mastering"><span class="tocnumber">2.1</span> <span class="toctext">PCI Bus Mastering</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="RTL8139#Turning_on_the_RTL8139"><span class="tocnumber">2.2</span> <span class="toctext">Turning on the RTL8139</span></a>
<ul>
<li class="toclevel-3 tocsection-6"><a href="RTL8139#Software_Reset!"><span class="tocnumber">2.2.1</span> <span class="toctext">Software Reset!</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="RTL8139#Init_Receive_buffer"><span class="tocnumber">2.2.2</span> <span class="toctext">Init Receive buffer</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-8"><a href="RTL8139#Set_IMR_+_ISR"><span class="tocnumber">2.3</span> <span class="toctext">Set IMR + ISR</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="RTL8139#Configuring_receive_buffer_(RCR)"><span class="tocnumber">2.4</span> <span class="toctext">Configuring receive buffer (RCR)</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="RTL8139#Enable_Receive_and_Transmitter"><span class="tocnumber">2.5</span> <span class="toctext">Enable Receive and Transmitter</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="RTL8139#Transmitting_Packets"><span class="tocnumber">2.6</span> <span class="toctext">Transmitting Packets</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="RTL8139#ISR_Handler"><span class="tocnumber">3</span> <span class="toctext">ISR Handler</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="RTL8139#Related_Articles"><span class="tocnumber">4</span> <span class="toctext">Related Articles</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="RTL8139#External_Links"><span class="tocnumber">5</span> <span class="toctext">External Links</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p>RTL8139 is configured via registers. The IO base address and the IRQ number for the device is taken from <a href="PCI" title="PCI">PCI</a> configuration.
</p><p><br />
</p>
<h3><span class="mw-headline" id="Registers">Registers</span></h3>
<p>These are the registers used for using RTL8139.
</p>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1&#125;&#125;&#125;">
<tbody><tr>
<th>Offset (from IO base)
</th>
<th>Size
</th>
<th>Name
</th></tr>
<tr>
<td>0x00</td>
<td>6</td>
<td>MAC0-5
</td></tr>
<tr>
<td>0x08</td>
<td>8</td>
<td>MAR0-7
</td></tr>
<tr>
<td>0x30</td>
<td>4</td>
<td>RBSTART
</td></tr>
<tr>
<td>0x37</td>
<td>1</td>
<td>CMD
</td></tr>
<tr>
<td>0x3C</td>
<td>2</td>
<td>IMR
</td></tr>
<tr>
<td>0x3E</td>
<td>2</td>
<td>ISR
</td></tr></tbody></table>
<h2><span class="mw-headline" id="Programming_Guide">Programming Guide</span></h2>
<h3><span class="mw-headline" id="PCI_Bus_Mastering">PCI Bus Mastering</span></h3>
<p>First, you need to enable PCI Bus Mastering for this device. This allows the NIC to perform DMA. To do it, you can read the Command Register from the device's PCI Configuration Space, set bit 2 (bus mastering bit) and write the modified Command Register. Note this Command Register is that of the PCI Configuration Space and has nothing to do with the Command Register that will be evoked in the following sections: the latter is specific to the RTL8139, whereas every PCI device (not only NICs) have a PCI Configuration Space with a Command Register.
</p><p>Some BIOS may enable Bus Mastering at startup, but some versions of qemu don't. You should thus be careful about this step.
</p>
<h3><span class="mw-headline" id="Turning_on_the_RTL8139">Turning on the RTL8139</span></h3>
<p>Send 0x00 to the CONFIG_1 register (0x52) to set the LWAKE + LWPTN to active high.
this should essentially *power on* the device.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="w"> </span><span class="n">outportb</span><span class="p">(</span><span class="w"> </span><span class="n">ioaddr</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x52</span><span class="p">,</span><span class="w"> </span><span class="mh">0x0</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span id="Software_Reset.21"></span><span class="mw-headline" id="Software_Reset!">Software Reset!</span></h4>
<p>Next, we should do a software reset to clear the RX and TX buffers and set everything
back to defaults. Do this to eliminate the possibility of there still being garbage
left in the buffers or registers on power on. 
</p><p>Sending 0x10 to the Command register (0x37) will send the RTL8139 into a software reset. 
Once that byte is sent, the RST bit must be checked to make sure that the chip has finished
the reset.  If the RST bit is high (1), then the reset is still in operation. 
</p><p>NB: There is a minor bug in Qemu. If you check the command register before performing a
soft reset, you may find the RST bit is high (1). Just ignore it and carry on with the 
initialization procedure. 
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="w"> </span><span class="n">outportb</span><span class="p">(</span><span class="w"> </span><span class="n">ioaddr</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x37</span><span class="p">,</span><span class="w"> </span><span class="mh">0x10</span><span class="p">);</span><span class="w"></span>
<span class="w"> </span><span class="k">while</span><span class="p">(</span><span class="w"> </span><span class="p">(</span><span class="n">inb</span><span class="p">(</span><span class="n">ioaddr</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x37</span><span class="p">)</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="mh">0x10</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="p">}</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="Init_Receive_buffer">Init Receive buffer</span></h4>
<p>For this part, we will send the chip a memory location to use as its receive buffer start 
location.  One way to do it, would be to define a buffer variable and send
that variables memory location to the RBSTART register (0x30). 
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="w"> </span><span class="c1">//ioaddr is obtained from PCI configuration</span>
<span class="w"> </span><span class="n">outportd</span><span class="p">(</span><span class="n">ioaddr</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x30</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="kt">uintptr_t</span><span class="p">)</span><span class="n">rx_buffer</span><span class="p">);</span><span class="w"> </span><span class="c1">// send uint32_t memory location to RBSTART (0x30)</span>
</pre></div>
<p>Note that 'rx_buffer' needs to be a pointer to a <b>physical address</b>. In this case a size of 8192 + 16 (8K + 16 bytes) is recommended, see below.
</p>
<h3><span id="Set_IMR_.2B_ISR"></span><span class="mw-headline" id="Set_IMR_+_ISR">Set IMR + ISR</span></h3>
<p>The Interrupt Mask Register (IMR) and Interrupt Service Register (ISR) are responsible
for firing up different IRQs. The IMR bits line up with the ISR bits to work in sync.
If an IMR bit is low, then the corresponding ISR bit with never fire an IRQ when the
time comes for it to happen. The IMR is located at 0x3C and the ISR is located at 0x3E.
</p><p>To set the RTL8139 to accept only the Transmit OK (TOK) and Receive OK (ROK) interrupts,
we would have the TOK and ROK bits of the IMR high and leave the rest low.  That way when 
a TOK or ROK IRQ happens, it actually will go through and fire up an IRQ. 
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="w"> </span><span class="n">outportw</span><span class="p">(</span><span class="n">ioaddr</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x3C</span><span class="p">,</span><span class="w"> </span><span class="mh">0x0005</span><span class="p">);</span><span class="w"> </span><span class="c1">// Sets the TOK and ROK bits high</span>
</pre></div>
<h3><span id="Configuring_receive_buffer_.28RCR.29"></span><span class="mw-headline" id="Configuring_receive_buffer_(RCR)">Configuring receive buffer (RCR)</span></h3>
<p>Before hoping to see a packet coming to you, you should tell the RTL8139 to <b>accept</b> packets based on various rules. The configuration register is RCR.
</p><p>You can enable different "matching" rules:
</p>
<ul><li><b>AB - Accept Broadcast</b>: Accept broadcast packets sent to mac ff:ff:ff:ff:ff:ff</li>
<li><b>AM - Accept Multicast</b>: Accept multicast packets.</li>
<li><b>APM - Accept Physical Match</b>: Accept packets send to NIC's MAC address.</li>
<li><b>AAP - Accept All Packets</b>. Accept all packets (run in promiscuous mode).</li></ul>
<p>Another bit, the WRAP bit, controls the handling of receive buffer wrap around.  
</p><p>If WRAP is 0, the Rx buffer is treated as a traditional ring buffer: if a packet is being written near the end of the buffer and the RTL8139 knows you've already handled data before this (thanks to CAPR), the packet will continue at the beginning of the buffer.
</p><p>If WRAP is 1, the remainder of the packet will be written contiguously (overflowing the actual receive buffer) so that it can be handled more efficiently. This means the buffer must be an additional 1500 bytes (to hold the largest potentially overflowing packet).
</p><p>You can also tell the size of your RX buffer here, however if you use a 8k + 16 buffer as described before, writing zeroes is enough.   To use the WRAP=1 bit, an 8K buffer must in fact be 8k+16+1500 bytes.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="w"> </span><span class="n">outportl</span><span class="p">(</span><span class="n">ioaddr</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x44</span><span class="p">,</span><span class="w"> </span><span class="mh">0xf</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="p">(</span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">7</span><span class="p">));</span><span class="w"> </span><span class="c1">// (1 &lt;&lt; 7) is the WRAP bit, 0xf is AB+AM+APM+AAP</span>
</pre></div>
<h3><span class="mw-headline" id="Enable_Receive_and_Transmitter">Enable Receive and Transmitter</span></h3>
<p>Now is the time to start up the RX and TX functions.  
This is quite an easy piece, and should (in my opinion) only be done after all of the 
configurations to the RTL8139's registers have been set to what is desired.  The
RE (Receiver Enabled) and the TE (Transmitter Enabled) bits are located in the Command
Register (0x37).  Starting up the RE and TE is pretty straight-forward, but lets go 
through it anyways.  
</p><p>To enable the RTL8139 to accept and transmit packets, the RE and TE bits must go high.  
Once this is completed, then the card will start allowing packets in and/or out. 
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="w"> </span><span class="n">outportb</span><span class="p">(</span><span class="n">ioaddr</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x37</span><span class="p">,</span><span class="w"> </span><span class="mh">0x0C</span><span class="p">);</span><span class="w"> </span><span class="c1">// Sets the RE and TE bits high</span>
</pre></div>
<h3><span class="mw-headline" id="Transmitting_Packets">Transmitting Packets</span></h3>
<p>The RTL8139 NIC uses a round robin style for transmitting packets. It has four transmit buffer (a.k.a. transmit start) registers, and four transmit status/command registers. The transmit start registers are each 32 bits long, and are in I/O offsets 0x20, 0x24, 0x28 and 0x2C. The transmit status/command registers are also each 32 bits long and are in I/O offsets 0x10, 0x14, 0x18 and 0x1C. Each pair of transmit start and status registers work together (i.e. registers 0x20 and 0x10 work together, 0x24 and 0x14 work together, etc.)
</p><p>After performing a controller reset as mentioned above, the controller ignores all transmit registers except pair zero (i.e. register 0x20 for the transmit start and register 0x10 for the status/command.) After software transmits a packet using those registers, the round robin counter increments, to use pair one (i.e. register 0x24 for the transmit start and register 0x14 for the status/command.) This continues until pair number three, which is the last transmit register pair, and the counter then overflows and goes back to pair number zero. When the controller is using a specific transmit register pair, all other transmit registers are ignored, and cannot be used to transmit packets at all. Software is responsible for keeping track which pair is being used.
</p><p>Each transmit start register contains the 32-bit physical address of the packet which is to be sent over the network.
</p><p>Each transmit status/command register contains various bit fields that control the transmission of the packet. The table below only gives a brief about these bits. For the full format, take a look at the RTL8139 specification under "External links" below.
</p>
<table width="70%" border="1">

<tbody><tr>
<td><b>Bit Range</b>
</td>
<td><b>Description</b>
</td></tr>
<tr>
<td>0-12
</td>
<td><b>Data size.</b> This field contains the total size of the data to be sent across the network. The maximum value for this field is 1792, and larger numbers will cause an error.
</td></tr>
<tr>
<td>13
</td>
<td><b>Own bit.</b> When this bit is set to 1, the controller is idle and not performing any DMA transfers on this descriptor. The driver sets this bit to zero to tell the controller to start transmitting the packet. The bit then remains zero until the entire packet has been copied from RAM into the controller's internal memory via DMA. The default value after a reset is one. Setting this bit to zero also clears all other status bits in this register.
</td></tr>
<tr>
<td>15
</td>
<td><b>Transmit OK.</b> After the own bit has been set by the hardware, indicating the DMA transfer has completed, the hardware will start to transmit the packet across the actual network. This bit will be set to one after the network transmission has completed.
</td></tr></tbody></table>
<h2><span class="mw-headline" id="ISR_Handler">ISR Handler</span></h2>
<p>When you handle an interrupt, you <i>have</i> to write the bit corresponding to the interrupt to reset it. The datasheet says reading the register is enough to reset the buffer to zero and writing has no effect. <i>This is not the case on QEMU</i>, and probably on some/most hardware too.
</p><p><b>Note that it is important you write to this register <i>before you read any packets from your buffers</i>, or the write to the register will have no effect, and any other packets than the first will not be delivered to your ISR.</b>
</p><p>For example, this is tested and works on QEmu:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="kt">void</span><span class="w"> </span><span class="nf">rtl8139_handler</span><span class="p">(</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">isr</span><span class="p">,</span><span class="w"> </span><span class="kt">uint64_t</span><span class="w"> </span><span class="n">error</span><span class="p">,</span><span class="w"> </span><span class="kt">uint64_t</span><span class="w"> </span><span class="n">irq</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">status</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">inw</span><span class="p">(</span><span class="n">io_base</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x3e</span><span class="p">);</span><span class="w"></span>
<span class="w">	</span><span class="n">outw</span><span class="p">(</span><span class="n">io_base</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x3E</span><span class="p">,</span><span class="w"> </span><span class="mh">0x05</span><span class="p">);</span><span class="w"></span>
<span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">status</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">TOK</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">		</span><span class="c1">// Sent</span>
<span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="w">	</span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">status</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">ROK</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">		</span><span class="c1">// Received</span>
<span class="w">		</span><span class="n">receive_packet</span><span class="p">();</span><span class="w"></span>
<span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="Related_Articles">Related Articles</span></h2>
<ul><li><a href="RTL8169" title="RTL8169">RTL8169</a> Successor Chipset</li></ul>
<h2><span class="mw-headline" id="External_Links">External Links</span></h2>
<ul><li><a rel="nofollow" class="external text" href="https://github.com/omarrx024/xos/tree/master/rtl8139">xOS RTL8139 Driver</a> (MIT license)</li>
<li><a rel="nofollow" class="external free" href="http://www.magnesium.net/~wpaul/rt/spec-8139cp(150).pdf">http://www.magnesium.net/~wpaul/rt/spec-8139cp(150).pdf</a>, Datasheet for the RTL8139C</li>
<li><a rel="nofollow" class="external free" href="http://www.cs.usfca.edu/~cruse/cs326f04/RTL8139D_DataSheet.pdf">http://www.cs.usfca.edu/~cruse/cs326f04/RTL8139D_DataSheet.pdf</a>, Datasheet for the RTL8139D, has more information</li>
<li><a rel="nofollow" class="external free" href="http://www.cs.usfca.edu/~cruse/cs326f04/RTL8139_ProgrammersGuide.pdf">http://www.cs.usfca.edu/~cruse/cs326f04/RTL8139_ProgrammersGuide.pdf</a>, Programming guide for the RTL8139</li>
<li><a rel="nofollow" class="external free" href="http://www.jbox.dk/sanos/source/sys/dev/rtl8139.c.html">http://www.jbox.dk/sanos/source/sys/dev/rtl8139.c.html</a>, Example Driver implementation (GPL Licensed)</li></ul>
<!-- 
NewPP limit report
Cached time: 20250211122633
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.058 seconds
Real time usage: 0.963 seconds
Preprocessor visited node count: 88/1000000
Post‐expand include size: 520/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 3/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 6798/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    1.563      1 -total
 62.82%    0.982      1 Template:In_Progress
 26.86%    0.420      1 Template:Wikitable
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2176-0!canonical and timestamp 20250211122632 and revision id 27699.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=RTL8139&amp;oldid=27699">https://wiki.osdev.org/index.php?title=RTL8139&amp;oldid=27699</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:In_Progress" title="Category:In Progress">In Progress</a></li><li><a href="./Category:Network_Hardware" title="Category:Network Hardware">Network Hardware</a></li><li><a href="./Category:Standards" title="Category:Standards">Standards</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=RTL8139" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="RTL8139#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="RTL8139" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:RTL8139&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="RTL8139"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=RTL8139&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=RTL8139&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/RTL8139" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/RTL8139" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=RTL8139&amp;oldid=27699" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=RTL8139&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-lang" class="vector-menu mw-portlet mw-portlet-lang vector-menu-portal portal" aria-labelledby="p-lang-label" role="navigation"  >
	<h3
		id="p-lang-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">In other languages</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li class="interlanguage-link interwiki-de mw-list-item"><a href="http://www.lowlevel.eu/wiki/RTL8139" title="RTL8139 – Deutsch" lang="de" hreflang="de" class="interlanguage-link-target"><span>Deutsch</span></a></li></ul>
		
	</div>
</nav>

</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 22 March 2023, at 02:31.</li>
	<li id="footer-info-0">This page has been accessed 12,615 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=RTL8139&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.058","walltime":"0.963","ppvisitednodes":{"value":88,"limit":1000000},"postexpandincludesize":{"value":520,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":3,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":6798,"limit":5000000},"timingprofile":["100.00%    1.563      1 -total"," 62.82%    0.982      1 Template:In_Progress"," 26.86%    0.420      1 Template:Wikitable"]},"cachereport":{"timestamp":"20250211122633","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":1062});});</script>
</body>
</html>