<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Rust Bare Bones - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"329c65316b4546841a8b8e9d","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Rust_Bare_Bones","wgTitle":"Rust Bare Bones","wgCurRevisionId":27572,"wgRevisionId":27572,"wgArticleId":3428,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","In Progress","Stubs","Level 2 Tutorials","Bare bones tutorials","Rust"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Rust_Bare_Bones","wgRelevantArticleId":3428,"wgIsProbablyEditable":false,
"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Rust_Bare_Bones rootpage-Rust_Bare_Bones skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Rust Bare Bones</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Rust_Bare_Bones#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Rust_Bare_Bones#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></tbody></table>
</center>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Stub.png" class="image" title="This article is a stub!"><img alt="This article is a stub!" src="images/f/fe/Stub.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a <a href="./Category:Stubs" title="Category:Stubs">stub</a>. You can help the wiki by <i>accurately</i> <a rel="nofollow" class="external text" href="https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;action=edit">contributing</a> to it.
</p>
</td>
<td>
</td></tr></tbody></table>
</center><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_2.png" class="image"><img alt="Difficulty 2.png" src="images/a/a1/Difficulty_2.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Medium</td></tr></tbody></table>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><big><b>WAIT! Have you read <a href="Getting_Started" title="Getting Started">Getting Started</a>, <a href="Beginner_Mistakes" title="Beginner Mistakes">Beginner Mistakes</a>, and some of the related <a href="./Category:OS_theory" title="Category:OS theory">OS theory</a>?</b></big>
</p>
</td></tr></tbody></table>
</center>
<table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear: right; border:1px solid #aaaaaa; background:#eee; text-align:center; width:200px; ;"><tbody><tr><th style="background:#ffce7b; padding:0.3em; font-size:1.1em;"><a href="Kernels" class="mw-redirect" title="Kernels">Kernel Designs</a></th></tr><tr><th>Models</th></tr><tr><td><div>
<p><a href="Monolithic_Kernel" title="Monolithic Kernel">Monolithic Kernel</a><br />
<a href="Microkernel" title="Microkernel">Microkernel</a><br />
<a href="Hybrid_Kernel" title="Hybrid Kernel">Hybrid Kernel</a><br />
<a href="Exokernel" title="Exokernel">Exokernel</a><br />
<a href="Nanokernel" class="mw-redirect" title="Nanokernel">Nano/Picokernel</a><br />
<a href="Exokernel#Cache_Kernel" title="Exokernel">Cache Kernel</a><br />
<a href="Exokernel#Virtualizing_Kernel" title="Exokernel">Virtualizing Kernel</a><br />
<a href="Megalithic_Kernel" title="Megalithic Kernel">Megalithic Kernel</a><br />
</p>
</div></td></tr><tr><th>Other Concepts</th></tr><tr><td><div>
<p><a href="Modular_Kernel" title="Modular Kernel">Modular Kernel</a><br />
<a href="Higher_Half_Kernel" title="Higher Half Kernel">Higher Half Kernel</a><br />
<a href="Creating_a_64-bit_kernel" title="Creating a 64-bit kernel">64-bit Kernel</a><br />
</p>
</div></td></tr></tbody></table>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Rust_Bare_Bones#Cross_Compiling"><span class="tocnumber">1</span> <span class="toctext">Cross Compiling</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Rust_Bare_Bones#Creating_a_target"><span class="tocnumber">2</span> <span class="toctext">Creating a target</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Rust_Bare_Bones#A_minimal_executable"><span class="tocnumber">3</span> <span class="toctext">A minimal executable</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Rust_Bare_Bones#Notes"><span class="tocnumber">4</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Rust_Bare_Bones#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Cross_Compiling">Cross Compiling</span></h2>
<p>Just like when building a OS in another language, such as C, you need to build a cross compiler. In contrast to GCC, this is much easier with Rust and its surrounding tools. Here's a list of the tools you'll need:
</p>
<ul><li>Rustup for managing your toolchain (<a rel="nofollow" class="external free" href="https://rustup.rs/">https://rustup.rs/</a>).</li>
<li>Rustc (installable via rustup)</li>
<li>Cargo (installable via rustup)</li></ul>
<p>The cross compiler and core library will automatically be fetched, built, and installed when you build the project <i>the right way</i>.
</p>
<h2><span class="mw-headline" id="Creating_a_target">Creating a target</span></h2>
<p>In order to specify how to build the cross compiler and what features to include, you have to make a <i>target.json</i> file. The specification can be found here: <a rel="nofollow" class="external free" href="https://book.avr-rust.com/005.1-the-target-specification-json-file.html">https://book.avr-rust.com/005.1-the-target-specification-json-file.html</a>.
</p><p>An example might be as follows (for an x86_64 platform):
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;llvm-target&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;x86_64-unknown-none&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;data-layout&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;e-m:e-i64:64-f80:128-n8:16:32:64-S128&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;arch&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;x86_64&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;target-endian&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;little&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;target-pointer-width&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;64&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;target-c-int-width&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;32&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;os&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;none&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;executables&quot;</span><span class="o">:</span><span class="w"> </span><span class="nb">true</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;linker-flavor&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;ld.lld&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;linker&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;rust-lld&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;panic-strategy&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;abort&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;disable-redzone&quot;</span><span class="o">:</span><span class="w"> </span><span class="nb">true</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;features&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;-mmx,-sse,+soft-float&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;dynamic-linking&quot;</span><span class="o">:</span><span class="w"> </span><span class="nb">false</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;relocation-model&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;pic&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;code-model&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;kernel&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;exe-suffix&quot;</span><span class="o">:</span><span class="w"> </span><span class="s">&quot;.elf&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;has-rpath&quot;</span><span class="o">:</span><span class="w"> </span><span class="nb">false</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;no-default-libraries&quot;</span><span class="o">:</span><span class="w"> </span><span class="nb">true</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;position-independent-executables&quot;</span><span class="o">:</span><span class="w"> </span><span class="nb">false</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="s">&quot;pre-link-args&quot;</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="s">&quot;ld.lld&quot;</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="s">&quot;--script=&lt;your linker script&gt;&quot;</span><span class="p">]</span><span class="w"></span>
<span class="w">  </span><span class="p">}</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<p>Please note that you also need to provide a linker script. This is more or less analogous to what you could provide for a kernel built in a more conventional language like C. This is pretty dependent on which executable format and which bootloader you use (among other things), so this isn't listed here.
</p>
<h2><span class="mw-headline" id="A_minimal_executable">A minimal executable</span></h2>
<p>This assumes you have at least some background with Rust (e.g. you've built some command line tools or crates before). It does not assume you know about the internals of the Rust language. It also assumes you will be using Cargo for your build system (you can call it from a Makefile if you need to do other things).
</p><p>Please note that this depends on which bootloader you are using. For the purposes of this example, we assume you are working with Limine, over the Limine protocol, with an ELF binary. This will be different if you are using a different setup.
</p><p>First, you must prepare your source. In general, rust tries to avoid command line flags in favour of in-source changes. As such, there is not Cargo or Rust flag to disable the standard library and add a custom panic handler. The below source takes care of that:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#![no_std]</span>

<span class="cp">#[no_mangle]</span>
<span class="n">fn</span><span class="w"> </span><span class="nf">_start</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">loop</span><span class="w"> </span><span class="p">{}</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>

<span class="cp">#[panic_handler]</span>
<span class="n">fn</span><span class="w"> </span><span class="nf">panic</span><span class="p">(</span><span class="n">_info</span><span class="o">:</span><span class="w"> </span><span class="o">&amp;</span><span class="n">core</span><span class="o">::</span><span class="n">panic</span><span class="o">::</span><span class="n">PanicInfo</span><span class="p">)</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="o">!</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">loop</span><span class="w"> </span><span class="p">{}</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<p>The above code tells the compiler to not include the Rust standard library (the core library is kept), not to mangle the _start symbol (Rust uses name mangling by default), and to use the panic() function as the panic handler. This approach by the Rust team generally keeps your rustc invocations simpler and easier to debug if anything goes wrong.
</p><p>Another thing to keep in mind is that Rust uses stack unwinding by default, however, this is dependent on an underlying OS, which we obviously don't have (hey, you're here for a reason). To disable stack unwinding and just abort on panic (after the panic handler is called, of course), modify your Cargo.toml:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="p">[</span><span class="n">profile</span><span class="p">.</span><span class="n">dev</span><span class="p">]</span><span class="w"></span>
<span class="n">panic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;abort&quot;</span><span class="w"></span>

<span class="p">[</span><span class="n">profile</span><span class="p">.</span><span class="n">release</span><span class="p">]</span><span class="w"></span>
<span class="n">panic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;abort&quot;</span><span class="w"></span>
</pre></div>
<p>Run cargo build to build your kernel, and do whatever you wish with the resulting ELF binary (look at your bootloaders instructions on how to build a bootable image).
</p>
<h2><span class="mw-headline" id="Notes">Notes</span></h2>
<ul><li>There aren't as many resources for using rust to build a kernel. Be aware of this if this is your first attempt.</li>
<li>The rust libcore can easily be included in a kernel, it's analogous to C's freestanding headers</li>
<li>Enable `--gc-sections` in lld to avoid having to define symbols you don't need (e.g. floating point math functions)</li>
<li>Always use a target json file (Flexible Target Specifications)</li>
<li>If you're building a UEFI app, disable function sections as well
<ul><li>rustc puts every item in its own section by default. The PE format has a limit of 96 sections. So unless you disable function sections, your project will most likely fail to load.</li></ul></li></ul>
<p><br />
</p>
<h2><span class="mw-headline" id="Examples">Examples</span></h2>
<ul><li><a rel="nofollow" class="external free" href="https://github.com/thepowersgang/rust-barebones-kernel">https://github.com/thepowersgang/rust-barebones-kernel</a> - A  framework written in rust 1.0 alpha, supporting x86 and x86-64, boots off multiboot.</li>
<li><a rel="nofollow" class="external free" href="https://github.com/charliesome/rustboot">https://github.com/charliesome/rustboot</a> - VERY old (rust 0.7), includes a bootsector.</li>
<li><a rel="nofollow" class="external free" href="https://github.com/redox-os/redox">https://github.com/redox-os/redox</a></li>
<li><a rel="nofollow" class="external free" href="http://os.phil-opp.com/">http://os.phil-opp.com/</a> - New Rust OS Tutorial/Blog by Philipp Oppermann</li></ul>
<!-- 
NewPP limit report
Cached time: 20250212011247
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.053 seconds
Real time usage: 0.436 seconds
Preprocessor visited node count: 434/1000000
Post‐expand include size: 3959/2097152 bytes
Template argument size: 2390/2097152 bytes
Highest expansion depth: 19/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 7028/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%   11.293      1 -total
 58.38%    6.592     23 Template:If
 44.47%    5.022     23 Template:Show1
 38.16%    4.309      1 Template:Kernel_designs
 35.53%    4.012      1 Template:Rating
 33.98%    3.837      1 Template:SmallNavBox
  9.77%    1.103      1 Template:In_Progress
  9.39%    1.060      3 Template:Eq
  7.35%    0.830      1 Template:Stub
  6.92%    0.782      1 Template:BeginnersWarning
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3428-0!canonical and timestamp 20250212011247 and revision id 27572.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;oldid=27572">https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;oldid=27572</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:In_Progress" title="Category:In Progress">In Progress</a></li><li><a href="./Category:Stubs" title="Category:Stubs">Stubs</a></li><li><a href="./Category:Level_2_Tutorials" title="Category:Level 2 Tutorials">Level 2 Tutorials</a></li><li><a href="./Category:Bare_bones_tutorials" title="Category:Bare bones tutorials">Bare bones tutorials</a></li><li><a href="./Category:Rust" title="Category:Rust">Rust</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Rust+Bare+Bones" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Rust_Bare_Bones#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Rust_Bare_Bones" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Rust_Bare_Bones&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Rust_Bare_Bones"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Rust_Bare_Bones" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Rust_Bare_Bones" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;oldid=27572" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 10 January 2023, at 02:16.</li>
	<li id="footer-info-0">This page has been accessed 3,853 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Rust_Bare_Bones&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.053","walltime":"0.436","ppvisitednodes":{"value":434,"limit":1000000},"postexpandincludesize":{"value":3959,"limit":2097152},"templateargumentsize":{"value":2390,"limit":2097152},"expansiondepth":{"value":19,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":7028,"limit":5000000},"timingprofile":["100.00%   11.293      1 -total"," 58.38%    6.592     23 Template:If"," 44.47%    5.022     23 Template:Show1"," 38.16%    4.309      1 Template:Kernel_designs"," 35.53%    4.012      1 Template:Rating"," 33.98%    3.837      1 Template:SmallNavBox","  9.77%    1.103      1 Template:In_Progress","  9.39%    1.060      3 Template:Eq","  7.35%    0.830      1 Template:Stub","  6.92%    0.782      1 Template:BeginnersWarning"]},"cachereport":{"timestamp":"20250212011247","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":546});});</script>
</body>
</html>