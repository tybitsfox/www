<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Ada - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"c83b4b7b2a3aca88949a9dae","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Ada","wgTitle":"Ada","wgCurRevisionId":28262,"wgRevisionId":28262,"wgArticleId":4477,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","Ada","Languages"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Ada","wgRelevantArticleId":4477,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,
"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Ada rootpage-Ada skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Ada</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Ada#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Ada#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>Ada is a strongly typed programming language that enjoys widespread use within the embedded systems and safety-critical software industry. It was originally developed under contract to the United States Department of Defense, as part of a project to develop a single unified language meeting the safety and reliability requirements of the department's embedded systems projects. 
</p><p>The language was first standardized in 1983, and has since undergone multiple revisions. The latest version is Ada 2012. The language itself is defined by the ISO standard <a rel="nofollow" class="external text" href="https://www.iso.org/standard/61507.html">ISO/IEC 8652</a>, and the Military standard MIL-STD-1815A. In 1991, the US Department of Defense mandated the use of Ada for all software, though exceptions to this rule were often granted. This mandate was effectively removed in 1997, as the DoD began to embrace 'commercial off the shelf' (COTS) technology. Similar requirements existed in other NATO countries for command and control systems, and Ada was the mandated or preferred language for defense-related applications in countries such as Sweden, Germany, and Canada.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Ada#Features"><span class="tocnumber">1</span> <span class="toctext">Features</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Ada#Custom_types"><span class="tocnumber">1.1</span> <span class="toctext">Custom types</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="Ada#Representation_clauses"><span class="tocnumber">1.2</span> <span class="toctext">Representation clauses</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="Ada#Example"><span class="tocnumber">2</span> <span class="toctext">Example</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Ada#See_Also"><span class="tocnumber">3</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="Ada#Articles"><span class="tocnumber">3.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="Ada#Operating_System_projects_using_Ada"><span class="tocnumber">3.2</span> <span class="toctext">Operating System projects using Ada</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="Ada#External_Links"><span class="tocnumber">3.3</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Features">Features</span></h2>
<p>Ada has a number of useful features that are of particular interest for low-level programming and operating system development. 
</p>
<h3><span class="mw-headline" id="Custom_types">Custom types</span></h3>
<p>In addition to being a strongly typed language, Ada allows for the definition of new scalar, enumerated and record types. Custom primitive types can also be constrained to a predefined range of values. The example below demonstrates the definition of a new integer type based upon Ada's native <tt>Natural</tt> type, restricted to a predefined range. The use of the <tt>subtype</tt> directive informs the compiler that other variables of the <tt>Natural</tt> type are compatible with the newly defined subtype.
</p>
<div class="mw-highlight mw-highlight-lang-ada mw-content-ltr" dir="ltr"><pre><span></span>   <span class="no">VGA_COL_COUNT</span> <span class="p">:</span> <span class="kr">constant</span> <span class="p">:=</span> <span class="mi">80</span><span class="p">;</span>
   <span class="no">VGA_ROW_COUNT</span> <span class="p">:</span> <span class="kr">constant</span> <span class="p">:=</span> <span class="mi">24</span><span class="p">;</span>

   <span class="kd">subtype</span> <span class="kt">Col</span> <span class="kr">is</span> <span class="kt">Natural</span> <span class="kr">range</span> <span class="mi">0</span> <span class="p">..</span> <span class="n">VGA_COL_COUNT</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
   <span class="kd">subtype</span> <span class="kt">Row</span> <span class="kr">is</span> <span class="kt">Natural</span> <span class="kr">range</span> <span class="mi">0</span> <span class="p">..</span> <span class="n">VGA_ROW_COUNT</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</pre></div>
<p>The below example illustrates the creation of incompatible custom integer types. While their base type and range constraints are identical, Ada treats both as separate, incompatible types. An assignment of a variable of one type to the value of another is illegal, and will trigger a compile-time error.
</p>
<div class="mw-highlight mw-highlight-lang-ada mw-content-ltr" dir="ltr"><pre><span></span>   <span class="kd">type</span> <span class="kt">Integer_1</span> <span class="kr">is</span> <span class="kr">range</span> <span class="mi">1</span> <span class="p">..</span> <span class="mi">10</span><span class="p">;</span>
   <span class="kd">type</span> <span class="kt">Integer_2</span> <span class="kr">is</span> <span class="kr">range</span> <span class="mi">1</span> <span class="p">..</span> <span class="mi">10</span><span class="p">;</span>
   <span class="n">A</span> <span class="p">:</span> <span class="n">Integer_1</span> <span class="p">:=</span> <span class="mi">8</span><span class="p">;</span>
   <span class="n">B</span> <span class="p">:</span> <span class="n">Integer_2</span> <span class="p">:=</span> <span class="n">A</span><span class="p">;</span> <span class="c1">-- illegal!</span>
</pre></div>
<p>The following example demonstrates the creation of a custom enumerated type. It also demonstrates a subtype of an enumerated type with a constrained range of values.
</p>
<div class="mw-highlight mw-highlight-lang-ada mw-content-ltr" dir="ltr"><pre><span></span>   <span class="kd">type</span> <span class="kt">Day_Of_Week</span> <span class="kr">is</span> <span class="p">(</span><span class="nv">Monday</span><span class="p">,</span> <span class="nv">Tuesday</span><span class="p">,</span>
     <span class="nv">Wednesday</span><span class="p">,</span> <span class="nv">Thursday</span><span class="p">,</span> <span class="nv">Friday</span><span class="p">,</span> <span class="nv">Saturday</span><span class="p">,</span> <span class="nv">Sunday</span><span class="p">);</span>

   <span class="kd">subtype</span> <span class="kt">Work_Day</span> <span class="kr">is</span> <span class="n">Day_Of_Week</span> <span class="kr">range</span> <span class="n">Monday</span> <span class="p">..</span> <span class="n">Friday</span><span class="p">;</span>
</pre></div>
<p>A variable with the type of <tt>Work_Day</tt> is restricted to its constrained range. Any attempt to assign a value outside of this range to a variable of this type will raise a <tt>Constraint_Error</tt> exception at runtime.
</p><p><br />
</p>
<h3><span class="mw-headline" id="Representation_clauses">Representation clauses</span></h3>
<p>Ada allows for explicitly defining the in-memory representation of scalar and compound types. The following example demonstrates the definition of a record type (equivalent to structures in C), as well as its associated representation in memory.
</p>
<div class="mw-highlight mw-highlight-lang-ada mw-content-ltr" dir="ltr"><pre><span></span>   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="c1">--  The format of the System Table Descriptor pointer used by the processor</span>
   <span class="c1">--  to load descriptor tables like the GDT and IDT.</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="kd">type</span> <span class="kt">System_Table_Descriptor</span> <span class="kr">is</span>
      <span class="kr">record</span>
         <span class="n">Size</span>   <span class="p">:</span> <span class="n">Unsigned_16</span><span class="p">;</span>
         <span class="n">Offset</span> <span class="p">:</span> <span class="n">System</span><span class="p">.</span><span class="kt">Address</span><span class="p">;</span>
      <span class="kr">end record</span>
   <span class="kr">with</span> <span class="n">Size</span> <span class="p">=&gt;</span> <span class="mi">48</span><span class="p">;</span>
   <span class="kr">for</span> <span class="n">System_Table_Descriptor</span> <span class="kn">use</span>
      <span class="nn">record</span>
         <span class="n">Size</span>   <span class="kr">at</span> <span class="mi">0</span> <span class="kr">range</span> <span class="mi">0</span>  <span class="p">..</span> <span class="mi">15</span><span class="p">;</span>
         <span class="n">Offset</span> <span class="kr">at</span> <span class="mi">0</span> <span class="kr">range</span> <span class="mi">16</span> <span class="p">..</span> <span class="mi">47</span><span class="p">;</span>
      <span class="kr">end</span> <span class="kr">record</span><span class="p">;</span>
</pre></div>
<p>The <tt>Size</tt> <i>aspect specifier</i> instructs the compiler that the <tt>System_Table_Descriptor</tt> type must be 48 bits in size. The <i>record representation clause</i> instructs the compiler as to the required layout of this record type in memory. This example specifies that the <tt>Size</tt> member should occupy bits 0 to 15, and the <tt>Offset</tt> member should occupy bits 16 to 47. This feature is analogous to C's bit-fields.
</p><p>The following example demonstrates defining the in-memory representation of an enumerated type.
</p>
<div class="mw-highlight mw-highlight-lang-ada mw-content-ltr" dir="ltr"><pre><span></span>   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="c1">--  The privilege level for a particular descriptor.</span>
   <span class="c1">--  These correspond to the &#39;protection ring&#39; that this descriptor is</span>
   <span class="c1">--  accessible from.</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="kd">type</span> <span class="kt">Descriptor_Privilege_Level</span> <span class="kr">is</span> <span class="p">(</span>
      <span class="nv">Ring_0</span><span class="p">,</span>
      <span class="nv">Ring_1</span><span class="p">,</span>
      <span class="nv">Ring_2</span><span class="p">,</span>
      <span class="nv">Ring_3</span>
   <span class="p">)</span>
   <span class="kr">with</span> <span class="n">Size</span> <span class="p">=&gt;</span> <span class="mi">2</span><span class="p">;</span>
   <span class="kr">for</span> <span class="n">Descriptor_Privilege_Level</span> <span class="kn">use</span> <span class="p">(</span>
      <span class="n">Ring_0</span> <span class="p">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
      <span class="n">Ring_1</span> <span class="p">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
      <span class="n">Ring_2</span> <span class="p">=&gt;</span> <span class="mi">2</span><span class="p">,</span>
      <span class="n">Ring_3</span> <span class="p">=&gt;</span> <span class="mi">3</span>
   <span class="p">);</span>
</pre></div>
<p>The <tt>Size</tt> <i>aspect specifier</i> instructs the compiler that the <tt>Descriptor_Privilege_Level</tt> type must be 2 bits in size. The <i>representation clause</i> instructs the compiler as to required representation of each possible value of the enumerated type in memory. In this example the value of <tt>Ring_0</tt> will be represented by a value of <tt>0x0</tt> in memory, the value of <tt>Ring_1</tt> will be represented by <tt>0x1</tt>, and so on.
</p>
<h2><span class="mw-headline" id="Example">Example</span></h2>
<p>The following example, and accompanying comparison with C, demonstrates the configuration of a hypothetical <a href="UART" title="UART">UART</a> device by interfacing with an 8-bit memory-mapped configuration register. This example has been adapted from a presentation by AdaCore viewable at: <a rel="nofollow" class="external free" href="https://www.youtube.com/watch?v=qvmDqbuQe-M">https://www.youtube.com/watch?v=qvmDqbuQe-M</a>
</p>
<div class="mw-highlight mw-highlight-lang-ada mw-content-ltr" dir="ltr"><pre><span></span><span class="kn">with</span> <span class="nn">System.Storage_Elements</span><span class="p">;</span> <span class="kn">use</span> <span class="nn">System.Storage_Elements</span><span class="p">;</span>

<span class="c1">-------------------------------------------------------------------------------</span>
<span class="c1">--  Main</span>
<span class="c1">-------------------------------------------------------------------------------</span>
<span class="kd">procedure</span> <span class="nf">Main</span> <span class="kr">is</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="c1">--  Baud rate type.</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="kd">type</span> <span class="kt">Baud_Rate_T</span> <span class="kr">is</span> <span class="p">(</span><span class="nv">b_9600</span><span class="p">,</span> <span class="nv">b_14400</span><span class="p">,</span> <span class="nv">b_115200</span><span class="p">);</span>
   <span class="kr">for</span> <span class="n">Baud_Rate_T</span> <span class="kn">use</span> <span class="p">(</span>
     <span class="n">b_9600</span>   <span class="p">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
     <span class="n">b_14400</span>  <span class="p">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
     <span class="n">b_115200</span> <span class="p">=&gt;</span> <span class="mi">7</span>
   <span class="p">);</span>

   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="c1">--  Parity Select Type</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="kd">type</span> <span class="kt">Parity_T</span> <span class="kr">is</span> <span class="p">(</span><span class="nv">None</span><span class="p">,</span> <span class="nv">Even</span><span class="p">,</span> <span class="nv">Odd</span><span class="p">);</span>
   <span class="kr">for</span> <span class="n">Parity_T</span> <span class="kn">use</span> <span class="p">(</span>
     <span class="n">None</span> <span class="p">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
     <span class="n">Even</span> <span class="p">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
     <span class="n">Odd</span>  <span class="p">=&gt;</span> <span class="mi">2</span>
   <span class="p">);</span>

   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="c1">--  Control Register for a hypothetical UART device.</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="kd">type</span> <span class="kt">UART_Control_Register_T</span> <span class="kr">is</span>
      <span class="kr">record</span>
         <span class="n">Baud_Rate</span> <span class="p">:</span> <span class="n">Baud_Rate_T</span><span class="p">;</span>
         <span class="n">Parity</span>    <span class="p">:</span> <span class="n">Parity_T</span><span class="p">;</span>
         <span class="n">Unused</span>    <span class="p">:</span> <span class="kt">Boolean</span> <span class="p">:=</span> <span class="kc">False</span><span class="p">;</span>
         <span class="n">ISR</span>       <span class="p">:</span> <span class="kt">Boolean</span><span class="p">;</span>
      <span class="kr">end record</span>
   <span class="kr">with</span> <span class="n">Volatile_Full_Access</span><span class="p">,</span>
     <span class="n">Size</span> <span class="p">=&gt;</span> <span class="mi">8</span><span class="p">;</span>
   <span class="kr">for</span> <span class="n">UART_Control_Register_T</span> <span class="kn">use</span>
      <span class="nn">record</span>
         <span class="n">Baud_Rate</span> <span class="kr">at</span> <span class="mi">0</span> <span class="kr">range</span> <span class="mi">0</span> <span class="p">..</span> <span class="mi">2</span><span class="p">;</span>
         <span class="n">Parity</span>    <span class="kr">at</span> <span class="mi">0</span> <span class="kr">range</span> <span class="mi">3</span> <span class="p">..</span> <span class="mi">4</span><span class="p">;</span>
         <span class="n">Unused</span>    <span class="kr">at</span> <span class="mi">0</span> <span class="kr">range</span> <span class="mi">5</span> <span class="p">..</span> <span class="mi">6</span><span class="p">;</span>
         <span class="n">ISR</span>       <span class="kr">at</span> <span class="mi">0</span> <span class="kr">range</span> <span class="mi">7</span> <span class="p">..</span> <span class="mi">7</span><span class="p">;</span>
      <span class="kr">end</span> <span class="kr">record</span><span class="p">;</span>

   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="c1">--  The address of the UART control register.</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="no">UART_CONTROL_REG_ADDR</span> <span class="p">:</span> <span class="kr">constant</span> <span class="n">System</span><span class="p">.</span><span class="kt">Address</span>
     <span class="p">:=</span> <span class="n">To_Address</span><span class="p">(</span><span class="mh">16#8000_0040#</span><span class="p">);</span>

   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="c1">--  The UART control register itself.</span>
   <span class="c1">----------------------------------------------------------------------------</span>
   <span class="n">UART_Control_Register</span> <span class="p">:</span> <span class="n">UART_Control_Register_T</span>
   <span class="kn">with</span> <span class="nn">Import</span><span class="p">,</span>
     <span class="n">Convention</span> <span class="p">=&gt;</span> <span class="n">Ada</span><span class="p">,</span>
     <span class="kt">Address</span>    <span class="p">=&gt;</span> <span class="n">UART_CONTROL_REG_ADDR</span><span class="p">;</span>

<span class="kr">begin</span>
   <span class="c1">--  Configure the UART.</span>
   <span class="n">UART_Control_Register</span><span class="p">.</span><span class="n">Baud_Rate</span> <span class="p">:=</span> <span class="n">b_115200</span><span class="p">;</span>
   <span class="n">UART_Control_Register</span><span class="p">.</span><span class="n">Parity</span>    <span class="p">:=</span> <span class="n">Even</span><span class="p">;</span>
<span class="kr">end</span> <span class="nf">Main</span><span class="p">;</span>
</pre></div>
<p>Contrast this with the same functionality implemented in C. Despite being shorter in length, the register cannot be altered without using bitwise operators to manipulate the individual fields. This approach is generally considered more error-prone than using a record in Ada overlaid at the register's memory-mapped address. It is possible to define a <tt>struct</tt> type in C with bit-fields for the individual elements, however the C standard does not guarantee the layout and order of the individual fields (refer to section 6.7.2.1 paragraph 11 of the C1X standard).
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;stdint.h&gt;</span><span class="cp"></span>

<span class="cp">#define UART_CNTL_REG_ADDR       0x80000040</span>
<span class="cp">#define UART_CNTL_BAUD_MASK      0x07</span>
<span class="cp">#define UART_CNTL_BAUD_SHIFT     0</span>
<span class="cp">#define UART_CNTL_PARITY_MASK    0x18</span>
<span class="cp">#define UART_CNTL_PARITY_SHIFT   3</span>
<span class="cp">#define UART_CNTL_IE_MASK        0x80</span>
<span class="cp">#define UART_CNTL_BAUD_9600      0</span>
<span class="cp">#define UART_CNTL_BAUD_14400     1</span>
<span class="cp">#define UART_CNTL_BAUD_115200    7</span>
<span class="cp">#define UART_CNTL_PARITY_NONE    0</span>
<span class="cp">#define UART_CNTL_PARITY_EVEN    1</span>
<span class="cp">#define UART_CNTL_PARITY_ODD     2</span>
<span class="cp">#define UART_CNTL_ISR_ENABLE     2</span>
<span class="cp">#define UART_CNTL_ISR_DISABLE    2</span>

<span class="kt">int</span><span class="w"> </span><span class="nf">main</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">argc</span><span class="p">,</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="o">**</span><span class="n">argv</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">	</span><span class="cm">/** The UART control register pointer. */</span><span class="w"></span>
<span class="w">	</span><span class="k">volatile</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="o">*</span><span class="n">uart_control_reg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">uint8_t</span><span class="o">*</span><span class="p">)</span><span class="n">UART_CNTL_REG_ADDR</span><span class="p">;</span><span class="w"></span>

<span class="w">	</span><span class="c1">// Configure the UART.</span>
<span class="w">	</span><span class="o">*</span><span class="n">uart_control_reg</span><span class="w"> </span><span class="o">&amp;=</span><span class="w"> </span><span class="o">~</span><span class="n">UART_CNTL_BAUD_MASK</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="o">*</span><span class="n">uart_control_reg</span><span class="w"> </span><span class="o">|=</span><span class="w"> </span><span class="n">UART_CNTL_BAUD_115200</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="o">*</span><span class="n">uart_control_reg</span><span class="w"> </span><span class="o">&amp;=</span><span class="w"> </span><span class="o">~</span><span class="n">UART_CNTL_PARITY_MASK</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="o">*</span><span class="n">uart_control_reg</span><span class="w"> </span><span class="o">|=</span><span class="w"> </span><span class="p">(</span><span class="n">UART_CNTL_PARITY_EVEN</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="n">UART_CNTL_PARITY_SHIFT</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="Ada_Bare_bones" class="mw-redirect" title="Ada Bare bones">Ada Bare bones</a></li>
<li><a href="Ada_Runtime_Library" title="Ada Runtime Library">Ada Runtime Library</a></li>
<li><a href="BOOTBOOT" title="BOOTBOOT">BOOTBOOT</a> loader has an example 64 bit higher half kernel in Ada</li></ul>
<h3><span class="mw-headline" id="Operating_System_projects_using_Ada">Operating System projects using Ada</span></h3>
<ul><li><a rel="nofollow" class="external text" href="https://ironclad.nongnu.org">Ironclad</a></li>
<li><a rel="nofollow" class="external text" href="https://muen.codelabs.ch/">Muen Separation Kernel</a></li>
<li><a rel="nofollow" class="external text" href="https://marte.unican.es/">MaRTE OS</a></li>
<li><a rel="nofollow" class="external text" href="https://github.com/wookey-project/ewok-kernel">EwoK</a></li>
<li><a rel="nofollow" class="external text" href="https://github.com/ajxs/cxos">CXOS</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="https://www.adaic.org/">Ada Resource Association</a></li>
<li><a rel="nofollow" class="external text" href="https://github.com/ohenley/awesome-ada">Awesome-Ada: A curated list of awesome resources related to the Ada and SPARK programming language</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211124016
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.048 seconds
Real time usage: 1.039 seconds
Preprocessor visited node count: 63/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 17009/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4477-0!canonical and timestamp 20250211124015 and revision id 28262.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Ada&amp;oldid=28262">https://wiki.osdev.org/index.php?title=Ada&amp;oldid=28262</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Ada" title="Category:Ada">Ada</a></li><li><a href="./Category:Languages" title="Category:Languages">Languages</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Ada" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Ada#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Ada" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Ada&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Ada"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Ada&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Ada&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Ada" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Ada" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Ada&amp;oldid=28262" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Ada&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 4 August 2023, at 01:53.</li>
	<li id="footer-info-0">This page has been accessed 3,196 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Ada&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.048","walltime":"1.039","ppvisitednodes":{"value":63,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":17009,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211124016","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":1141});});</script>
</body>
</html>