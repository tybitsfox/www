<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Memory Map (S390) - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"0ab606eb06825af154e19e5d","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Memory_Map_(S390)","wgTitle":"Memory Map (S390)","wgCurRevisionId":26856,"wgRevisionId":26856,"wgArticleId":4644,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","S390"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Memory_Map_(S390)","wgRelevantArticleId":4644,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Memory_Map_S390 rootpage-Memory_Map_S390 skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Memory Map (S390)</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Memory_Map_(S390)#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Memory_Map_(S390)#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>The memory map on the S390 is very simple, the first 1024 (or 8192, if on z/Arch) bytes are used as <a href="PSA" class="mw-redirect" title="PSA">PSA</a> area. The <a href="https://wiki.osdev.org/index.php?title=IPL&amp;action=edit&amp;redlink=1" class="new" title="IPL (page does not exist)">IPL</a> is loaded just after that said PSA.
</p>
<h2><span class="mw-headline" id="Detecting_memory">Detecting memory</span></h2>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* We are going to read in pairs of 1MiB and when we hit the memory limit we</span>
<span class="cm"> * will instantly catch the program exception and stop counting, then it&#39;s just</span>
<span class="cm"> * a matter of returning what we could count&#160;:) */</span><span class="w"></span>
<span class="kt">size_t</span><span class="w"> </span><span class="nf">s390_get_memsize</span><span class="p">(</span><span class="w"></span>
<span class="w">    </span><span class="kt">void</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="k">const</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="o">*</span><span class="n">probe</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="k">const</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="mh">0x0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="kt">int</span><span class="w"> </span><span class="n">r</span><span class="p">;</span><span class="w"></span>
<span class="w">        </span><span class="cm">/* Do a &quot;probe&quot; read */</span><span class="w"></span>
<span class="w">        </span><span class="n">r</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">s390_address_is_valid</span><span class="p">(</span><span class="n">probe</span><span class="p">);</span><span class="w"></span>
<span class="w">        </span><span class="k">if</span><span class="p">(</span><span class="n">r</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">            </span><span class="n">kprintf</span><span class="p">(</span><span class="s">&quot;Done! %p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="kt">uintptr_t</span><span class="p">)</span><span class="n">probe</span><span class="p">);</span><span class="w"></span>
<span class="w">            </span><span class="k">break</span><span class="p">;</span><span class="w"></span>
<span class="w">        </span><span class="p">}</span><span class="w"></span>

<span class="w">        </span><span class="n">kprintf</span><span class="p">(</span><span class="s">&quot;Memory %p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="kt">uintptr_t</span><span class="p">)</span><span class="n">probe</span><span class="p">);</span><span class="w"></span>

<span class="w">        </span><span class="cm">/* Go to next MiB */</span><span class="w"></span>
<span class="w">        </span><span class="n">probe</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="mi">1048576</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="p">}</span><span class="w"></span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="p">(</span><span class="kt">size_t</span><span class="p">)</span><span class="n">probe</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<p>Now there needs to be a function to "catch" the exceptions recognized by the processor:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Check if an address is valid - this only catches program exceptions to</span>
<span class="cm"> * determine if it&#39;s valid or not */</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="nf">s390_address_is_valid</span><span class="p">(</span><span class="w"></span>
<span class="w">    </span><span class="k">volatile</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="n">probe</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">int</span><span class="w"> </span><span class="n">r</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>

<span class="w">    </span><span class="n">S390_PSW_DEFAULT_TYPE</span><span class="w"> </span><span class="n">old_pc_psw</span><span class="p">;</span><span class="w"></span>
<span class="cp">#if (MACHINE &gt;= M_ZARCH)</span>
<span class="w">    </span><span class="k">struct</span><span class="w"> </span><span class="nc">s390x_psw</span><span class="w"> </span><span class="n">pc_psw</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="mh">0x00040000</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">S390_PSW_AM64</span><span class="p">,</span><span class="w"> </span><span class="n">S390_PSW_DEFAULT_AMBIT</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"></span>
<span class="w">        </span><span class="p">(</span><span class="kt">uint32_t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">invalid</span><span class="w"></span>
<span class="w">    </span><span class="p">};</span><span class="w"></span>
<span class="cp">#else</span>
<span class="w">    </span><span class="k">struct</span><span class="w"> </span><span class="nc">s390_psw</span><span class="w"> </span><span class="n">pc_psw</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="mh">0x000C0000</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="kt">uint32_t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">invalid</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">S390_PSW_DEFAULT_AMBIT</span><span class="w"></span>
<span class="w">    </span><span class="p">};</span><span class="w"></span>
<span class="cp">#endif</span>

<span class="cp">#if (MACHINE &gt;= M_ZARCH)</span>
<span class="w">    </span><span class="n">memcpy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">old_pc_psw</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">S390_FLCEPNPSW</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">s390x_psw</span><span class="p">));</span><span class="w"></span>
<span class="w">    </span><span class="n">memcpy</span><span class="p">((</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">S390_FLCEPNPSW</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">pc_psw</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">s390x_psw</span><span class="p">));</span><span class="w"></span>
<span class="cp">#else</span>
<span class="w">    </span><span class="n">memcpy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">old_pc_psw</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">S390_FLCPNPSW</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">s390_psw</span><span class="p">));</span><span class="w"></span>
<span class="w">    </span><span class="n">memcpy</span><span class="p">((</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">S390_FLCPNPSW</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">pc_psw</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">s390_psw</span><span class="p">));</span><span class="w"></span>
<span class="cp">#endif</span>

<span class="w">    </span><span class="o">*</span><span class="p">((</span><span class="k">volatile</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">probe</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="k">goto</span><span class="w"> </span><span class="n">end</span><span class="p">;</span><span class="w"></span>
<span class="nl">invalid</span><span class="p">:</span><span class="w"></span>
<span class="w">    </span><span class="n">r</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">-1</span><span class="p">;</span><span class="w"></span>
<span class="nl">end</span><span class="p">:</span><span class="w"></span>
<span class="cp">#if (MACHINE &gt;= M_ZARCH)</span>
<span class="w">    </span><span class="n">memcpy</span><span class="p">((</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">S390_FLCEPNPSW</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">old_pc_psw</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">s390x_psw</span><span class="p">));</span><span class="w"></span>
<span class="cp">#else</span>
<span class="w">    </span><span class="n">memcpy</span><span class="p">((</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">S390_FLCPNPSW</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">old_pc_psw</span><span class="p">,</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">s390_psw</span><span class="p">));</span><span class="w"></span>
<span class="cp">#endif</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="n">r</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<p>Some C compilers are known to crash or even ABEND during compilation if addresses of labels are taken via the &amp;&amp; operator, alternatively using direct high-level assembler syntax:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="err">*</span><span class="w"> </span><span class="nf">HwCheckAddress</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nl">IN:</span><span class="w"></span>
<span class="err">*</span><span class="w">    </span><span class="nf">pointer</span><span class="w"> </span><span class="no">to</span><span class="w"> </span><span class="no">address</span><span class="w"> </span><span class="no">to</span><span class="w"> </span><span class="no">probe</span><span class="w"></span>
<span class="err">*</span><span class="w"></span>
<span class="w">         </span><span class="nf">ENTRY</span><span class="w"> </span><span class="err">@</span><span class="no">ZHWCHKA</span><span class="w"></span>
<span class="err">@</span><span class="nf">ZHWCHKA</span><span class="w"> </span><span class="no">DS</span><span class="w"> </span><span class="mi">0</span><span class="no">H</span><span class="w"></span>
<span class="w">         </span><span class="nf">SAVE</span><span class="w"> </span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">12</span><span class="p">),,</span><span class="err">@</span><span class="no">ZHWCHKA</span><span class="w"></span>
<span class="w">         </span><span class="nf">LR</span><span class="w"> </span><span class="no">R12</span><span class="p">,</span><span class="no">R15</span><span class="w"></span>
<span class="w">         </span><span class="nf">USING</span><span class="w"> </span><span class="err">@</span><span class="no">ZHWCHKA</span><span class="p">,</span><span class="mi">12</span><span class="w"></span>
<span class="w">         </span><span class="nf">LR</span><span class="w"> </span><span class="no">R11</span><span class="p">,</span><span class="no">R1</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nf">CATCHPSW</span><span class="w"> </span><span class="no">address</span><span class="w"> </span><span class="no">on</span><span class="w"> </span><span class="no">R1</span><span class="w"></span>
<span class="w">         </span><span class="nf">L</span><span class="w"> </span><span class="no">R1</span><span class="p">,</span><span class="err">=</span><span class="no">A</span><span class="p">(</span><span class="no">CATCHPSW</span><span class="p">)</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nf">Save</span><span class="w"> </span><span class="no">address</span><span class="w"> </span><span class="no">of</span><span class="w"> </span><span class="no">TMPSAVE</span><span class="w"> </span><span class="no">on</span><span class="w"> </span><span class="no">R2</span><span class="w"></span>
<span class="w">         </span><span class="nf">L</span><span class="w"> </span><span class="no">R2</span><span class="p">,</span><span class="err">=</span><span class="no">A</span><span class="p">(</span><span class="no">TMPSAVE</span><span class="p">)</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nf">And</span><span class="w"> </span><span class="no">FLCPNPSW</span><span class="w"> </span><span class="no">on</span><span class="w"> </span><span class="no">R3</span><span class="w"></span>
<span class="w">         </span><span class="nf">L</span><span class="w"> </span><span class="no">R3</span><span class="p">,</span><span class="no">FLCPNPSW</span><span class="w"></span>
<span class="err">*</span><span class="w"></span>
<span class="w">         </span><span class="nf">MVC</span><span class="w"> </span><span class="mi">0</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="no">R2</span><span class="p">),</span><span class="mi">0</span><span class="p">(</span><span class="no">R3</span><span class="p">)</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="na">...</span><span class="w"> </span><span class="no">use</span><span class="w"> </span><span class="no">a</span><span class="w"> </span><span class="no">new</span><span class="w"> </span><span class="no">PSW</span><span class="w"> </span><span class="no">to</span><span class="w"> </span><span class="no">catch</span><span class="w"> </span><span class="no">the</span><span class="w"> </span><span class="no">exceptions</span><span class="w"></span>
<span class="w">         </span><span class="nf">MVC</span><span class="w"> </span><span class="mi">0</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="no">R3</span><span class="p">),</span><span class="mi">0</span><span class="p">(</span><span class="no">R1</span><span class="p">)</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nf">Probe</span><span class="w"> </span><span class="no">the</span><span class="w"> </span><span class="no">address</span><span class="p">,</span><span class="w"> </span><span class="no">if</span><span class="w"> </span><span class="no">it</span><span class="w"> </span><span class="no">raises</span><span class="w"> </span><span class="no">a</span><span class="w"> </span><span class="no">PC</span><span class="w"> </span><span class="no">exception</span><span class="w"> </span><span class="no">then</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nf">we</span><span class="w"> </span><span class="no">will</span><span class="w"> </span><span class="no">simply</span><span class="w"> </span><span class="no">catch</span><span class="w"> </span><span class="no">it</span><span class="w"> </span><span class="no">and</span><span class="w"> </span><span class="no">return</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">         </span><span class="nf">L</span><span class="w"> </span><span class="no">R1</span><span class="p">,</span><span class="mi">0</span><span class="p">(</span><span class="no">R11</span><span class="p">)</span><span class="w"></span>
<span class="w">         </span><span class="nf">L</span><span class="w"> </span><span class="no">R15</span><span class="p">,</span><span class="mi">0</span><span class="p">(</span><span class="no">R1</span><span class="p">)</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nf">rc</span><span class="w"> </span><span class="err">=</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">         </span><span class="nf">MVC</span><span class="w"> </span><span class="mi">0</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="no">R3</span><span class="p">),</span><span class="mi">0</span><span class="p">(</span><span class="no">R2</span><span class="p">)</span><span class="w"></span>
<span class="w">         </span><span class="nf">L</span><span class="w"> </span><span class="no">R15</span><span class="p">,</span><span class="err">=</span><span class="no">F</span><span class="err">&#39;</span><span class="mi">0</span><span class="err">&#39;</span><span class="w"></span>
<span class="w">         </span><span class="nf">RETURN</span><span class="w"> </span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">12</span><span class="p">),</span><span class="no">RC</span><span class="err">=</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span><span class="w"></span>
<span class="nf">CATCHPCR</span><span class="w"> </span><span class="no">DS</span><span class="w"> </span><span class="mi">0</span><span class="no">H</span><span class="w"></span>
<span class="err">*</span><span class="w"> </span><span class="nf">rc</span><span class="w"> </span><span class="err">=</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">         </span><span class="nf">MVC</span><span class="w"> </span><span class="mi">0</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="no">R3</span><span class="p">),</span><span class="mi">0</span><span class="p">(</span><span class="no">R2</span><span class="p">)</span><span class="w"></span>
<span class="w">         </span><span class="nf">L</span><span class="w"> </span><span class="no">R15</span><span class="p">,</span><span class="err">=</span><span class="no">F</span><span class="err">&#39;</span><span class="mi">1</span><span class="err">&#39;</span><span class="w"></span>
<span class="w">         </span><span class="nf">RETURN</span><span class="w"> </span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">12</span><span class="p">),</span><span class="no">RC</span><span class="err">=</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span><span class="w"></span>
<span class="w">         </span><span class="nf">LTORG</span><span class="w"></span>
<span class="w">         </span><span class="nf">DROP</span><span class="w"> </span><span class="mi">12</span><span class="w"></span>
<span class="err">*</span><span class="w"></span>
<span class="nf">CATCHPSW</span><span class="w"> </span><span class="no">DS</span><span class="w"> </span><span class="mi">0</span><span class="no">D</span><span class="w"></span>
<span class="w">         </span><span class="nf">DC</span><span class="w"> </span><span class="no">X</span><span class="err">&#39;</span><span class="mi">020</span><span class="no">E0000</span><span class="err">&#39;</span><span class="w"></span>
<span class="w">         </span><span class="nf">DC</span><span class="w"> </span><span class="no">A</span><span class="p">(</span><span class="no">AMBIT</span><span class="err">+</span><span class="no">CATCHPCR</span><span class="p">)</span><span class="w"></span>
<span class="nf">TMPSAVE</span><span class="w">  </span><span class="no">DS</span><span class="w"> </span><span class="mi">1</span><span class="no">D</span><span class="w"></span>
</pre></div>
<h2><span id="See_also_.3D"></span><span class="mw-headline" id="See_also_=">See also =</span></h2>
<h3><span class="mw-headline" id="Source_code">Source code</span></h3>
<ul><li><a rel="nofollow" class="external text" href="https://github.com/udos-project/UDOS/blob/3f446f4117d78fddf181f1df2927a9437fb08035/kernel/s390/cpu.c#L51">Example implementation (C)</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211132429
Cache expiry: 86400
Reduced expiry: false
Complications: []
CPU time usage: 0.031 seconds
Real time usage: 0.423 seconds
Preprocessor visited node count: 26/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 21884/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4644-0!canonical and timestamp 20250211132429 and revision id 26856.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Memory_Map_(S390)&amp;oldid=26856">https://wiki.osdev.org/index.php?title=Memory_Map_(S390)&amp;oldid=26856</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:S390" title="Category:S390">S390</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Memory+Map+%28S390%29" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Memory_Map_(S390)#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Memory_Map_(S390)" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Memory_Map_(S390)&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Memory_Map_(S390)"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Memory_Map_(S390)&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Memory_Map_(S390)&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Memory_Map_(S390)" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Memory_Map_(S390)" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Memory_Map_(S390)&amp;oldid=26856" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Memory_Map_(S390)&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 17 January 2022, at 00:18.</li>
	<li id="footer-info-0">This page has been accessed 770 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Memory_Map_(S390)&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.031","walltime":"0.423","ppvisitednodes":{"value":26,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":21884,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211132429","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":519});});</script>
</body>
</html>