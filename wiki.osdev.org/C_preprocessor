<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>C preprocessor - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"384ce8f640cfad100b1de709","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"C_preprocessor","wgTitle":"C preprocessor","wgCurRevisionId":24116,"wgRevisionId":24116,"wgArticleId":2352,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","C","Tutorials"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"C_preprocessor","wgRelevantArticleId":2352,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-C_preprocessor rootpage-C_preprocessor skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">C preprocessor</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="C_preprocessor#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="C_preprocessor#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>The C preprocessor is the first step in the process of translating C/C++ source code into a binary. Generally, the process walked through is preprocessing, compiling and finally linking. In trivial environments, the preprocessor is used only for <b>#include</b>ing header files, and providing "header guards" to avoid multiple inclusions. However, the preprocessor can do much more, and can be very useful - not only for C/C++ sources, but for your Assembly sources as well. Use it with care, since it can also obfuscate your source code and introduce bugs that may be very difficult to debug.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="C_preprocessor#General"><span class="tocnumber">1</span> <span class="toctext">General</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="C_preprocessor#Includes"><span class="tocnumber">2</span> <span class="toctext">Includes</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="C_preprocessor#Preprocessor_Macros,_pt._1"><span class="tocnumber">3</span> <span class="toctext">Preprocessor Macros, pt. 1</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="C_preprocessor#Conditional_Compilation"><span class="tocnumber">4</span> <span class="toctext">Conditional Compilation</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="C_preprocessor#Header_Guards"><span class="tocnumber">5</span> <span class="toctext">Header Guards</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="C_preprocessor#Preprocessor_Macros,_pt._2"><span class="tocnumber">6</span> <span class="toctext">Preprocessor Macros, pt. 2</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="C_preprocessor##undef"><span class="tocnumber">7</span> <span class="toctext">#undef</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="C_preprocessor#Predefined_Tokens"><span class="tocnumber">8</span> <span class="toctext">Predefined Tokens</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="C_preprocessor#assert()"><span class="tocnumber">9</span> <span class="toctext">assert()</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="C_preprocessor#See_also"><span class="tocnumber">10</span> <span class="toctext">See also</span></a>
<ul>
<li class="toclevel-2 tocsection-11"><a href="C_preprocessor#Articles"><span class="tocnumber">10.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="C_preprocessor#External_Links"><span class="tocnumber">10.2</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="General">General</span></h2>
<p>The preprocessor handles <i>preprocessor directives</i>, which are lines that begin with <i> '#' </i>. Really old compiler versions demanded that the <i> '#' </i> be placed in column 1, modern versions of C and C++ allow preprocessor directives to begin in any column, as long as the first non-whitespace character of the line is <i> '#' </i>.
</p><p>Lines with preprocessor directives can be "continued" by placing a backslash ('\') as the last character of the line.
</p>
<h2><span class="mw-headline" id="Includes">Includes</span></h2>
<p>The most familiar use of the preprocessor is to include header files (containing function declarations, definition of constants etc.):
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp"></span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&quot;myheader.h&quot;</span><span class="cp"></span>
</pre></div>
<p>The effect is that the contents of the given header file are pasted into the source file. The <i>technical</i> difference between &lt;&gt; and "" is that the compiler is allowed to satisfy &lt;&gt; includes internally, i.e. without actually accessing any on-disk files of that name. None of the prominent compilers do this, to the knowledge of the author, but it has become common practice to use &lt;&gt; for system headers and "" for your own header files.
</p><p>Header files are searched for in a list of preconfigured directories (the <i>include path</i>). This list of include directories can be prepended to by the user (e.g. by using the "-I &lt;directory&gt;" option of <a href="GCC" title="GCC">GCC</a>).
</p><p>The <i>#include</i> statement can be used in other contexts, too: As a replacement for assembler-specific include directives, for example.
</p><p>Another possible use is "templating" a piece of code that keeps recurring in more than one source file but could not be put into a seperate function. This way, you could still reduce redundancy by keeping the shared code in a single file and merely <i>#include</i>ing it where needed. This, however, is a pretty ugly construct and should be avoided if possible.
</p>
<h2><span id="Preprocessor_Macros.2C_pt._1"></span><span class="mw-headline" id="Preprocessor_Macros,_pt._1">Preprocessor Macros, pt. 1</span></h2>
<p>The preprocessor can <i>define</i> tokens. It is good custom to write these tokens in ALL CAPS. (See pt. 2 as for why.)
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#define MYTOKEN</span>
</pre></div>
<p>Most compilers also allow the definition of preprocessor tokens on the command line, e.g. the "-D MYTOKEN" option for <a href="GCC" title="GCC">GCC</a>.
</p>
<h2><span class="mw-headline" id="Conditional_Compilation">Conditional Compilation</span></h2>
<p>The preprocessor can <i>conditionally</i> select which parts of source code to compile, depending on whether a given token is defined or not (see above).
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#define MYTOKEN</span>

<span class="cp">#ifdef MYTOKEN</span>
<span class="cm">/* This source will be compiled */</span><span class="w"></span>
<span class="cp">#endif</span>

<span class="cp">#ifndef MYTOKEN</span>
<span class="cm">/* This source will be removed */</span><span class="w"></span>
<span class="cp">#else</span>
<span class="cm">/* This source will be compiled */</span><span class="w"></span>
<span class="cp">#endif</span>
</pre></div>
<p>Note that such <i>#if</i> / <i>#ifdef</i> / <i>#ifndef</i> - <i>#endif</i> sections can be nested.
</p>
<h2><span class="mw-headline" id="Header_Guards">Header Guards</span></h2>
<p>Non-trivial projects face the problem that a header file includes other header files in turn. Let's say both <i>abc.h</i> and <i>def.h</i> both include <i>xyz.h</i>. Should you <i>#include</i> both <i>abc.h</i> and <i>def.h</i> in your source, you will likely end up with warnings and errors about redefinitions etc.
</p><p>The solution are <i>header guards</i>, a combination of conditional compilation and token definition:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* abc.h */</span><span class="w"></span>

<span class="cp">#ifndef ABC_H_</span>
<span class="cp">#define ABC_H_</span>

<span class="cm">/* declaractions here */</span><span class="w"></span>

<span class="cp">#endif</span>
</pre></div>
<h2><span id="Preprocessor_Macros.2C_pt._2"></span><span class="mw-headline" id="Preprocessor_Macros,_pt._2">Preprocessor Macros, pt. 2</span></h2>
<p>Preprocessor tokens can also be assigned a <i>value</i>.
</p><p>The preprocessor will replace any occurrence of a defined token in the source code with the value the token has been defined to. <i>This is also true for tokens that have been defined to nothing</i> (as in pt. 1 above). This is the reason why preprocessor tokens are customarily written in ALL CAPS - to avoid accidential clashes with identifiers used in the source code itself.
</p><p>The <i>#if</i> statement can be used to base conditional compilation on token values. Note that the preprocessor can only work with compile-time constants. Compiler-evaluated code like `sizeof()` cannot be used in preprocessor directives. On the upside, the preprocessor can natively handle non-numerical values.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#define MYTOKEN foo</span>
<span class="cp">#define OTHERTOKEN 42</span>

<span class="cp">#if MYTOKEN == foo</span>
<span class="cm">/* This code will be compiled */</span><span class="w"></span>
<span class="cp">#elif MYTOKEN == bar</span>
<span class="cm">/* This code won&#39;t */</span><span class="w"></span>
<span class="cp">#endif</span>

<span class="cp">#if OTHERTOKEN &gt; 40</span>
<span class="cm">/* Will be compiled. */</span><span class="w"></span>
<span class="cp">#endif</span>

<span class="cp">#if OTHERTOKEN&#160;!= 42</span>
<span class="cm">/* Won&#39;t be compiled. */</span><span class="w"></span>
<span class="cp">#endif</span>
</pre></div>
<p>The <i>#if</i> directive also allows for a simple construct to disable a region of code without having to worry about nested <i>/* ... */</i> style comments:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#if 0</span><span class="c"></span>
<span class="c">/* disabled code */</span>
<span class="cp">#endif</span>
</pre></div>
<p>Such code can easily be re-enabled temporarily with no more effort than replacing the "0" with a "1". Source comments as to why you disabled code this way are in order.
</p>
<h2><span id=".23undef"></span><span class="mw-headline" id="#undef">#undef</span></h2>
<p>Using the <i>#undef</i> directive, a preprocessor token can be undefined. This is useful for trickier setups where you might want to redefine a token to a different value: Redefinitions generate a warning message, undefinitions of undefined tokens don't.
</p><p>This should not be constructed as an advice to <i>always</i> use <i>#undef</i> before a <i>#define</i>. Those warnings might actually be pointing to a real problem in your logic. Use <i>#undef</i> with care.
</p>
<h2><span class="mw-headline" id="Predefined_Tokens">Predefined Tokens</span></h2>
<p>The preprocessor provides a couple of tokens which are automatically defined to the appropriate values - something very useful when constructing error messages or tracing messages. Note that some obsolete compilers might balk at <i>__func__</i> and not all tokens may be supported or implemented by all compilers.
</p>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1&#125;&#125;&#125;">
<tbody><tr>
<th>Preprocessor Token
</th>
<th>Explanation
</th></tr>
<tr>
<td>__FILE__</td>
<td>Holds the name of the current source file being compiled (as a string).
</td></tr>
<tr>
<td>__LINE__</td>
<td>Holds the current line being compiled (as an integer).
</td></tr>
<tr>
<td>__DATE__</td>
<td>Holds the date when the compilation process began (a string with the format "Mmm dd yyyy").
</td></tr>
<tr>
<td>__TIME__</td>
<td>Same as the previous, but the time (a string with the format "hh:mm:ss").
</td></tr>
<tr>
<td>__cplusplus</td>
<td>When defined, the value indicates that C++ compilation is active. When the compiler is (fully) compliant to the standards, the value should be &gt;= 199711L.
</td></tr>
<tr>
<td>__STDC__</td>
<td>When defined, the value indicates that the compiler is (fully) compliant with the ANSI C standard.
</td></tr>
<tr>
<td>__func__</td>
<td>Holds the name of the function it is used within (as a string).
</td></tr></tbody></table>
<p>Different compilers may define extra preprocessor tokens. Visual C++ for example may define _MSC_VER __cplusplus_cli. See the link section below for more information.
</p>
<h2><span id="assert.28.29"></span><span class="mw-headline" id="assert()">assert()</span></h2>
<p>Assertions are used to catch situations which should never happen, even under error circumstances. If the condition given in the parantheses does not evaluate to "true", a diagnosis is printed which contains source file name, line number, and (since C99) name of the current function; the program then calls abort().
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;assert.h&gt;</span><span class="cp"></span>

<span class="n">assert</span><span class="p">(</span><span class="w"> </span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">free_memory_block</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">8</span><span class="w"> </span><span class="p">);</span><span class="w"></span>
<span class="n">assert</span><span class="p">(</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="p">);</span><span class="w"></span>
<span class="n">assert</span><span class="p">(</span><span class="w"> </span><span class="n">gdt_ptr</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="n">null</span><span class="w"> </span><span class="p">);</span><span class="w"></span>
</pre></div>
<p>For production code, assertions may be turned off by defining NDEBUG:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>gcc -DNDEBUG ...
</pre></div>
<p>Note that &lt;assert.h&gt; does not have (or need) a header guard, i.e. can be included multiple times in a source file, and that whether NDEBUG is defined or not is evaluated anew <i>at every inclusion of &lt;assert.h&gt;</i>. You can thus enable / disable assertions at a very fine-grained level if necessary:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;assert.h&gt;</span><span class="cp"></span>

<span class="w">    </span><span class="cm">/* assert() at this point only fails-on-false if NDEBUG is not defined */</span><span class="w"></span>
<span class="w">    </span><span class="n">assert</span><span class="p">(</span><span class="w"> </span><span class="n">isChecksumCorrect</span><span class="p">()</span><span class="w"> </span><span class="p">);</span><span class="w"></span>

<span class="cp">#ifdef NDEBUG</span>
<span class="cm">/* Hard-enabling of assert() even if NDEBUG is defined */</span><span class="w"></span>
<span class="cp">#define NDEBUG_WAS_SET</span>
<span class="cp">#undef NDEBUG</span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;assert.h&gt;</span><span class="cp"></span>
<span class="cp">#endif</span>

<span class="w">    </span><span class="cm">/* assert() in this block of code should fail-on-false even in production */</span><span class="w"></span>
<span class="w">    </span><span class="n">assert</span><span class="p">(</span><span class="w"> </span><span class="n">isChecksumCorrect</span><span class="p">()</span><span class="w"> </span><span class="p">);</span><span class="w"></span>

<span class="cp">#ifdef NDEBUG_WAS_SET</span>
<span class="cm">/* Restoring NDEBUG if it was enabled originally */</span><span class="w"></span>
<span class="cp">#define NDEBUG</span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;assert.h&gt;</span><span class="cp"></span>
<span class="cp">#endif</span>
</pre></div>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="C" title="C">C</a></li>
<li><a href="Why_function_implementations_shouldn't_be_put_In_header_files" title="Why function implementations shouldn&#39;t be put In header files">Why function implementations shouldn't be put In header files</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="http://gcc.gnu.org/onlinedocs/cpp/Macro-Pitfalls.html#Macro-Pitfalls">Macro Pitfalls</a> - A number of counter-intuitive consequences of macros and macro expanding design.</li>
<li><a rel="nofollow" class="external text" href="http://gcc.gnu.org/onlinedocs/cpp/">The GNU C preprocessor manual</a></li>
<li><a rel="nofollow" class="external text" href="http://msdn.microsoft.com/en-us/library/b0084kay(VS.80).aspx">VC++ preprocessor information</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211125004
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.050 seconds
Real time usage: 1.208 seconds
Preprocessor visited node count: 90/1000000
Post‐expand include size: 162/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 3/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 5866/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.876      1 Template:Wikitable
100.00%    0.876      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2352-0!canonical and timestamp 20250211125003 and revision id 24116.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=C_preprocessor&amp;oldid=24116">https://wiki.osdev.org/index.php?title=C_preprocessor&amp;oldid=24116</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:C" title="Category:C">C</a></li><li><a href="./Category:Tutorials" title="Category:Tutorials">Tutorials</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=C+preprocessor" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="C_preprocessor#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="C_preprocessor" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:C_preprocessor" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="C_preprocessor"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=C_preprocessor&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=C_preprocessor&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/C_preprocessor" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/C_preprocessor" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=C_preprocessor&amp;oldid=24116" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=C_preprocessor&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 25 November 2019, at 20:31.</li>
	<li id="footer-info-0">This page has been accessed 3,666 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=C_preprocessor&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.050","walltime":"1.208","ppvisitednodes":{"value":90,"limit":1000000},"postexpandincludesize":{"value":162,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":3,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":5866,"limit":5000000},"timingprofile":["100.00%    0.876      1 Template:Wikitable","100.00%    0.876      1 -total"]},"cachereport":{"timestamp":"20250211125004","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":1309});});</script>
</body>
</html>