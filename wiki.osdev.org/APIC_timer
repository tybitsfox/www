<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>APIC Timer - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"88c44d2ecdf6fa88642bc115","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"APIC_Timer","wgTitle":"APIC Timer","wgCurRevisionId":28146,"wgRevisionId":28146,"wgArticleId":3127,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","Interrupts","Timers"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"APIC_Timer","wgRelevantArticleId":3127,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgRedirectedFrom":
"APIC_timer","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgInternalRedirectTargetUrl":"/APIC_Timer","wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["mediawiki.action.view.redirect","site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
<link rel="canonical" href="APIC_Timer"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-APIC_Timer rootpage-APIC_Timer skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">APIC Timer</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="mw-redirectedfrom">(Redirected from <a href="https://wiki.osdev.org/index.php?title=APIC_timer&amp;redirect=no" class="mw-redirect" title="APIC timer">APIC timer</a>)</span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="APIC_timer#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="APIC_timer#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>The great benefit of the Local <a href="APIC" title="APIC">APIC</a> timer is that it is hardwired to each CPU core, unlike the <a href="PIT" class="mw-redirect" title="PIT">Programmable Interval Timer</a> which is a separate circuit. Because of this, there is no need for any resource management, which makes things easier. The downside is that it's oscillating at (one of) the CPU's frequencies, which varies from machine to machine, while the PIT uses a standard frequency (1,193,182 Hz). To make use of it, you have to know how many interrupts/sec it's capable of.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="APIC_timer#APIC_Timer_Modes"><span class="tocnumber">1</span> <span class="toctext">APIC Timer Modes</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="APIC_timer#Periodic_Mode"><span class="tocnumber">1.1</span> <span class="toctext">Periodic Mode</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="APIC_timer#One-Shot_Mode"><span class="tocnumber">1.2</span> <span class="toctext">One-Shot Mode</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="APIC_timer#TSC-Deadline_mode"><span class="tocnumber">1.3</span> <span class="toctext">TSC-Deadline mode</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="APIC_timer#Enabling_APIC_Timer"><span class="tocnumber">2</span> <span class="toctext">Enabling APIC Timer</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="APIC_timer#Initializing"><span class="tocnumber">3</span> <span class="toctext">Initializing</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="APIC_timer#Prerequisites"><span class="tocnumber">3.1</span> <span class="toctext">Prerequisites</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="APIC_timer#Example_code_in_ASM"><span class="tocnumber">3.2</span> <span class="toctext">Example code in ASM</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="APIC_timer#Example_code_in_C"><span class="tocnumber">3.3</span> <span class="toctext">Example code in C</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="APIC_timer#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a>
<ul>
<li class="toclevel-2 tocsection-11"><a href="APIC_timer#Articles"><span class="tocnumber">4.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="APIC_timer#Threads"><span class="tocnumber">4.2</span> <span class="toctext">Threads</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="APIC_timer#External_Links"><span class="tocnumber">4.3</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="APIC_Timer_Modes">APIC Timer Modes</span></h2>
<p>The timer has 2 or 3 modes. The first 2 modes (periodic and one-shot) are supported by all local APICs. The third mode (TSC-Deadline mode) is an extension that is only supported on recent CPUs.
</p>
<h3><span class="mw-headline" id="Periodic_Mode">Periodic Mode</span></h3>
<p>For periodic mode, software sets a "initial count" and the local APIC uses it for a "current count". The local APIC decrements the current count until it reaches zero, then generates a timer IRQ and resets the current count to the initial count and begins decrementing the current count again. In this way the local APIC generates IRQs at a fixed rate depending on the initial count. The current count is decremented at a rate that depends on the CPU's external frequency ("bus frequency") divided by the value in the local APIC's "Divide Configuration Register".
</p><p>For example, for a 2.4 GHz CPU with an external/bus frequency of 800 MHz, if the Divide Configuration Register is set to "divide by 4" and the initial count is set to 123456; then the local APIC timer would decrement the count at a rate of 200 MHz and generate a timer IRQ every 617.28 us, giving a rate of IRQs of 1620.01 Hz.
</p>
<h3><span class="mw-headline" id="One-Shot_Mode">One-Shot Mode</span></h3>
<p>For one-shot mode, the local APIC decrements the current count (and generates a timer IRQ when the count reaches zero) in the same way as in periodic mode; however it doesn't reset the current count to the initial count when the current count reaches zero. Instead, software has to set a new count each time if it wants more timer IRQs.
</p><p>The advantage of this mode is that software can have precise control over when timer IRQs occur. For example, during task switches an OS could set the count to a value that depends on the new task's priority (so that some tasks run for a small amount of time and other tasks run for a larger amount of time), and there wouldn't be any unwanted IRQs. Some OSs use this approach to implement a generic high precision timer service, where the local APIC count is set to a value that depends on which event will happen soonest. For example, if the currently running task switch should be pre-empted in 1234 nanoseconds, a sleeping task needs to wake up in 333 nanoseconds and alarm signal has to be sent in 44444 nanoseconds, then the timer's count would be set to 333 nanoseconds (the earliest delay needed) and when the the timer IRQ occurs the OS knows that there's 901 nanoseconds remaining before the current task should be pre-empted and 441111 nanoseconds until the alarm signal needs to be sent (and would set the count to 901 nanoseconds for the next timer IRQ).
</p><p>The disadvantages are that it's harder to track real-time with one-shot mode and special care needs to be taken to avoid race conditions; especially if a new count is set before the old count expires.
</p>
<h3><span class="mw-headline" id="TSC-Deadline_mode">TSC-Deadline mode</span></h3>
<p>TSC-Deadline mode is very different to the other 2 modes. Instead of using the CPU's external/bus frequency to decrement a count, software sets a "deadline" and the local APIC generates a timer IRQ when the value of the CPU's time stamp counter is greater than or equal to the deadline.
</p><p>Despite these differences, software would/could use it in the same way that one-shot mode would be used. The advantages (compared to one-shot mode) are that you get higher precision (because the CPU's time stamp counter runs at the CPU's (nominal) internal frequency rather than the CPU's external/bus frequency), and it's easier to avoid/handle race conditions.
</p>
<h2><span class="mw-headline" id="Enabling_APIC_Timer">Enabling APIC Timer</span></h2>
<p>Before enabling the local APIC timer, you should setup the rest of the local APIC. This includes:
</p>
<ul><li>Determine the local APIC's physical address (via. ACPI tables or MultiProcessor Specification tables)</li>
<li>Specify a spurious interrupt and software enable the APIC</li>
<li>Make sure the TPR (Task Priority Register) is set (so it won't block/postpone lower priority IRQs)</li></ul>
<p>Once that's done:
</p>
<ul><li>Set the local APIC timer's divide configuration register</li>
<li>Configure the local APIC timer's interrupt vector and unmask the timer's IRQ</li>
<li>Set the local APIC timer's initial count</li></ul>
<p>Note: It's recommended to follow the order given above (especially setting the local APIC timer's initial count last). Doing things in a different order (e.g. setting the initial count, then enabling the timer) can lead to problems on some (real or virtual) machines (e.g. everything seems right and counter is decreasing, but IRQ is never sent).
</p>
<h2><span class="mw-headline" id="Initializing">Initializing</span></h2>
<p><i>Please note that this is the recommended way of determining the frequency of the APIC timer.</i>
</p><p><b>NOTE:</b> According to Intel's documentation for IA-32 (x86) and Intel 64 (x86_64), APIC timer's frequency is equal to the bus' frequency <b>OR</b> the core crystal's frequency divided by the chosen frequency divider. The bus' and the core crystal's frequency can be found in the <a href="CPUID" title="CPUID">CPUID</a> functions <a rel="nofollow" class="external text" href="https://sandpile.org/x86/cpuid.htm#level_0000_0015h">0x15</a> and <a rel="nofollow" class="external text" href="https://sandpile.org/x86/cpuid.htm#level_0000_0016h">0x16</a>, respectively. Through CPUID.0x15 can also be determined the TSC frequency. The frequency of the APIC timer depends on whether the system is using local APIC or <i>discrete</i> APIC (<a rel="nofollow" class="external text" href="https://en.wikipedia.org/wiki/Advanced_Programmable_Interrupt_Controller">82489DX</a>). When the local APIC is built in core's crystal, the APIC timer is using core's frequency. Otherwise, it is using the bus frequency.
</p><p><br />
There are several ways to do this, but all of them use a different, CPU bus frequency independent clock source to do that. Examples: <a href="RTC" title="RTC">Real Time Clock</a>, <a href="TSC" title="TSC">TimeStamp Counter</a>, PIT or even polling <a href="CMOS#Getting_Current_Date_and_Time_from_RTC" title="CMOS">CMOS registers</a>. In this tutorial we will use the good old PIT, as it's the easiest. Steps that need to be done:
</p>
<ul><li>Reset APIC to a well known state</li>
<li>Enable APIC timer</li>
<li>Reset APIC timer counter</li>
<li>Wait a specific amount of time measured by a different clock</li>
<li>Get number of ticks from APIC timer counter</li>
<li>Adjust it to a second</li>
<li>Divide it by the quantum of your choice (results X)</li>
<li>Make the APIC timer fire an interrupt at every X ticks</li></ul>
<p>The APIC timer can be set to make a tick (decrease counter) at a given frequency, which is called "divide value". This means you have to multiply APIC timer counter ticks by this divide value to get the true CPU bus frequency. You could use a value of 1 (ticks on every bus cycle) up to 128 (ticks on every 128th cycle). See Intel manual vol3A Chapter 9.5.4 for details. Note that according to my tests, Bochs seems not to handle divide value of 1 properly, so I will use 16.
</p>
<h3><span class="mw-headline" id="Prerequisites">Prerequisites</span></h3>
<p>Before we start, let's define some constant and functions.
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nf">apic</span><span class="w">		</span><span class="err">=</span><span class="w"> </span><span class="no">the</span><span class="w"> </span><span class="no">linear</span><span class="w"> </span><span class="no">address</span><span class="w"> </span><span class="no">where</span><span class="w"> </span><span class="no">you</span><span class="w"> </span><span class="no">have</span><span class="w"> </span><span class="no">mapped</span><span class="w"> </span><span class="no">the</span><span class="w"> </span><span class="no">APIC</span><span class="w"> </span><span class="no">registers</span><span class="w"></span>

<span class="nf">APIC_APICID</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">20</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_APICVER</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">30</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_TASKPRIOR</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">80</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_EOI</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">0</span><span class="no">B0h</span><span class="w"></span>
<span class="nf">APIC_LDR</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">0</span><span class="no">D0h</span><span class="w"></span>
<span class="nf">APIC_DFR</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">0</span><span class="no">E0h</span><span class="w"></span>
<span class="nf">APIC_SPURIOUS</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">0</span><span class="no">F0h</span><span class="w"></span>
<span class="nf">APIC_ESR</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">280</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_ICRL</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">300</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_ICRH</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">310</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_LVT_TMR</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">320</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_LVT_PERF</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">340</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_LVT_LINT0</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">350</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_LVT_LINT1</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">360</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_LVT_ERR</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">370</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_TMRINITCNT</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">380</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_TMRCURRCNT</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">390</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_TMRDIV</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">3</span><span class="no">E0h</span><span class="w"></span>
<span class="nf">APIC_LAST</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">38</span><span class="no">Fh</span><span class="w"></span>
<span class="nf">APIC_DISABLE</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">10000</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_SW_ENABLE</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">100</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_CPUFOCUS</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">200</span><span class="no">h</span><span class="w"></span>
<span class="nf">APIC_NMI</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="p">(</span><span class="mi">4</span><span class="err">&lt;&lt;</span><span class="mi">8</span><span class="p">)</span><span class="w"></span>
<span class="nf">TMR_PERIODIC</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="mi">20000</span><span class="no">h</span><span class="w"></span>
<span class="nf">TMR_BASEDIV</span><span class="w">	</span><span class="err">=</span><span class="w"> </span><span class="p">(</span><span class="mi">1</span><span class="err">&lt;&lt;</span><span class="mi">20</span><span class="p">)</span><span class="w"></span>

<span class="w">		</span><span class="c1">;Interrupt Service Routines</span>
<span class="nl">isr_dummytmr:</span><span class="w">	</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_EOI</span><span class="p">],</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">		</span><span class="nf">iret</span><span class="w"></span>
<span class="nl">isr_spurious:</span><span class="w">	</span><span class="nf">iret</span><span class="w"></span>
<span class="w">		</span><span class="c1">;function to set a specific interrupt gate in IDT</span>
<span class="w">		</span><span class="c1">;al=interrupt</span>
<span class="w">		</span><span class="c1">;ebx=isr entry point</span>
<span class="nl">writegate:</span><span class="w">	</span><span class="na">...</span><span class="w"></span>
<span class="w">		</span><span class="nf">ret</span><span class="w"></span>
</pre></div>
<p>I will also assume that you have a working <a href="IDT" class="mw-redirect" title="IDT">IDT</a>, and you have a function to write a gate for a specific interrupt: writegate(intnumber,israddress).
Furthermore, to make things simple, I'll assume that you did not change the default interrupt mapping found in almost every tutorial:
</p>
<ul><li>interrupt 0-31: exceptions</li>
<li>interrupt 32: timer, IRQ0</li>
<li>interrupt 39: spurious irq, IRQ7</li></ul>
<p>If you've already changed this, modify accordingly.
</p><p><br />
</p>
<h3><span class="mw-headline" id="Example_code_in_ASM">Example code in ASM</span></h3>
<p>Here's a possible way to initialize APIC timer in fasm syntax assembly:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="w">		</span><span class="c1">;you should read MSR, get APIC base and map to &quot;apic&quot;</span>
<span class="w">		</span><span class="c1">;you should have used lidt properly</span>

<span class="w">		</span><span class="c1">;set up isrs</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="no">isr_dummytmr</span><span class="w"></span>
<span class="w">		</span><span class="nf">call</span><span class="w">			</span><span class="no">writegate</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">39</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="no">isr_spurious</span><span class="w"></span>
<span class="w">		</span><span class="nf">call</span><span class="w">			</span><span class="no">writegate</span><span class="w"></span>

<span class="w">		</span><span class="c1">;initialize LAPIC to a well known state</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_DFR</span><span class="p">],</span><span class="w"> </span><span class="mi">0</span><span class="no">FFFFFFFFh</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LDR</span><span class="p">]</span><span class="w"></span>
<span class="w">		</span><span class="nf">and</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">00</span><span class="no">FFFFFFh</span><span class="w"></span>
<span class="w">		</span><span class="nf">or</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LDR</span><span class="p">],</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LVT_TMR</span><span class="p">],</span><span class="w"> </span><span class="no">APIC_DISABLE</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LVT_PERF</span><span class="p">],</span><span class="w"> </span><span class="no">APIC_NMI</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LVT_LINT0</span><span class="p">],</span><span class="w"> </span><span class="no">APIC_DISABLE</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LVT_LINT1</span><span class="p">],</span><span class="w"> </span><span class="no">APIC_DISABLE</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_TASKPRIOR</span><span class="p">],</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">		</span><span class="c1">;okay, now we can enable APIC</span>
<span class="w">		</span><span class="c1">;global enable</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">ecx</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="no">bh</span><span class="w"></span>
<span class="w">		</span><span class="nf">rdmsr</span><span class="w"></span>
<span class="w">		</span><span class="nf">bts</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">11</span><span class="w"></span>
<span class="w">		</span><span class="nf">wrmsr</span><span class="w"></span>
<span class="w">		</span><span class="c1">;software enable, map spurious interrupt to dummy isr</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_SPURIOUS</span><span class="p">],</span><span class="w"> </span><span class="mi">39</span><span class="err">+</span><span class="no">APIC_SW_ENABLE</span><span class="w"></span>
<span class="w">		</span><span class="c1">;map APIC timer to an interrupt, and by that enable it in one-shot mode</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LVT_TMR</span><span class="p">],</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="w">		</span><span class="c1">;set up divide value to 16</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_TMRDIV</span><span class="p">],</span><span class="w"> </span><span class="mi">03</span><span class="no">h</span><span class="w"></span>

<span class="w">		</span><span class="c1">;ebx=0xFFFFFFFF;</span>
<span class="w">		</span><span class="nf">xor</span><span class="w">			</span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="no">ebx</span><span class="w"></span>
<span class="w">		</span><span class="nf">dec</span><span class="w">			</span><span class="no">ebx</span><span class="w"></span>

<span class="w">		</span><span class="c1">;initialize PIT Ch 2 in one-shot mode</span>
<span class="w">		</span><span class="c1">;waiting 1 sec could slow down boot time considerably,</span>
<span class="w">		</span><span class="c1">;so we&#39;ll wait 1/100 sec, and multiply the counted ticks</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dx</span><span class="p">,</span><span class="w"> </span><span class="mi">61</span><span class="no">h</span><span class="w"></span>
<span class="w">		</span><span class="nf">in</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="no">dx</span><span class="w"></span>
<span class="w">		</span><span class="nf">and</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="no">fdh</span><span class="w"></span>
<span class="w">		</span><span class="nf">or</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">		</span><span class="nf">out</span><span class="w">			</span><span class="no">dx</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">10110010</span><span class="no">b</span><span class="w"></span>
<span class="w">		</span><span class="nf">out</span><span class="w">			</span><span class="mi">43</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w"></span>
<span class="w">		</span><span class="c1">;1193180/100 Hz = 11931 = 2e9bh</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">9</span><span class="no">bh</span><span class="w">		</span><span class="c1">;LSB</span>
<span class="w">		</span><span class="nf">out</span><span class="w">			</span><span class="mi">42</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w"></span>
<span class="w">		</span><span class="nf">in</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">60</span><span class="no">h</span><span class="w">		</span><span class="c1">;short delay</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="no">eh</span><span class="w">		</span><span class="c1">;MSB</span>
<span class="w">		</span><span class="nf">out</span><span class="w">			</span><span class="mi">42</span><span class="no">h</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w"></span>
<span class="w">		</span><span class="c1">;reset PIT one-shot counter (start counting)</span>
<span class="w">		</span><span class="nf">in</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="no">dx</span><span class="w"></span>
<span class="w">		</span><span class="nf">and</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="no">feh</span><span class="w"></span>
<span class="w">		</span><span class="nf">out</span><span class="w">			</span><span class="no">dx</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w">		</span><span class="c1">;gate low</span>
<span class="w">		</span><span class="nf">or</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">		</span><span class="nf">out</span><span class="w">			</span><span class="no">dx</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w">		</span><span class="c1">;gate high</span>
<span class="w">		</span><span class="c1">;reset APIC timer (set counter to -1)</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_TMRINITCNT</span><span class="p">],</span><span class="w"> </span><span class="no">ebx</span><span class="w"></span>
<span class="w">		</span><span class="c1">;now wait until PIT counter reaches zero</span>
<span class="err">@@:</span><span class="w">		</span><span class="nf">in</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="no">dx</span><span class="w"></span>
<span class="w">		</span><span class="nf">and</span><span class="w">			</span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">20</span><span class="no">h</span><span class="w"></span>
<span class="w">		</span><span class="nf">jz</span><span class="w">			</span><span class="err">@</span><span class="no">b</span><span class="w"></span>
<span class="w">		</span><span class="c1">;stop APIC timer</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LVT_TMR</span><span class="p">],</span><span class="w"> </span><span class="no">APIC_DISABLE</span><span class="w"></span>
<span class="w">		</span><span class="c1">;now do the math...</span>
<span class="w">		</span><span class="nf">xor</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">		</span><span class="nf">xor</span><span class="w">			</span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="no">ebx</span><span class="w"></span>
<span class="w">		</span><span class="nf">dec</span><span class="w">			</span><span class="no">eax</span><span class="w"></span>
<span class="w">		</span><span class="c1">;get current counter value</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_TMRCURRCNT</span><span class="p">]</span><span class="w"></span>
<span class="w">		</span><span class="c1">;it is counted down from -1, make it positive</span>
<span class="w">		</span><span class="nf">sub</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">ebx</span><span class="w"></span>
<span class="w">		</span><span class="nf">inc</span><span class="w">			</span><span class="no">eax</span><span class="w"></span>
<span class="w">		</span><span class="c1">;we used divide value different than 1, so now we have to multiply the result by 16</span>
<span class="w">		</span><span class="nf">shl</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="w">		</span><span class="c1">;*16</span>
<span class="w">		</span><span class="nf">xor</span><span class="w">			</span><span class="no">edx</span><span class="p">,</span><span class="w"> </span><span class="no">edx</span><span class="w"></span>
<span class="w">		</span><span class="c1">;moreover, PIT did not wait a whole sec, only a fraction, so multiply by that too</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="mi">100</span><span class="w">	</span><span class="c1">;*PITHz</span>
<span class="w">		</span><span class="nf">mul</span><span class="w">			</span><span class="no">ebx</span><span class="w"></span>
<span class="w">	</span><span class="c1">;-----edx:eax now holds the CPU bus frequency-----</span>
<span class="w">		</span><span class="c1">;now calculate timer counter value of your choice</span>
<span class="w">		</span><span class="c1">;this means that tasks will be preempted 1000 times in a second. 100 is popular too.</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="mi">1000</span><span class="w"></span>
<span class="w">		</span><span class="nf">xor</span><span class="w">			</span><span class="no">edx</span><span class="p">,</span><span class="w"> </span><span class="no">edx</span><span class="w"></span>
<span class="w">		</span><span class="nf">div</span><span class="w">			</span><span class="no">ebx</span><span class="w"></span>
<span class="w">		</span><span class="c1">;again, we did not use divide value of 1</span>
<span class="w">		</span><span class="nf">shr</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="w">		</span><span class="c1">;/16</span>
<span class="w">		</span><span class="c1">;sanity check, min 16</span>
<span class="w">		</span><span class="nf">cmp</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">010</span><span class="no">h</span><span class="w"></span>
<span class="w">		</span><span class="nf">jae</span><span class="w">			</span><span class="err">@</span><span class="no">f</span><span class="w"></span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">010</span><span class="no">h</span><span class="w"></span>
<span class="w">		</span><span class="c1">;now eax holds appropriate number of ticks, use it as APIC timer counter initializer</span>
<span class="err">@@:</span><span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_TMRINITCNT</span><span class="p">],</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">		</span><span class="c1">;finally re-enable timer in periodic mode</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_LVT_TMR</span><span class="p">],</span><span class="w"> </span><span class="mi">32</span><span class="w"> </span><span class="no">or</span><span class="w"> </span><span class="no">TMR_PERIODIC</span><span class="w"></span>
<span class="w">		</span><span class="c1">;setting divide value register again not needed by the manuals</span>
<span class="w">		</span><span class="c1">;although I have found buggy hardware that required it</span>
<span class="w">		</span><span class="nf">mov</span><span class="w">			</span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">apic</span><span class="err">+</span><span class="no">APIC_TMRDIV</span><span class="p">],</span><span class="w"> </span><span class="mi">03</span><span class="no">h</span><span class="w"></span>
</pre></div>
<h3><span class="mw-headline" id="Example_code_in_C">Example code in C</span></h3>
<p>This code is an example of how to initialize the APIC timer so that it ticks every 10 milliseconds. This is done by letting the APIC timer run, waiting for 10ms using the PIT and then getting the number of ticks that were done from the APIC timer. It assumes that you have functions to "write"/"read" the APIC's registers and "pit_prepare_sleep"/"pit_perform_sleep" to perform an as accurate as possible measurement of the timer's frequency.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="kt">void</span><span class="w"> </span><span class="nf">apic_start_timer</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="c1">// Tell APIC timer to use divider 16</span>
<span class="w">        </span><span class="n">write</span><span class="p">(</span><span class="n">APIC_REGISTER_TIMER_DIV</span><span class="p">,</span><span class="w"> </span><span class="mh">0x3</span><span class="p">);</span><span class="w"></span>
<span class="w"> </span>
<span class="w">        </span><span class="c1">// Prepare the PIT to sleep for 10ms (10000µs)</span>
<span class="w">        </span><span class="n">pit_prepare_sleep</span><span class="p">(</span><span class="mi">10000</span><span class="p">);</span><span class="w"></span>
<span class="w"> </span>
<span class="w">        </span><span class="c1">// Set APIC init counter to -1</span>
<span class="w">        </span><span class="n">write</span><span class="p">(</span><span class="n">APIC_REGISTER_TIMER_INITCNT</span><span class="p">,</span><span class="w"> </span><span class="mh">0xFFFFFFFF</span><span class="p">);</span><span class="w"></span>
<span class="w"> </span>
<span class="w">        </span><span class="c1">// Perform PIT-supported sleep</span>
<span class="w">        </span><span class="n">pit_perform_sleep</span><span class="p">();</span><span class="w"></span>
<span class="w"> </span>
<span class="w">        </span><span class="c1">// Stop the APIC timer</span>
<span class="w">        </span><span class="n">write</span><span class="p">(</span><span class="n">APIC_REGISTER_LVT_TIMER</span><span class="p">,</span><span class="w"> </span><span class="n">APIC_LVT_INT_MASKED</span><span class="p">);</span><span class="w"></span>
<span class="w"> </span>
<span class="w">        </span><span class="c1">// Now we know how often the APIC timer has ticked in 10ms</span>
<span class="w">        </span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">ticksIn10ms</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mh">0xFFFFFFFF</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">read</span><span class="p">(</span><span class="n">APIC_REGISTER_TIMER_CURRCNT</span><span class="p">);</span><span class="w"></span>
<span class="w"> </span>
<span class="w">        </span><span class="c1">// Start timer as periodic on IRQ 0, divider 16, with the number of ticks we counted</span>
<span class="w">        </span><span class="n">write</span><span class="p">(</span><span class="n">APIC_REGISTER_LVT_TIMER</span><span class="p">,</span><span class="w"> </span><span class="mi">32</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">APIC_LVT_TIMER_MODE_PERIODIC</span><span class="p">);</span><span class="w"></span>
<span class="w">        </span><span class="n">write</span><span class="p">(</span><span class="n">APIC_REGISTER_TIMER_DIV</span><span class="p">,</span><span class="w"> </span><span class="mh">0x3</span><span class="p">);</span><span class="w"></span>
<span class="w">        </span><span class="n">write</span><span class="p">(</span><span class="n">APIC_REGISTER_TIMER_INITCNT</span><span class="p">,</span><span class="w"> </span><span class="n">ticksIn10ms</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="APIC" title="APIC">APIC</a></li></ul>
<h3><span class="mw-headline" id="Threads">Threads</span></h3>
<ul><li><a rel="nofollow" class="external text" href="http://www.osdev.org/phpBB2/viewtopic.php?t=10686">APIC timer</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="http://www.intel.com/products/processor/manuals/">Volume 3A:System Programming Guide, Part 1,manuals has a chapter on the APIC</a></li>
<li><a rel="nofollow" class="external text" href="http://www.osdever.net/tutorials/view/advanced-programming-interrupt-controller">Advanced Programmable Interrupt Controller by Mike Rieker</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250212010627
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.039 seconds
Real time usage: 0.445 seconds
Preprocessor visited node count: 62/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 29666/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3127-0!canonical and timestamp 20250212010627 and revision id 28146.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=APIC_Timer&amp;oldid=28146">https://wiki.osdev.org/index.php?title=APIC_Timer&amp;oldid=28146</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Interrupts" title="Category:Interrupts">Interrupts</a></li><li><a href="./Category:Timers" title="Category:Timers">Timers</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=APIC+Timer" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="APIC_timer#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="APIC_Timer" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:APIC_Timer" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="APIC_Timer"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=APIC_Timer&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=APIC_Timer&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/APIC_Timer" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="./Special:RecentChangesLinked/APIC_Timer" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=APIC_Timer&amp;oldid=28146" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=APIC_Timer&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 10 July 2023, at 14:11.</li>
	<li id="footer-info-0">This page has been accessed 11,273 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=APIC_Timer&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.039","walltime":"0.445","ppvisitednodes":{"value":62,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":29666,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250212010627","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":548});});</script>
</body>
</html>