<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Pascal Bare Bones - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"bde44162dad840bff6ebc3d3","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Pascal_Bare_Bones","wgTitle":"Pascal Bare Bones","wgCurRevisionId":27556,"wgRevisionId":27556,"wgArticleId":3055,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","Level 2 Tutorials","Bare bones tutorials"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Pascal_Bare_Bones","wgRelevantArticleId":3055,"wgIsProbablyEditable":false,
"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Pascal_Bare_Bones rootpage-Pascal_Bare_Bones skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Pascal Bare Bones</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Pascal_Bare_Bones#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Pascal_Bare_Bones#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><big><b>WAIT! Have you read <a href="Getting_Started" title="Getting Started">Getting Started</a>, <a href="Beginner_Mistakes" title="Beginner Mistakes">Beginner Mistakes</a>, and some of the related <a href="./Category:OS_theory" title="Category:OS theory">OS theory</a>?</b></big>
</p>
</td></tr></tbody></table>
</center><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_2.png" class="image"><img alt="Difficulty 2.png" src="images/a/a1/Difficulty_2.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Medium</td></tr></tbody></table>
<p>Tools needed to build the project:
</p>
<ul><li>FPC (You'll need the i386 version as that's the architecture we're targeting)</li>
<li>NASM</li>
<li>binutils(ld) built for <a href="GCC_Cross-Compiler" title="GCC Cross-Compiler">32-bit elf support</a></li></ul>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Pascal_Bare_Bones#stub.asm"><span class="tocnumber">1</span> <span class="toctext">stub.asm</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Pascal_Bare_Bones#kernel.pas"><span class="tocnumber">2</span> <span class="toctext">kernel.pas</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Pascal_Bare_Bones#console.pas"><span class="tocnumber">3</span> <span class="toctext">console.pas</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Pascal_Bare_Bones#multiboot.pas"><span class="tocnumber">4</span> <span class="toctext">multiboot.pas</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Pascal_Bare_Bones#system.pas"><span class="tocnumber">5</span> <span class="toctext">system.pas</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="Pascal_Bare_Bones#Linker_script"><span class="tocnumber">6</span> <span class="toctext">Linker script</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="Pascal_Bare_Bones#Compiling_and_Linking_the_modules"><span class="tocnumber">7</span> <span class="toctext">Compiling and Linking the modules</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="Pascal_Bare_Bones#makeiso.sh"><span class="tocnumber">8</span> <span class="toctext">makeiso.sh</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="Pascal_Bare_Bones#Alternative_compiling:_Makefile"><span class="tocnumber">9</span> <span class="toctext">Alternative compiling: Makefile</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="Pascal_Bare_Bones#Further_Steps"><span class="tocnumber">10</span> <span class="toctext">Further Steps</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="Pascal_Bare_Bones#See_Also"><span class="tocnumber">11</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-12"><a href="Pascal_Bare_Bones#External_Links"><span class="tocnumber">11.1</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h3><span class="mw-headline" id="stub.asm">stub.asm</span></h3>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">;/////////////////////////////////////////////////////////</span>
<span class="c1">;//                                                     //</span>
<span class="c1">;//               Freepascal barebone OS                //</span>
<span class="c1">;//                      stub.asm                       //</span>
<span class="c1">;//                                                     //</span>
<span class="c1">;/////////////////////////////////////////////////////////</span>
<span class="c1">;//</span>
<span class="c1">;//     By:             De Deyn Kim &lt;<a href="cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="355e5c58515051504c5b75465e4c5b50411b5750">[email&#160;protected]</a>&gt;</span>
<span class="c1">;//     License:        Public domain</span>
<span class="c1">;//</span>

<span class="c1">;</span>
<span class="c1">; Kernel stub</span>
<span class="c1">;</span>

<span class="c1">;</span>
<span class="c1">; We are in 32bits protected mode</span>
<span class="c1">;</span>
<span class="err">[</span><span class="nf">bits</span><span class="w"> </span><span class="mi">32</span><span class="p">]</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Export entrypoint</span>
<span class="c1">;</span>
<span class="err">[</span><span class="nf">global</span><span class="w"> </span><span class="no">kstart</span><span class="p">]</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Import kernel entrypoint</span>
<span class="c1">;</span>
<span class="err">[</span><span class="nf">extern</span><span class="w"> </span><span class="no">kmain</span><span class="p">]</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Posible multiboot header flags</span>
<span class="c1">;</span>
<span class="nf">MULTIBOOT_MODULE_ALIGN</span><span class="w">          </span><span class="no">equ</span><span class="w">     </span><span class="mi">1</span><span class="err">&lt;&lt;</span><span class="mi">0</span><span class="w"></span>
<span class="nf">MULTIBOOT_MEMORY_MAP</span><span class="w">            </span><span class="no">equ</span><span class="w">     </span><span class="mi">1</span><span class="err">&lt;&lt;</span><span class="mi">1</span><span class="w"></span>
<span class="nf">MULTIBOOT_GRAPHICS_FIELDS</span><span class="w">       </span><span class="no">equ</span><span class="w">     </span><span class="mi">1</span><span class="err">&lt;&lt;</span><span class="mi">2</span><span class="w"></span>
<span class="nf">MULTIBOOT_ADDRESS_FIELDS</span><span class="w">        </span><span class="no">equ</span><span class="w">     </span><span class="mi">1</span><span class="err">&lt;&lt;</span><span class="mi">16</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Multiboot header defines</span>
<span class="c1">;</span>
<span class="nf">MULTIBOOT_HEADER_MAGIC</span><span class="w">          </span><span class="no">equ</span><span class="w">     </span><span class="mi">0x1BADB002</span><span class="w"></span>
<span class="nf">MULTIBOOT_HEADER_FLAGS</span><span class="w">          </span><span class="no">equ</span><span class="w">     </span><span class="no">MULTIBOOT_MODULE_ALIGN</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">MULTIBOOT_MEMORY_MAP</span><span class="w"></span>
<span class="nf">MULTIBOOT_HEADER_CHECKSUM</span><span class="w">       </span><span class="no">equ</span><span class="w">     </span><span class="p">-(</span><span class="no">MULTIBOOT_HEADER_MAGIC</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_FLAGS</span><span class="p">)</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Kernel stack size</span>
<span class="c1">;</span>
<span class="nf">KERNEL_STACKSIZE</span><span class="w">                </span><span class="no">equ</span><span class="w">     </span><span class="mi">0x4000</span><span class="w"></span>

<span class="nf">section</span><span class="w"> </span><span class="no">.text</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Multiboot header</span>
<span class="c1">;</span>
<span class="nf">align</span><span class="w"> </span><span class="mi">4</span><span class="w"></span>
<span class="nf">dd</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_MAGIC</span><span class="w"></span>
<span class="nf">dd</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_FLAGS</span><span class="w"></span>
<span class="nf">dd</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_CHECKSUM</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Entrypoint</span>
<span class="c1">;</span>
<span class="nl">kstart:</span><span class="w"></span>
<span class="w">        </span><span class="nf">mov</span><span class="w"> </span><span class="no">esp</span><span class="p">,</span><span class="w"> </span><span class="no">KERNEL_STACK</span><span class="err">+</span><span class="no">KERNEL_STACKSIZE</span><span class="w">  </span><span class="c1">;Create kernel stack</span>
<span class="w">        </span><span class="nf">push</span><span class="w"> </span><span class="no">eax</span><span class="w">                                </span><span class="c1">;Multiboot magic number</span>
<span class="w">        </span><span class="nf">push</span><span class="w"> </span><span class="no">ebx</span><span class="w">                                </span><span class="c1">;Multiboot info</span>
<span class="w">        </span><span class="nf">call</span><span class="w"> </span><span class="no">kmain</span><span class="w">                              </span><span class="c1">;Call kernel entrypoint</span>
<span class="w">        </span><span class="nf">cli</span><span class="w">                                     </span><span class="c1">;Clear interrupts</span>
<span class="w">        </span><span class="nf">hlt</span><span class="w">                                     </span><span class="c1">;Halt machine</span>

<span class="nf">section</span><span class="w"> </span><span class="no">.bss</span><span class="w"></span>

<span class="c1">;</span>
<span class="c1">; Kernel stack location</span>
<span class="c1">;</span>
<span class="nf">align</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="nl">KERNEL_STACK:</span><span class="w"></span>
<span class="w">        </span><span class="nf">resb</span><span class="w"> </span><span class="no">KERNEL_STACKSIZE</span><span class="w"></span>
</pre></div>
<h3><span class="mw-headline" id="kernel.pas">kernel.pas</span></h3>
<div class="mw-highlight mw-highlight-lang-pascal mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">{</span>
<span class="cm">/////////////////////////////////////////////////////////</span>
<span class="cm">//                                                     //</span>
<span class="cm">//               Freepascal barebone OS                //</span>
<span class="cm">//                      kernel.pas                     //</span>
<span class="cm">//                                                     //</span>
<span class="cm">/////////////////////////////////////////////////////////</span>
<span class="cm">//</span>
<span class="cm">//      By:             De Deyn Kim &lt;<a href="cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="9ff4f6f2fbfafbfae6f1dfecf4e6f1faebb1fdfa">[email&#160;protected]</a>&gt;</span>
<span class="cm">//      License:        Public domain</span>
<span class="cm">//</span>
<span class="cm">}</span>

<span class="k">unit</span> <span class="n">kernel</span><span class="o">;</span>

<span class="k">interface</span>

<span class="k">uses</span>
        <span class="n">multiboot</span><span class="o">,</span>
        <span class="n">console</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">kmain</span><span class="p">(</span><span class="n">mbinfo</span><span class="o">:</span> <span class="n">Pmultiboot_info_t</span><span class="o">;</span> <span class="n">mbmagic</span><span class="o">:</span> <span class="kt">DWORD</span><span class="p">)</span><span class="o">;</span> <span class="kp">stdcall</span><span class="o">;</span>

<span class="k">implementation</span>

<span class="k">procedure</span> <span class="nf">kmain</span><span class="p">(</span><span class="n">mbinfo</span><span class="o">:</span> <span class="n">Pmultiboot_info_t</span><span class="o">;</span> <span class="n">mbmagic</span><span class="o">:</span> <span class="kt">DWORD</span><span class="p">)</span><span class="o">;</span> <span class="kp">stdcall</span><span class="o">;</span> <span class="p">[</span><span class="kp">public</span><span class="o">,</span> <span class="kp">alias</span><span class="o">:</span> <span class="s">&#39;kmain&#39;</span><span class="p">]</span><span class="o">;</span>
<span class="k">begin</span>
        <span class="n">kclearscreen</span><span class="p">()</span><span class="o">;</span>
        <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;Freepascal barebone OS booted!&#39;</span><span class="p">)</span><span class="o">;</span>
        <span class="n">xpos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">ypos</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">mbmagic</span> <span class="o">&lt;&gt;</span> <span class="n">MULTIBOOT_BOOTLOADER_MAGIC</span><span class="p">)</span> <span class="k">then</span>
        <span class="k">begin</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;Halting system, a multiboot-compliant boot loader needed!&#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="k">asm</span>
                        <span class="k">cli</span>
                        <span class="k">hlt</span>
                <span class="k">end</span><span class="o">;</span>
        <span class="k">end</span>
        <span class="k">else</span>
        <span class="k">begin</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;Booted by a multiboot-compliant boot loader!&#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="n">xpos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">ypos</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">;</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;Multiboot information:&#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="n">xpos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">ypos</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">;</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;                       Lower memory  = &#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="n">kwriteint</span><span class="p">(</span><span class="n">mbinfo</span><span class="o">^.</span><span class="n">mem_lower</span><span class="p">)</span><span class="o">;</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;KB&#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="n">xpos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">ypos</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;                       Higher memory = &#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="n">kwriteint</span><span class="p">(</span><span class="n">mbinfo</span><span class="o">^.</span><span class="n">mem_upper</span><span class="p">)</span><span class="o">;</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;KB&#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="n">xpos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">ypos</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;                       Total memory  = &#39;</span><span class="p">)</span><span class="o">;</span>
                <span class="n">kwriteint</span><span class="p">(((</span><span class="n">mbinfo</span><span class="o">^.</span><span class="n">mem_upper</span> <span class="o">+</span> <span class="mi">1000</span><span class="p">)</span> <span class="k">div</span> <span class="mi">1024</span><span class="p">)</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">;</span>
                <span class="n">kwritestr</span><span class="p">(</span><span class="s">&#39;MB&#39;</span><span class="p">)</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

        <span class="k">asm</span>
                <span class="o">@</span><span class="k">loop</span><span class="o">:</span>
                <span class="k">jmp</span> <span class="o">@</span><span class="k">loop</span>
        <span class="k">end</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">end</span><span class="o">.</span>
</pre></div>
<h3><span class="mw-headline" id="console.pas">console.pas</span></h3>
<div class="mw-highlight mw-highlight-lang-pascal mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">{</span>
<span class="cm">/////////////////////////////////////////////////////////</span>
<span class="cm">//                                                     //</span>
<span class="cm">//               Freepascal barebone OS                //</span>
<span class="cm">//                       console.pas                   //</span>
<span class="cm">//                                                     //</span>
<span class="cm">/////////////////////////////////////////////////////////</span>
<span class="cm">//</span>
<span class="cm">//      By:             De Deyn Kim &lt;<a href="cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="ef8486828b8a8b8a9681af9c8496818a9bc18d8a">[email&#160;protected]</a>&gt;</span>
<span class="cm">//      License:        Public domain</span>
<span class="cm">//</span>
<span class="cm">}</span>

<span class="k">unit</span> <span class="n">console</span><span class="o">;</span>

<span class="k">interface</span>

<span class="k">var</span>
        <span class="n">xpos</span><span class="o">:</span> <span class="kt">Integer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">ypos</span><span class="o">:</span> <span class="kt">Integer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">kclearscreen</span><span class="p">()</span><span class="o">;</span>
<span class="k">procedure</span> <span class="nf">kwritechr</span><span class="p">(</span><span class="n">c</span><span class="o">:</span> <span class="kt">Char</span><span class="p">)</span><span class="o">;</span>
<span class="k">procedure</span> <span class="nf">kwritestr</span><span class="p">(</span><span class="n">s</span><span class="o">:</span> <span class="kt">PChar</span><span class="p">)</span><span class="o">;</span>
<span class="k">procedure</span> <span class="nf">kwriteint</span><span class="p">(</span><span class="n">i</span><span class="o">:</span> <span class="kt">Integer</span><span class="p">)</span><span class="o">;</span>
<span class="k">procedure</span> <span class="nf">kwritedword</span><span class="p">(</span><span class="n">i</span><span class="o">:</span> <span class="kt">DWORD</span><span class="p">)</span><span class="o">;</span>

<span class="k">implementation</span>

<span class="k">var</span>
        <span class="n">vidmem</span><span class="o">:</span> <span class="kt">PChar</span> <span class="o">=</span> <span class="kt">PChar</span><span class="p">(</span><span class="mh">$b8000</span><span class="p">)</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">kclearscreen</span><span class="p">()</span><span class="o">;</span> <span class="p">[</span><span class="kp">public</span><span class="o">,</span> <span class="kp">alias</span><span class="o">:</span> <span class="s">&#39;kclearscreen&#39;</span><span class="p">]</span><span class="o">;</span>
<span class="k">var</span>
        <span class="n">i</span><span class="o">:</span> <span class="kt">Integer</span><span class="o">;</span>
<span class="k">begin</span>
        <span class="k">for</span> <span class="n">i</span> <span class="o">:=</span> <span class="mi">0</span> <span class="k">to</span> <span class="mi">3999</span> <span class="k">do</span>
                <span class="n">vidmem</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">:=</span> <span class="sc">#0</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">kwritechr</span><span class="p">(</span><span class="n">c</span><span class="o">:</span> <span class="kt">Char</span><span class="p">)</span><span class="o">;</span> <span class="p">[</span><span class="kp">public</span><span class="o">,</span> <span class="kp">alias</span><span class="o">:</span> <span class="s">&#39;kwritechr&#39;</span><span class="p">]</span><span class="o">;</span>
<span class="k">var</span>
        <span class="n">offset</span><span class="o">:</span> <span class="kt">Integer</span><span class="o">;</span>
<span class="k">begin</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">ypos</span> <span class="o">&gt;</span> <span class="mi">24</span><span class="p">)</span> <span class="k">then</span>
                <span class="n">ypos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">xpos</span> <span class="o">&gt;</span> <span class="mi">79</span><span class="p">)</span> <span class="k">then</span>
                <span class="n">xpos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="n">offset</span> <span class="o">:=</span> <span class="p">(</span><span class="n">xpos</span> <span class="k">shl</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">ypos</span> <span class="o">*</span> <span class="mi">160</span><span class="p">)</span><span class="o">;</span>
        <span class="n">vidmem</span><span class="p">[</span><span class="n">offset</span><span class="p">]</span> <span class="o">:=</span> <span class="n">c</span><span class="o">;</span>
        <span class="n">offset</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="n">vidmem</span><span class="p">[</span><span class="n">offset</span><span class="p">]</span> <span class="o">:=</span> <span class="sc">#7</span><span class="o">;</span>
        <span class="n">offset</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>

        <span class="n">xpos</span> <span class="o">:=</span> <span class="p">(</span><span class="n">offset</span> <span class="k">mod</span> <span class="mi">160</span><span class="p">)</span><span class="o">;</span>
        <span class="n">ypos</span> <span class="o">:=</span> <span class="p">(</span><span class="n">offset</span> <span class="o">-</span> <span class="n">xpos</span><span class="p">)</span> <span class="k">div</span> <span class="mi">160</span><span class="o">;</span>
        <span class="n">xpos</span> <span class="o">:=</span> <span class="n">xpos</span> <span class="k">shr</span> <span class="mi">1</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">kwritestr</span><span class="p">(</span><span class="n">s</span><span class="o">:</span> <span class="kt">PChar</span><span class="p">)</span><span class="o">;</span> <span class="p">[</span><span class="kp">public</span><span class="o">,</span> <span class="kp">alias</span><span class="o">:</span> <span class="s">&#39;kwritestr&#39;</span><span class="p">]</span><span class="o">;</span>
<span class="k">var</span>
        <span class="n">offset</span><span class="o">,</span> <span class="n">i</span><span class="o">:</span> <span class="kt">Integer</span><span class="o">;</span>
<span class="k">begin</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">ypos</span> <span class="o">&gt;</span> <span class="mi">24</span><span class="p">)</span> <span class="k">then</span>
                <span class="n">ypos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">xpos</span> <span class="o">&gt;</span> <span class="mi">79</span><span class="p">)</span> <span class="k">then</span>
                <span class="n">xpos</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="n">offset</span> <span class="o">:=</span> <span class="p">(</span><span class="n">xpos</span> <span class="k">shl</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">ypos</span> <span class="o">*</span> <span class="mi">160</span><span class="p">)</span><span class="o">;</span>
        <span class="n">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">while</span> <span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&gt;</span> <span class="kt">Char</span><span class="p">(</span><span class="mh">$0</span><span class="p">))</span> <span class="k">do</span>
        <span class="k">begin</span>
                <span class="n">vidmem</span><span class="p">[</span><span class="n">offset</span><span class="p">]</span> <span class="o">:=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">;</span>
                <span class="n">offset</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="n">vidmem</span><span class="p">[</span><span class="n">offset</span><span class="p">]</span> <span class="o">:=</span> <span class="sc">#7</span><span class="o">;</span>
                <span class="n">offset</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

        <span class="n">xpos</span> <span class="o">:=</span> <span class="p">(</span><span class="n">offset</span> <span class="k">mod</span> <span class="mi">160</span><span class="p">)</span><span class="o">;</span>
        <span class="n">ypos</span> <span class="o">:=</span> <span class="p">(</span><span class="n">offset</span> <span class="o">-</span> <span class="n">xpos</span><span class="p">)</span> <span class="k">div</span> <span class="mi">160</span><span class="o">;</span>
        <span class="n">xpos</span> <span class="o">:=</span> <span class="n">xpos</span> <span class="k">shr</span> <span class="mi">1</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">kwriteint</span><span class="p">(</span><span class="n">i</span><span class="o">:</span> <span class="kt">Integer</span><span class="p">)</span><span class="o">;</span> <span class="p">[</span><span class="kp">public</span><span class="o">,</span> <span class="kp">alias</span><span class="o">:</span> <span class="s">&#39;kwriteint&#39;</span><span class="p">]</span><span class="o">;</span>
<span class="k">var</span>
        <span class="n">buffer</span><span class="o">:</span> <span class="k">array</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">11</span><span class="p">]</span> <span class="k">of</span> <span class="kt">Char</span><span class="o">;</span>
        <span class="nb">str</span><span class="o">:</span> <span class="kt">PChar</span><span class="o">;</span>
        <span class="n">digit</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
        <span class="n">minus</span><span class="o">:</span> <span class="kt">Boolean</span><span class="o">;</span>
<span class="k">begin</span>
        <span class="nb">str</span> <span class="o">:=</span> <span class="o">@</span><span class="n">buffer</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">;</span>
        <span class="nb">str</span><span class="o">^</span> <span class="o">:=</span> <span class="sc">#0</span><span class="o">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">then</span>
        <span class="k">begin</span>
                <span class="n">digit</span> <span class="o">:=</span> <span class="o">-</span><span class="n">i</span><span class="o">;</span>
                <span class="n">minus</span> <span class="o">:=</span> <span class="k">True</span><span class="o">;</span>
        <span class="k">end</span>
        <span class="k">else</span>
        <span class="k">begin</span>
                <span class="n">digit</span> <span class="o">:=</span> <span class="n">i</span><span class="o">;</span>
                <span class="n">minus</span> <span class="o">:=</span> <span class="k">False</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

        <span class="k">repeat</span>
                <span class="nb">Dec</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">;</span>
                <span class="nb">str</span><span class="o">^</span> <span class="o">:=</span> <span class="kt">Char</span><span class="p">((</span><span class="n">digit</span> <span class="k">mod</span> <span class="mi">10</span><span class="p">)</span> <span class="o">+</span> <span class="kt">Byte</span><span class="p">(</span><span class="s">&#39;0&#39;</span><span class="p">))</span><span class="o">;</span>
                <span class="n">digit</span> <span class="o">:=</span> <span class="n">digit</span> <span class="k">div</span> <span class="mi">10</span><span class="o">;</span>
        <span class="k">until</span> <span class="p">(</span><span class="n">digit</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span><span class="o">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">minus</span><span class="p">)</span> <span class="k">then</span>
        <span class="k">begin</span>
                <span class="nb">Dec</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">;</span>
                <span class="nb">str</span><span class="o">^</span> <span class="o">:=</span> <span class="s">&#39;-&#39;</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

        <span class="n">kwritestr</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">kwritedword</span><span class="p">(</span><span class="n">i</span><span class="o">:</span> <span class="kt">DWORD</span><span class="p">)</span><span class="o">;</span> <span class="p">[</span><span class="kp">public</span><span class="o">,</span> <span class="kp">alias</span><span class="o">:</span> <span class="s">&#39;kwritedword&#39;</span><span class="p">]</span><span class="o">;</span>
<span class="k">var</span>
        <span class="n">buffer</span><span class="o">:</span> <span class="k">array</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">11</span><span class="p">]</span> <span class="k">of</span> <span class="kt">Char</span><span class="o">;</span>
        <span class="nb">str</span><span class="o">:</span> <span class="kt">PChar</span><span class="o">;</span>
        <span class="n">digit</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
<span class="k">begin</span>
        <span class="k">for</span> <span class="n">digit</span> <span class="o">:=</span> <span class="mi">0</span> <span class="k">to</span> <span class="mi">10</span> <span class="k">do</span>
                <span class="n">buffer</span><span class="p">[</span><span class="n">digit</span><span class="p">]</span> <span class="o">:=</span> <span class="s">&#39;0&#39;</span><span class="o">;</span>

        <span class="nb">str</span> <span class="o">:=</span> <span class="o">@</span><span class="n">buffer</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">;</span>
        <span class="nb">str</span><span class="o">^</span> <span class="o">:=</span> <span class="sc">#0</span><span class="o">;</span>

        <span class="n">digit</span> <span class="o">:=</span> <span class="n">i</span><span class="o">;</span>
        <span class="k">repeat</span>
                <span class="nb">Dec</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">;</span>
                <span class="nb">str</span><span class="o">^</span> <span class="o">:=</span> <span class="kt">Char</span><span class="p">((</span><span class="n">digit</span> <span class="k">mod</span> <span class="mi">10</span><span class="p">)</span> <span class="o">+</span> <span class="kt">Byte</span><span class="p">(</span><span class="s">&#39;0&#39;</span><span class="p">))</span><span class="o">;</span>
                <span class="n">digit</span> <span class="o">:=</span> <span class="n">digit</span> <span class="k">div</span> <span class="mi">10</span><span class="o">;</span>
        <span class="k">until</span> <span class="p">(</span><span class="n">digit</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span><span class="o">;</span>

        <span class="n">kwritestr</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">end</span><span class="o">.</span>
</pre></div>
<h3><span class="mw-headline" id="multiboot.pas">multiboot.pas</span></h3>
<div class="mw-highlight mw-highlight-lang-pascal mw-content-ltr" dir="ltr"><pre><span></span><span class="k">unit</span> <span class="n">multiboot</span><span class="o">;</span>

<span class="k">interface</span>

<span class="k">const</span>
        <span class="n">KERNEL_STACKSIZE</span> <span class="o">=</span> <span class="mh">$4000</span><span class="o">;</span>

        <span class="n">MULTIBOOT_BOOTLOADER_MAGIC</span> <span class="o">=</span> <span class="mh">$2BADB002</span><span class="o">;</span>

<span class="k">type</span>
        <span class="n">Pelf_section_header_table_t</span> <span class="o">=</span> <span class="o">^</span><span class="n">elf_section_header_table_t</span><span class="o">;</span>
        <span class="n">elf_section_header_table_t</span> <span class="o">=</span> <span class="k">packed</span> <span class="k">record</span>
          <span class="n">num</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">size</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="nb">addr</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">shndx</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

        <span class="n">Pmultiboot_info_t</span> <span class="o">=</span> <span class="o">^</span><span class="n">multiboot_info_t</span><span class="o">;</span>
        <span class="n">multiboot_info_t</span> <span class="o">=</span> <span class="k">packed</span> <span class="k">record</span>
          <span class="n">flags</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">mem_lower</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span> <span class="cm">{ Amount of memory available below 1mb }</span>
          <span class="n">mem_upper</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span> <span class="cm">{ Amount of memory available above 1mb }</span>
          <span class="n">boot_device</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">cmdline</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">mods_count</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">mods_addr</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">elf_sec</span><span class="o">:</span> <span class="n">elf_section_header_table_t</span><span class="o">;</span>
          <span class="n">mmap_length</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">mmap_addr</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

        <span class="n">Pmodule_t</span> <span class="o">=</span> <span class="o">^</span><span class="n">module_t</span><span class="o">;</span>
        <span class="n">module_t</span> <span class="o">=</span> <span class="k">packed</span> <span class="k">record</span>
          <span class="n">mod_start</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">mod_end</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">name</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">reserved</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

        <span class="n">Pmemory_map_t</span> <span class="o">=</span> <span class="o">^</span><span class="n">memory_map_t</span><span class="o">;</span>
        <span class="n">memory_map_t</span> <span class="o">=</span> <span class="k">packed</span> <span class="k">record</span>
          <span class="n">size</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="cm">{ You can declare these two as a single qword if your compiler supports it }</span>
          <span class="n">base_addr_low</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">base_addr_high</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="cm">{ And again, these can be made into one qword variable. }</span>
          <span class="n">length_low</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">length_high</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
          <span class="n">mtype</span><span class="o">:</span> <span class="kt">DWORD</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>

<span class="k">implementation</span>

<span class="k">end</span><span class="o">.</span>
</pre></div>
<h3><span class="mw-headline" id="system.pas">system.pas</span></h3>
<p>Since fpc-3.2.0 there was added necessary parts (in code block that part was highlighted by comment lines), because without them developer could met error like:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>system.pas<span class="o">(</span><span class="m">18</span>,1<span class="o">)</span> <span class="o">(</span>system<span class="o">)</span>   Parsing implementation of SYSTEM
system.pas<span class="o">(</span><span class="m">18</span>,1<span class="o">)</span> Fatal: Internal <span class="nb">type</span> <span class="s2">&quot;TEXCEPTADDR&quot;</span> was not found. Check <span class="k">if</span> you use the correct run <span class="nb">time</span> library.
Fatal: Compilation aborted
</pre></div>
<p>Valid version of <b>system.pas</b> on 2022/12/29:
</p>
<div class="mw-highlight mw-highlight-lang-pascal mw-content-ltr" dir="ltr"><pre><span></span><span class="k">unit</span> <span class="n">system</span><span class="o">;</span>

<span class="cm">{$MODE FPC}</span>

<span class="k">interface</span>

  <span class="k">type</span>
    <span class="kt">cardinal</span> <span class="o">=</span> <span class="mi">0</span><span class="o">..</span><span class="mh">$FFFFFFFF</span><span class="o">;</span>
    <span class="n">hresult</span> <span class="o">=</span> <span class="kt">cardinal</span><span class="o">;</span>
    <span class="kt">dword</span> <span class="o">=</span> <span class="kt">cardinal</span><span class="o">;</span>
    <span class="kt">integer</span> <span class="o">=</span> <span class="kt">longint</span><span class="o">;</span>

    <span class="kt">pchar</span> <span class="o">=</span> <span class="o">^</span><span class="kt">char</span><span class="o">;</span>

    <span class="cm">{ That part comes from fpc 3.2.0 as nessesary}</span>
    <span class="n">TTypeKind</span> <span class="o">=</span> <span class="p">(</span><span class="n">tkUnknown</span><span class="o">,</span> <span class="n">tkInteger</span><span class="o">,</span> <span class="n">tkChar</span><span class="o">,</span> <span class="n">tkEnumeration</span><span class="o">,</span> <span class="n">tkFloat</span><span class="o">,</span> <span class="n">tkSet</span><span class="o">,</span>
    <span class="n">tkMethod</span><span class="o">,</span> <span class="n">tkSString</span><span class="o">,</span> <span class="n">tkLString</span><span class="o">,</span> <span class="n">tkAString</span><span class="o">,</span> <span class="n">tkWString</span><span class="o">,</span> <span class="n">tkVariant</span><span class="o">,</span> <span class="n">tkArray</span><span class="o">,</span>
    <span class="n">tkRecord</span><span class="o">,</span> <span class="n">tkInterface</span><span class="o">,</span> <span class="n">tkClass</span><span class="o">,</span> <span class="n">tkObject</span><span class="o">,</span> <span class="n">tkWChar</span><span class="o">,</span> <span class="n">tkBool</span><span class="o">,</span> <span class="n">tkInt64</span><span class="o">,</span> <span class="n">tkQWord</span><span class="o">,</span>
    <span class="n">tkDynArray</span><span class="o">,</span> <span class="n">tkInterfaceRaw</span><span class="o">,</span> <span class="n">tkProcVar</span><span class="o">,</span> <span class="n">tkUString</span><span class="o">,</span> <span class="n">tkUChar</span><span class="o">,</span> <span class="n">tkHelper</span><span class="o">,</span> <span class="n">tkFile</span><span class="o">,</span>
    <span class="n">tkClassRef</span><span class="o">,</span> <span class="n">tkPointer</span><span class="p">)</span><span class="o">;</span>

    <span class="n">jmp_buf</span> <span class="o">=</span> <span class="k">packed</span> <span class="k">record</span>
      <span class="n">rbx</span><span class="o">,</span> <span class="n">rbp</span><span class="o">,</span> <span class="n">r12</span><span class="o">,</span> <span class="n">r13</span><span class="o">,</span> <span class="n">r14</span><span class="o">,</span> <span class="n">r15</span><span class="o">,</span> <span class="n">rsp</span><span class="o">,</span> <span class="n">rip</span><span class="o">:</span> <span class="n">QWord</span><span class="o">;</span>
      <span class="cm">{$IFDEF win64}</span>
      <span class="n">rsi</span><span class="o">,</span> <span class="n">rdi</span><span class="o">:</span> <span class="n">QWord</span><span class="o">;</span>
      <span class="n">xmm6</span><span class="o">,</span> <span class="n">xmm7</span><span class="o">,</span> <span class="n">xmm8</span><span class="o">,</span> <span class="n">xmm9</span><span class="o">,</span> <span class="n">xmm10</span><span class="o">,</span> <span class="n">xmm11</span><span class="o">,</span> <span class="n">xmm12</span><span class="o">,</span> <span class="n">xmm13</span><span class="o">,</span> <span class="n">xmm14</span><span class="o">,</span> <span class="n">xmm15</span><span class="o">:</span> <span class="k">record</span> 
        <span class="n">m1</span><span class="o">,</span> <span class="n">m2</span><span class="o">:</span> <span class="n">QWord</span><span class="o">;</span>
      <span class="k">end</span><span class="o">;</span>

      <span class="n">mxcsr</span><span class="o">:</span> <span class="kt">LongWord</span><span class="o">;</span>
      <span class="n">fpucw</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span>
      <span class="n">padding</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span>
      <span class="cm">{$ENDIF win64}</span>
    <span class="k">end</span><span class="o">;</span>

    <span class="n">Pjmp_buf</span> <span class="o">=</span> <span class="o">^</span><span class="n">jmp_buf</span><span class="o">;</span>
    <span class="n">PExceptAddr</span> <span class="o">=</span> <span class="o">^</span><span class="n">TExceptAddr</span><span class="o">;</span>
    <span class="n">TExceptAddr</span> <span class="o">=</span> <span class="k">record</span> 
      <span class="n">buf</span><span class="o">:</span> <span class="n">Pjmp_buf</span><span class="o">;</span>
      <span class="n">next</span><span class="o">:</span> <span class="n">PExceptAddr</span><span class="o">;</span>
      <span class="cm">{$IFDEF CPU16}</span>
      <span class="n">frametype</span><span class="o">:</span> <span class="kt">SmallInt</span><span class="o">;</span>
      <span class="cm">{$ELSE CPU16}</span>
      <span class="n">frametype</span><span class="o">:</span> <span class="kt">LongInt</span><span class="o">;</span>
      <span class="cm">{$ENDIF CPU16}</span>
    <span class="k">end</span><span class="o">;</span>

    <span class="n">PGuid</span> <span class="o">=</span> <span class="o">^</span><span class="n">TGuid</span><span class="o">;</span>
    <span class="n">TGuid</span> <span class="o">=</span> <span class="k">packed</span> <span class="k">record</span>
      <span class="k">case</span> <span class="kt">Integer</span> <span class="k">of</span>
      <span class="mi">1</span><span class="o">:</span>
      <span class="p">(</span><span class="n">Data1</span><span class="o">:</span> <span class="kt">DWord</span><span class="o">;</span>
        <span class="n">Data2</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span>
        <span class="n">Data3</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span>
        <span class="n">Data4</span><span class="o">:</span> <span class="k">array</span> <span class="p">[</span><span class="mi">0</span> <span class="o">..</span> <span class="mi">7</span><span class="p">]</span> <span class="k">of</span> <span class="kt">byte</span><span class="o">;</span>
      <span class="p">)</span><span class="o">;</span>
      <span class="mi">2</span><span class="o">:</span>
      <span class="p">(</span><span class="n">D1</span><span class="o">:</span> <span class="kt">DWord</span><span class="o">;</span>
        <span class="n">D2</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span>
        <span class="n">D3</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span>
        <span class="n">D4</span><span class="o">:</span> <span class="k">array</span> <span class="p">[</span><span class="mi">0</span> <span class="o">..</span> <span class="mi">7</span><span class="p">]</span> <span class="k">of</span> <span class="kt">byte</span><span class="o">;</span>
      <span class="p">)</span><span class="o">;</span>
      <span class="mi">3</span><span class="o">:</span>
      <span class="p">(</span> <span class="cm">{ uuid fields according to RFC4122 }</span>
        <span class="n">time_low</span><span class="o">:</span> <span class="kt">DWord</span><span class="o">;</span> <span class="c1">// The low field of the timestamp</span>
        <span class="n">time_mid</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span> <span class="c1">// The middle field of the timestamp</span>
        <span class="n">time_hi_and_version</span><span class="o">:</span> <span class="kt">word</span><span class="o">;</span>
        <span class="c1">// The high field of the timestamp multiplexed with the version number</span>
        <span class="n">clock_seq_hi_and_reserved</span><span class="o">:</span> <span class="kt">byte</span><span class="o">;</span>
        <span class="c1">// The high field of the clock sequence multiplexed with the variant</span>
        <span class="n">clock_seq_low</span><span class="o">:</span> <span class="kt">byte</span><span class="o">;</span> <span class="c1">// The low field of the clock sequence</span>
        <span class="n">node</span><span class="o">:</span> <span class="k">array</span> <span class="p">[</span><span class="mi">0</span> <span class="o">..</span> <span class="mi">5</span><span class="p">]</span> <span class="k">of</span> <span class="kt">byte</span><span class="o">;</span> <span class="c1">// The spatially unique node identifier</span>
      <span class="p">)</span><span class="o">;</span>
    <span class="k">end</span><span class="o">;</span>

<span class="cm">{ --- End of nessesary part --- }</span>

<span class="k">implementation</span>

<span class="k">end</span><span class="o">.</span>
</pre></div>
<h3><span class="mw-headline" id="Linker_script">Linker script</span></h3>
<p>linker.script
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="n">ENTRY</span><span class="p">(</span><span class="n">kstart</span><span class="p">)</span><span class="w"></span>
<span class="n">SECTIONS</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="p">.</span><span class="n">text</span><span class="w">  </span><span class="mh">0x100000</span><span class="w"> </span><span class="o">:</span><span class="w"></span>
<span class="w">  </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">_text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">__text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="w">    </span><span class="o">*</span><span class="p">(.</span><span class="n">text</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="p">.</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ALIGN</span><span class="p">(</span><span class="mi">4096</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="p">}</span><span class="w"></span>
<span class="w">  </span><span class="p">.</span><span class="n">data</span><span class="w">  </span><span class="o">:</span><span class="w"></span>
<span class="w">  </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">__data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="w">    </span><span class="o">*</span><span class="p">(.</span><span class="n">data</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="n">kimage_text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="w">    </span><span class="n">LONG</span><span class="p">(</span><span class="n">text</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">kimage_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="w">    </span><span class="n">LONG</span><span class="p">(</span><span class="n">data</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">kimage_bss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="w">    </span><span class="n">LONG</span><span class="p">(</span><span class="n">bss</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">kimage_end</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="w">    </span><span class="n">LONG</span><span class="p">(</span><span class="n">end</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="p">.</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ALIGN</span><span class="p">(</span><span class="mi">4096</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="p">}</span><span class="w"></span>
<span class="w">  </span><span class="p">.</span><span class="n">bss</span><span class="w">  </span><span class="o">:</span><span class="w"></span>
<span class="w">  </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">bss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">_bss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">__bss</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="w">    </span><span class="o">*</span><span class="p">(.</span><span class="n">bss</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="p">.</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ALIGN</span><span class="p">(</span><span class="mi">4096</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="p">}</span><span class="w"></span>
<span class="w">  </span><span class="n">end</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">_end</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"> </span><span class="n">__end</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">.;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h3><span class="mw-headline" id="Compiling_and_Linking_the_modules">Compiling and Linking the modules</span></h3>
<p>Assemble stub.asm with:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>nasm -f elf32 stub.asm -o stub.o
</pre></div>
<ul><li>-f elf32 - needed <i>exact</i> under x86_64 systems to make correct object file</li></ul>
<p>The Pascal modules with:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>fpc -Aelf -n -O3 -Op3 -Si -Sc -Sg -Xd -CX -XXs -Pi386 -Rintel -Tlinux kernel.pas
</pre></div>
<ul><li>-Aelf - instructs the internal fpc assembler to output an ELF object.;</li>
<li>-n - ignores fpc.cfg;</li>
<li>-O3 - perform level 3 optimizations;</li>
<li>-Op3 - tune code for PentiumPro / P-II / Cyrix 6x86 / K6 (TM);</li>
<li>-Si - enable C++ style INLINE keyword;</li>
<li>-Sc - enable C style operators;</li>
<li>-Sg - enable support for labels;</li>
<li>-Xd - tells the compiler to forget the standard library path;</li>
<li>-CX - tells the compiler to create smartlinkable units</li>
<li>-XXs - tells the compiler to do smartlinking (-XX) and debugging symbols stripping (-Xs)</li>
<li>-Pi386 - tells the compiler to force i386 mode (actual for x86_64 host systems)</li>
<li>-Rintel - sets the inline assembly syntax to intel style;</li>
<li>-Tlinux - specifies that the target operating system is Linux. (Provides a sensible system unit to use)</li></ul>
<p>Then link the whole thing with:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>i386-elf-ld --gc-sections -s -Tlinker.script -o kernel.obj stub.o kernel.o multiboot.o system.o console.o
</pre></div>
<ul><li>--gc-sections -s, in combination with -CX -XXs above, eliminates RTTI symbols from resulting binary</li></ul>
<p>In case of trouble linking under x86_64 system try this line:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>i686-elf-ld -A elf-386 --gc-sections -s -Tlinker.script -o kernel.obj stub.o kernel.o multiboot.o system.o console.o
</pre></div>
<p><b>Special sutuation</b>: last time after building <b>binutils</b> I've got error
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>i386-linux-ld --gc-sections -s -Tlinker.script -o kernel.obj stub.o kernel.o multiboot.o console.o system.o
ld: i386 architecture of input file <span class="sb">`</span>stub.o<span class="s1">&#39; is incompatible with i386:x86-64 output</span>
<span class="s1">ld: i386 architecture of input file `kernel.o&#39;</span> is incompatible with i386:x86-64 output
ld: i386 architecture of input file <span class="sb">`</span>multiboot.o<span class="s1">&#39; is incompatible with i386:x86-64 output</span>
<span class="s1">ld: i386 architecture of input file `console.o&#39;</span> is incompatible with i386:x86-64 output
ld: i386 architecture of input file <span class="sb">`</span>system.o<span class="err">&#39;</span> is incompatible with i386:x86-64 output
make: *** <span class="o">[</span>Makefile:27: _LD<span class="o">]</span> Error <span class="m">1</span>
</pre></div>
<p>That type of error can encounter if <i>i386-linux-ld</i> have wrong content. In my situation file content edited to:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="ch">#!/bin/bash</span>
/full/path/to/compiled/cross/binutils/ld-new -A elf32-i386 <span class="nv">$@</span>
</pre></div>
<h3><span class="mw-headline" id="makeiso.sh">makeiso.sh</span></h3>
<p>Also a good option is create a bootable ISO file to make run it with VirtualBox or qemu:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="ch">#!/bin/sh</span>
<span class="nv">TMPISO</span><span class="o">=</span>iso
<span class="nv">TMPBOOT</span><span class="o">=</span><span class="si">${</span><span class="nv">TMPISO</span><span class="si">}</span>/boot
<span class="nv">TMPGRUB</span><span class="o">=</span><span class="si">${</span><span class="nv">TMPBOOT</span><span class="si">}</span>/grub
<span class="nv">TMPCFG</span><span class="o">=</span><span class="si">${</span><span class="nv">TMPGRUB</span><span class="si">}</span>/grub.cfg

mkdir <span class="nv">$TMPISO</span>
mkdir <span class="nv">$TMPBOOT</span>
mkdir <span class="nv">$TMPGRUB</span>
cp kernel.obj <span class="nv">$TMPBOOT</span>/kernel.obj
<span class="nb">echo</span> <span class="s1">&#39;set timeout=0&#39;</span>                  &gt; <span class="nv">$TMPCFG</span>
<span class="nb">echo</span> <span class="s1">&#39;set default =0&#39;</span>                &gt;&gt; <span class="nv">$TMPCFG</span>
<span class="nb">echo</span> <span class="s1">&#39;&#39;</span>                              &gt;&gt; <span class="nv">$TMPCFG</span>
<span class="nb">echo</span> <span class="s1">&#39;menuentry &quot;Pascal bare&quot; {&#39;</span>     &gt;&gt; <span class="nv">$TMPCFG</span>
<span class="nb">echo</span> <span class="s1">&#39;  multiboot /boot/kernel.obj&#39;</span>  &gt;&gt; <span class="nv">$TMPCFG</span>
<span class="nb">echo</span> <span class="s1">&#39;  boot&#39;</span>                        &gt;&gt; <span class="nv">$TMPCFG</span>
<span class="nb">echo</span> <span class="s1">&#39;}&#39;</span>                             &gt;&gt; <span class="nv">$TMPCFG</span>
grub-mkrescue --output<span class="o">=</span>pascal-kernel.iso iso
rm -rf <span class="nv">$TMPISO</span>
</pre></div>
<p>And simple run:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>qemu-system-i386 pascal-kernel.iso
</pre></div>
<h3><span class="mw-headline" id="Alternative_compiling:_Makefile">Alternative compiling: Makefile</span></h3>
<p>Accumulating the lines from previous part we can make a <b>Makefile</b>:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="c1"># Freepascal BareboneOS </span>
<span class="c1"># Makefile </span>
<span class="c1"># 			2019</span>
<span class="c1"># by:		furaidi &lt;<a href="cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b3dadfc6d2c7dac7dcd8f3d4ded2dadf9dd0dcde">[email&#160;protected]</a>&gt;</span>
<span class="c1"># License:	Public domain</span>

<span class="nv">NASMPARAMS</span> <span class="o">=</span> -f elf32 -o stub.o
<span class="nv">LDPARAMS</span> <span class="o">=</span> -A elf32-i386 --gc-sections -s -Tlinker.script -o kernel.obj
<span class="nv">FPCPARAMS</span> <span class="o">=</span> -Aelf -n -O2 -Op3 -Si -Sc -Sg -Xd -CX -XXs -Pi386 -Rintel -Tlinux
<span class="nv">TMPISO</span> <span class="o">=</span> iso
<span class="nv">TMPBOOT</span> <span class="o">=</span> <span class="k">$(</span>TMPISO<span class="k">)</span>/boot
<span class="nv">TMPGRUB</span> <span class="o">=</span> <span class="k">$(</span>TMPBOOT<span class="k">)</span>/grub
<span class="nv">TMPCFG</span>  <span class="o">=</span> <span class="k">$(</span>TMPGRUB<span class="k">)</span>/grub.cfg

<span class="nv">objects</span> <span class="o">=</span> stub.o kernel.o multiboot.o console.o system.o

_FPC:
	@echo <span class="s1">&#39;Compile kernel&#39;</span>
	fpc <span class="k">$(</span>FPCPARAMS<span class="k">)</span> kernel.pas

_NASM:
	@echo <span class="s1">&#39;Compile stub&#39;</span>
	nasm <span class="k">$(</span>NASMPARAMS<span class="k">)</span> stub.asm

_LD:
	@echo <span class="s1">&#39;Link them together&#39;</span>
	i386-linux-ld <span class="k">$(</span>LDPARAMS<span class="k">)</span> <span class="k">$(</span>objects<span class="k">)</span>

all: _FPC _NASM _LD

install:
	mkdir <span class="k">$(</span>TMPISO<span class="k">)</span>
	mkdir <span class="k">$(</span>TMPBOOT<span class="k">)</span>
	mkdir <span class="k">$(</span>TMPGRUB<span class="k">)</span>
	cp kernel.obj <span class="k">$(</span>TMPBOOT<span class="k">)</span>/kernel.obj
	<span class="nb">echo</span> <span class="s1">&#39;set timeout=0&#39;</span>     		 &gt; <span class="k">$(</span>TMPCFG<span class="k">)</span>
	<span class="nb">echo</span> <span class="s1">&#39;set default =0&#39;</span>		        &gt;&gt; <span class="k">$(</span>TMPCFG<span class="k">)</span>
	<span class="nb">echo</span> <span class="s1">&#39;&#39;</span>                      		&gt;&gt; <span class="k">$(</span>TMPCFG<span class="k">)</span>
	<span class="nb">echo</span> <span class="s1">&#39;menuentry &quot;Pascal Bare&quot; {&#39;</span>	&gt;&gt; <span class="k">$(</span>TMPCFG<span class="k">)</span>
	<span class="nb">echo</span> <span class="s1">&#39;  multiboot /boot/kernel.obj&#39;</span>  	&gt;&gt; <span class="k">$(</span>TMPCFG<span class="k">)</span>
	<span class="nb">echo</span> <span class="s1">&#39;  boot&#39;</span>              		&gt;&gt; <span class="k">$(</span>TMPCFG<span class="k">)</span>
	<span class="nb">echo</span> <span class="s1">&#39;}&#39;</span>                      		&gt;&gt; <span class="k">$(</span>TMPCFG<span class="k">)</span>
	grub-mkrescue --output<span class="o">=</span>pascal-kernel.iso <span class="k">$(</span>TMPISO<span class="k">)</span>
	rm -rf <span class="k">$(</span>TMPISO<span class="k">)</span>

clean:
	rm -rf <span class="k">$(</span>TMPISO<span class="k">)</span>
	rm -f *.o
	rm -f *.ppu
</pre></div>
<h2><span class="mw-headline" id="Further_Steps">Further Steps</span></h2>
<p>After when bare bones are ready and tested, you'd probably want to go with a few ways separately or combine:
</p>
<ul><li>Add terminal workaround. Pure *nix way like changing terminals, built-in commands, simple user management</li>
<li>Add graphic interface from start. That is Windows NT family way. You need to add SVGA-like drivers and/or mouse input and everything you need (or thinks so)</li></ul>
<p>Also you may want to adapt *nix libraries such as <b>binutils</b>, make build target for compiling your fpc programs for your new os like <i>i386-myos</i>. From that point you are on your own.
</p>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external free" href="https://github.com/torokernel/torokernel/wiki/Writing-Drivers-In-Freepascal">https://github.com/torokernel/torokernel/wiki/Writing-Drivers-In-Freepascal</a>, notes about how to write drivers by using the Frepascal language.</li>
<li><a rel="nofollow" class="external free" href="https://wiki.freepascal.org/System_unit">https://wiki.freepascal.org/System_unit</a>, a tutorial to write a simple system unit</li></ul>
<!-- 
NewPP limit report
Cached time: 20250212010406
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.118 seconds
Real time usage: 2.199 seconds
Preprocessor visited node count: 214/1000000
Post‐expand include size: 916/2097152 bytes
Template argument size: 192/2097152 bytes
Highest expansion depth: 19/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 60453/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    5.690      1 -total
 71.81%    4.086      3 Template:If
 70.30%    4.000      1 Template:Rating
 61.91%    3.523      3 Template:Show1
 28.66%    1.631      1 Template:BeginnersWarning
 16.89%    0.961      3 Template:Eq
  8.12%    0.462      3 Template:Eq1
  6.87%    0.391      1 Template:NoteBox
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3055-0!canonical and timestamp 20250212010404 and revision id 27556.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Pascal_Bare_Bones&amp;oldid=27556">https://wiki.osdev.org/index.php?title=Pascal_Bare_Bones&amp;oldid=27556</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Level_2_Tutorials" title="Category:Level 2 Tutorials">Level 2 Tutorials</a></li><li><a href="./Category:Bare_bones_tutorials" title="Category:Bare bones tutorials">Bare bones tutorials</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Pascal+Bare+Bones" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Pascal_Bare_Bones#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Pascal_Bare_Bones" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:Pascal_Bare_Bones" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Pascal_Bare_Bones"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Pascal_Bare_Bones&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Pascal_Bare_Bones&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Pascal_Bare_Bones" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Pascal_Bare_Bones" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Pascal_Bare_Bones&amp;oldid=27556" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Pascal_Bare_Bones&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 29 December 2022, at 22:22.</li>
	<li id="footer-info-0">This page has been accessed 6,095 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Pascal_Bare_Bones&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script data-cfasync="false" src="cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.118","walltime":"2.199","ppvisitednodes":{"value":214,"limit":1000000},"postexpandincludesize":{"value":916,"limit":2097152},"templateargumentsize":{"value":192,"limit":2097152},"expansiondepth":{"value":19,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":60453,"limit":5000000},"timingprofile":["100.00%    5.690      1 -total"," 71.81%    4.086      3 Template:If"," 70.30%    4.000      1 Template:Rating"," 61.91%    3.523      3 Template:Show1"," 28.66%    1.631      1 Template:BeginnersWarning"," 16.89%    0.961      3 Template:Eq","  8.12%    0.462      3 Template:Eq1","  6.87%    0.391      1 Template:NoteBox"]},"cachereport":{"timestamp":"20250212010406","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":2300});});</script>
</body>
</html>