<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>EDK2 - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"3db2a3752c835e94d5bbf47a","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"EDK2","wgTitle":"EDK2","wgCurRevisionId":27952,"wgRevisionId":27952,"wgArticleId":4624,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","In Progress","UEFI","Firmware"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"EDK2","wgRelevantArticleId":4624,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{
"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-EDK2 rootpage-EDK2 skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">EDK2</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="EDK2#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="EDK2#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></tbody></table>
</center>
<p>EDK2 is the official development environment for <a href="UEFI" title="UEFI">UEFI</a> applications. It is developed by the open-source Tianocore project, of which Intel, HP, and Microsoft are the primary contributors. Although it may be bigger than <a href="GNU-EFI" title="GNU-EFI">GNU-EFI</a>, it has more features, hence, some OS developers may prefer it over GNU-EFI.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="EDK2#What_is_EDK2?"><span class="tocnumber">1</span> <span class="toctext">What is EDK2?</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="EDK2#Structure_of_EDK2"><span class="tocnumber">2</span> <span class="toctext">Structure of EDK2</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="EDK2#Directory_structure"><span class="tocnumber">2.1</span> <span class="toctext">Directory structure</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="EDK2#Building_EDK2&#39;s_base"><span class="tocnumber">3</span> <span class="toctext">Building EDK2's base</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="EDK2#Building_without_edk2-platforms"><span class="tocnumber">3.1</span> <span class="toctext">Building without edk2-platforms</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="EDK2#Building_with_edk2-platforms"><span class="tocnumber">3.2</span> <span class="toctext">Building with edk2-platforms</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-7"><a href="EDK2#Building_an_EDK2_UEFI_application"><span class="tocnumber">4</span> <span class="toctext">Building an EDK2 UEFI application</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="EDK2#Building_OVMF_and_ArmVirt"><span class="tocnumber">5</span> <span class="toctext">Building OVMF and ArmVirt</span></a></li>
</ul>
</div>

<h2><span id="What_is_EDK2.3F"></span><span class="mw-headline" id="What_is_EDK2?">What is EDK2?</span></h2>
<p>EDK2 is full on implementation of the <a href="UEFI" title="UEFI">UEFI</a> spec. It contains the Open Virtual Machine Firmware (OVMF) UEFI firmware package, which is primarily targeted at <a href="QEMU" title="QEMU">QEMU</a>, and is used by many OS developers to test out their UEFI applications. It also has <a href="ARM" class="mw-redirect" title="ARM">ARM</a> and <a href="AArch64" title="AArch64">AArch64</a> firmware packages for QEMU and various boards, and <a href="RISC-V" title="RISC-V">RISC-V</a> firmware packages for various <a href="https://wiki.osdev.org/index.php?title=HiFive&amp;action=edit&amp;redlink=1" class="new" title="HiFive (page does not exist)">HiFive</a> boards. It also has tools for UEFI driver developers, but that is outside the scope of this wiki.
</p><p>Of most interest the OS developers is the UEFI library and the EDK2 build system. This article will show you the structure of EDK2, how to build firmware for QEMU and real machines, and how to build UEFI applications.
</p>
<h2><span class="mw-headline" id="Structure_of_EDK2">Structure of EDK2</span></h2>
<p>EDK2 is made up of multiple repos, all of which can be found at <a rel="nofollow" class="external text" href="https://github.com/tianocore">https://github.com/tianocore</a>. The main ones are:
</p><p>- edk2, which contains the build system, library, OVMF, and ArmVirt firmware
</p><p>- edk2-platforms, which contains firmware for various real hardware platforms, such as the SiFive U450, Raspberry Pi, and quite a few others
</p><p>- edk2-non-osi, which contains proprietary binary blobs for various platforms.
</p><p>EDK2 itself is written in C with some Python, and is licensed under the BSD 2 Clause + Patent license. The blobs are subject to their own licenses.
</p>
<h3><span class="mw-headline" id="Directory_structure">Directory structure</span></h3>
<p>EDK2 is split up into multiple subdirectories, where each one normally contains a "Package". The OvmfPkg subdirectory contains OVMF, the MdePkg subdirectory contains the UEFI library, and so on. Each one of these contains a file ending in .dsc. This file describes the package inside of the folder, and contains things such as dependencies, different components, and so on. Each component is described its own file that contains sources, application type, and so on.
TODO: Describe this in more detail
</p>
<h2><span id="Building_EDK2.27s_base"></span><span class="mw-headline" id="Building_EDK2's_base">Building EDK2's base</span></h2>
<p>No matter what you are trying to build from EDK2, these steps must be completed. First, you must decide if you want to only build stuff inside of the main EDK2 repo, or if you also want stuff from edk2-platforms. Note that these guides assume you are on a Linux system (Windows Subsystem for Linux is OK)
</p>
<h3><span class="mw-headline" id="Building_without_edk2-platforms">Building without edk2-platforms</span></h3>
<p>If you only want the UEFI library or virtual machine firmware, then this guide will suffice. Make sure you have all the dependencies installed first:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>sudo apt install build-essential git python2 uuid-dev nasm acpica-tools        <span class="c1"># Or whatever your package manager is</span>
</pre></div>
<p>First, we must clone EDK2
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>git clone https://github.com/tianocore/edk2.git
</pre></div>
<p>Note that this is the latest non-stable source. If you want the stable source then run:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>git clone https://github.com/tianocore/edk2.git -b<span class="s2">&quot;stable/202011&quot;</span>
</pre></div>
<p>or whatever is appropriate at the time you are reading this. After that, we now must clone the submodules
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="nb">cd</span> edk2
git submodule update --init
</pre></div>
<p>Then, we need to setup the environment for EDK2
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="nb">export</span> <span class="nv">EDK_TOOLS_PATH</span><span class="o">=</span><span class="nv">$PWD</span>/BaseTools
<span class="c1"># If you are compiling for ARM, then this is needed</span>
sudo apt install gcc-aarch64-linux-gnu        <span class="c1"># Or whatever your package manager is</span>
<span class="nb">export</span> <span class="nv">GCC5_AARCH64_PREFIX</span><span class="o">=</span>aarch64-linux-gnu-
<span class="c1"># This is needed on RISC-V</span>
sudo apt install gcc-riscv64-linux-gnu        <span class="c1"># Or whatever your package manager is</span>
<span class="nb">export</span> <span class="nv">GCC5_RISCV64_PREFIX</span><span class="o">=</span>riscv64-linux-gnu-
<span class="c1"># Run this no matter what you are compiling for</span>
<span class="nb">source</span> edksetup.sh
</pre></div>
<p>The last step generates various configuration files and sets up some variables. Note that edksetup.sh must be sourced, as its variables must persist.
Now we need to build the base tools
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>make -C BaseTools
</pre></div>
<p>And lastly, we must actually build EDK2 using its Python build script. 
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>build -a YOUR_ARCH -t GCC5 -p YOUR_PACKAGE
</pre></div>
<p>YOUR_ARCH can be IA32, X64, AARCH64, ARM, or RISCV64. Note that not all packages compile for all architectures. YOUR_PACKAGE must point to a package in the source tree. Further guides in this article will tell you what -p option to pass to EDK2's build script
</p>
<h3><span class="mw-headline" id="Building_with_edk2-platforms">Building with edk2-platforms</span></h3>
<p>If you actually want firmware that runs on real hardware, then you must perform the following steps instead of the one above
</p><p>First, we need to create our workspace folder
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>mkdir edk2 <span class="o">&amp;&amp;</span> <span class="nb">cd</span> edk2
<span class="nb">export</span> <span class="nv">WORKSPACE</span><span class="o">=</span><span class="nv">$PWD</span>
</pre></div>
<p>Now we need to clone the source to all repos. edk2-non-osi is optional depending on the platform you are building for, but I would recommend downloading it anyway
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>git clone https://github.com/tianocore/edk2.git -b<span class="s2">&quot;stable/202011&quot;</span>
git clone https://github.com/tianocore/edk2-platforms.git
git clone https://github.com/tianocore/edk2-non-osi.git
<span class="nb">cd</span> edk2 <span class="o">&amp;&amp;</span> git submodule update --init
<span class="nb">cd</span> ../edk2-platforms <span class="o">&amp;&amp;</span> git submodule update --init <span class="o">&amp;&amp;</span> <span class="nb">cd</span> ..
</pre></div>
<p>We need to let EDK2's build system know where these folders are. We'll also setup a couple other variables as well
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="nb">export</span> <span class="nv">EDK_TOOLS_PATH</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$PWD</span><span class="s2">/BaseTools&quot;</span>
<span class="nb">export</span> <span class="nv">PACKAGES_PATH</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$PWD</span><span class="s2">/edk2:</span><span class="nv">$PWD</span><span class="s2">/edk2-platforms:</span><span class="nv">$PWD</span><span class="s2">/edk2-non-osi&quot;</span>
</pre></div>
<p>We now must setup the environment now
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>. edk2/edksetup.sh
make -C edk2/BaseTools
</pre></div>
<p>After that, building is exactly like before. To build for a certain platform in edk2-platforms, simply find the relevant .dsc file.
</p>
<h2><span class="mw-headline" id="Building_an_EDK2_UEFI_application">Building an EDK2 UEFI application</span></h2>
<p>Once you have EDK2's base built, building UEFI applications is super easy. As OS developers, the main package will be working with is MdeModulePkg, a complete UEFI wrapper library.
</p><p>First, we must create a directory that contains our application. We'll create it inside of the main EDK2 directory, like this
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="nb">cd</span> edk2
mkdir MyEfiApp
</pre></div>
<p>Now, create a file named MyEfiApp.inf in the MyEfiApp directory. Give it the following contents
</p>
<div class="mw-highlight mw-highlight-lang-ini mw-content-ltr" dir="ltr"><pre><span></span><span class="k">[Defines]</span><span class="w"></span>
<span class="w">  </span><span class="na">INF_VERSION</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">1.25</span><span class="w"></span>
<span class="w">  </span><span class="na">BASE_NAME</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">MyEfiApp</span><span class="w"></span>
<span class="w">  </span><span class="na">FILE_GUID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s"># Get a GUID from guidgen.com</span><span class="w"></span>
<span class="w">  </span><span class="na">MODULE_TYPE</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">UEFI_APPLICATION</span><span class="w"></span>
<span class="w">  </span><span class="na">VERSION_STRING</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">1.0</span><span class="w"></span>
<span class="w">  </span><span class="na">ENTRY_POINT</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">UefiEntry</span><span class="w"></span>

<span class="k">[Sources]</span><span class="w"></span>
<span class="w">  </span><span class="na">UefiMain.c</span><span class="w"></span>

<span class="k">[Packages]</span><span class="w"></span>
<span class="w">  </span><span class="na">MdePkg/MdePkg.dec</span><span class="w"></span>

<span class="k">[LibraryClasses]</span><span class="w"></span>
<span class="w">  </span><span class="na">UefiApplicationEntryPoint</span><span class="w"></span>
<span class="w">  </span><span class="na">UefiLib</span><span class="w"></span>

<span class="k">[Guids]</span><span class="w"></span>

<span class="k">[Ppis]</span><span class="w"></span>

<span class="k">[Protocols]</span><span class="w"></span>

<span class="k">[FeaturePcd]</span><span class="w"></span>

<span class="k">[Pcd]</span><span class="w"></span>
</pre></div>
<p>Create a file called UefiMain.c in the same directory MyEfiApp.inf, and give it the following contents
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;Uefi.h&gt;</span><span class="cp"></span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;Library/UefiLib.h&gt;</span><span class="cp"></span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;Library/UefiBootServicesTableLib.h&gt;</span><span class="cp"></span>

<span class="n">EFI_STATUS</span><span class="w"> </span><span class="n">EFIAPI</span><span class="w"> </span><span class="n">UefiEntry</span><span class="p">(</span><span class="n">IN</span><span class="w"> </span><span class="n">EFI_HANDLE</span><span class="w"> </span><span class="n">imgHandle</span><span class="p">,</span><span class="w"> </span><span class="n">IN</span><span class="w"> </span><span class="n">EFI_SYSTEM_TABLE</span><span class="o">*</span><span class="w"> </span><span class="n">sysTable</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">gST</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sysTable</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">gBS</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sysTable</span><span class="o">-&gt;</span><span class="n">BootServices</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">gImageHandle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">imgHandle</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="c1">// UEFI apps automatically exit after 5 minutes. Stop that here</span>
<span class="w">    </span><span class="n">gBS</span><span class="o">-&gt;</span><span class="n">SetWatchdogTimer</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="nb">NULL</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">Print</span><span class="p">(</span><span class="sa">L</span><span class="s">&quot;Hello, world!</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="c1">// Allocate a string</span>
<span class="w">    </span><span class="n">CHAR16</span><span class="o">*</span><span class="w"> </span><span class="n">str</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">NULL</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">gBS</span><span class="o">-&gt;</span><span class="n">AllocatePool</span><span class="p">(</span><span class="n">EfiLoaderData</span><span class="p">,</span><span class="w"> </span><span class="mi">36</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">VOID</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">str</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="c1">// Copy over a string</span>
<span class="w">    </span><span class="n">CHAR16</span><span class="o">*</span><span class="w"> </span><span class="n">str2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="sa">L</span><span class="s">&quot;Allocated string</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">gBS</span><span class="o">-&gt;</span><span class="n">CopyMem</span><span class="p">((</span><span class="n">VOID</span><span class="o">*</span><span class="p">)</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">VOID</span><span class="o">*</span><span class="p">)</span><span class="n">str2</span><span class="p">,</span><span class="w"> </span><span class="mi">36</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">Print</span><span class="p">(</span><span class="n">str</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">gBS</span><span class="o">-&gt;</span><span class="n">FreePool</span><span class="p">(</span><span class="n">str</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="n">EFI_SUCCESS</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<p>Now run edksetup.sh if need be. After that, find a "Components" section MdeModulePkg/MdeModulePkg.dsc, and add this to it
</p>
<div class="mw-highlight mw-highlight-lang-ini mw-content-ltr" dir="ltr"><pre><span></span><span class="k">[Components]</span><span class="w"></span>
<span class="w">  </span><span class="na">...</span><span class="w"></span>
<span class="w">  </span><span class="na">MyEfiApp/MyEfiApp.inf</span><span class="w"></span>
</pre></div>
<p>After that, call EDK2's build system like this to build MyEfiApp
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>build -a YOUR_ARCH -t GCC5 -p MdeModulePkg/MdeModulePkg.dsc
</pre></div>
<p>Finally, in the folder Build/MdeModule/DEBUG_GCC5/YOUR_ARCH, there should be a file named MyEfiApp.efi.
</p>
<h2><span class="mw-headline" id="Building_OVMF_and_ArmVirt">Building OVMF and ArmVirt</span></h2>
<p>Building OVMF and ArmVirtPkg is easy, after setting up EDK2, run the following for OVMF:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>build -a YOUR_ARCH -t GCC5 -p OvmfPkg/OvmfPkgYOUR_ARCH.dsc
</pre></div>
<p>YOUR_ARCH can only be IA32 or X64 for OVMF. For ArmVirtPkg, run this instead:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>build -a YOUR_ARCH -t GCC5 -p ArmVirtPkg/ArmVirtQemu.dsc
</pre></div>
<p>YOUR_ARCH can only be ARM or AARCH64. After this,, the firmware will be output in for OVMF Build/OvmfYOUR_ARCH/DEBUG_GCC5/FV, or for ArmVirtPkg Build/ArmVirtQemu-YOUR_ARCH/DEBUG_GCC5/FV
</p>
<!-- 
NewPP limit report
Cached time: 20250212011106
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.088 seconds
Real time usage: 2.455 seconds
Preprocessor visited node count: 121/1000000
Post‐expand include size: 358/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 12571/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.552      1 Template:In_Progress
100.00%    0.552      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4624-0!canonical and timestamp 20250212011104 and revision id 27952.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=EDK2&amp;oldid=27952">https://wiki.osdev.org/index.php?title=EDK2&amp;oldid=27952</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:In_Progress" title="Category:In Progress">In Progress</a></li><li><a href="./Category:UEFI" title="Category:UEFI">UEFI</a></li><li><a href="./Category:Firmware" title="Category:Firmware">Firmware</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=EDK2" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="EDK2#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="EDK2" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:EDK2&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="EDK2"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=EDK2&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=EDK2&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/EDK2" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/EDK2" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=EDK2&amp;oldid=27952" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=EDK2&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 9 July 2023, at 16:06.</li>
	<li id="footer-info-0">This page has been accessed 11,113 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=EDK2&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.088","walltime":"2.455","ppvisitednodes":{"value":121,"limit":1000000},"postexpandincludesize":{"value":358,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":12571,"limit":5000000},"timingprofile":["100.00%    0.552      1 Template:In_Progress","100.00%    0.552      1 -total"]},"cachereport":{"timestamp":"20250212011106","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":2547});});</script>
</body>
</html>