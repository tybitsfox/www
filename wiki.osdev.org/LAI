<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>LAI - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"93f03f3bad21d97da3326bdc","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"LAI","wgTitle":"LAI","wgCurRevisionId":28200,"wgRevisionId":28200,"wgArticleId":4607,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","ACPI"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"LAI","wgRelevantArticleId":4607,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-LAI rootpage-LAI skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">LAI</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="LAI#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="LAI#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear: right; border:1px solid #aaaaaa; background:#eee; text-align:center; width:200px; ;"><tbody><tr><th style="background:#ffce7b; padding:0.3em; font-size:1.1em;"><a href="ACPI" title="ACPI">ACPI</a></th></tr><tr><th></th></tr><tr><td><div>
<p><a href="RSDP" title="RSDP">RSDP</a><br />
</p>
</div></td></tr><tr><th>Fixed Tables</th></tr><tr><td><div>
<p><a href="BGRT" title="BGRT">BGRT</a><br />
<a href="FADT" title="FADT">FADT</a><br />
<a href="MADT" title="MADT">MADT</a><br />
<a href="RSDT" title="RSDT">RSDT</a>/<a href="XSDT" title="XSDT">XSDT</a><br />
<a href="SRAT" title="SRAT">SRAT</a><br />
</p>
</div></td></tr><tr><th>Differentiated Tables</th></tr><tr><td><div>
<p><a href="DSDT" title="DSDT">DSDT</a><br />
<a href="SSDT" title="SSDT">SSDT</a><br />
<a href="AML" title="AML">AML</a><br />
</p>
</div></td></tr><tr><th>Tools/Libs</th></tr><tr><td><div>
<p><a href="ACPICA" title="ACPICA">ACPICA</a><br />
<a href="UACPI" title="UACPI">uACPI</a><br />
<a class="mw-selflink selflink">LAI</a><br />
</p>
</div></td></tr></tbody></table>
<p><b>LAI</b>, or Lightweight AML Interpreter, is a lightweight alternative to the bulky <a href="ACPICA" title="ACPICA">ACPICA</a>. It is much, much smaller, and requires less functions in the OS interface layer be implemented. As well, not all of the functions need to be implemented (although it is optimal to do so) because LAI simply panics when a function is needed and undefined, rather than requiring them at link time. This means that you can use the simpler functions of LAI if you aren't ready to implement an entire OS interface layer just to power off the machine.
</p><p>As an aside, LAI is permissively MIT-licensed, quite like ACPICA, which allows you to choose between GPLv2, a BSD License, and a non-OSI "Intel" License.
</p><p>Official documentation can be <a rel="nofollow" class="external text" href="https://github.com/managarm/lai/wiki/">found on GitHub</a>.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="LAI#Uses"><span class="tocnumber">1</span> <span class="toctext">Uses</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="LAI#Porting"><span class="tocnumber">2</span> <span class="toctext">Porting</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="LAI#Required"><span class="tocnumber">2.1</span> <span class="toctext">Required</span></a>
<ul>
<li class="toclevel-3 tocsection-4"><a href="LAI#laihost_log"><span class="tocnumber">2.1.1</span> <span class="toctext">laihost_log</span></a></li>
<li class="toclevel-3 tocsection-5"><a href="LAI#laihost_panic"><span class="tocnumber">2.1.2</span> <span class="toctext">laihost_panic</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="LAI#laihost_malloc"><span class="tocnumber">2.1.3</span> <span class="toctext">laihost_malloc</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="LAI#laihost_realloc"><span class="tocnumber">2.1.4</span> <span class="toctext">laihost_realloc</span></a></li>
<li class="toclevel-3 tocsection-8"><a href="LAI#laihost_free"><span class="tocnumber">2.1.5</span> <span class="toctext">laihost_free</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-9"><a href="LAI#Integral"><span class="tocnumber">2.2</span> <span class="toctext">Integral</span></a>
<ul>
<li class="toclevel-3 tocsection-10"><a href="LAI#laihost_map"><span class="tocnumber">2.2.1</span> <span class="toctext">laihost_map</span></a></li>
<li class="toclevel-3 tocsection-11"><a href="LAI#laihost_unmap"><span class="tocnumber">2.2.2</span> <span class="toctext">laihost_unmap</span></a></li>
<li class="toclevel-3 tocsection-12"><a href="LAI#laihost_scan"><span class="tocnumber">2.2.3</span> <span class="toctext">laihost_scan</span></a></li>
<li class="toclevel-3 tocsection-13"><a href="LAI#laihost_out"><span class="tocnumber">2.2.4</span> <span class="toctext">laihost_out</span></a></li>
<li class="toclevel-3 tocsection-14"><a href="LAI#laihost_in"><span class="tocnumber">2.2.5</span> <span class="toctext">laihost_in</span></a></li>
<li class="toclevel-3 tocsection-15"><a href="LAI#laihost_pci_read"><span class="tocnumber">2.2.6</span> <span class="toctext">laihost_pci_read</span></a></li>
<li class="toclevel-3 tocsection-16"><a href="LAI#laihost_pci_write"><span class="tocnumber">2.2.7</span> <span class="toctext">laihost_pci_write</span></a></li>
<li class="toclevel-3 tocsection-17"><a href="LAI#laihost_sleep"><span class="tocnumber">2.2.8</span> <span class="toctext">laihost_sleep</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-18"><a href="LAI#Optional"><span class="tocnumber">2.3</span> <span class="toctext">Optional</span></a>
<ul>
<li class="toclevel-3 tocsection-19"><a href="LAI#laihost_sync_wait"><span class="tocnumber">2.3.1</span> <span class="toctext">laihost_sync_wait</span></a></li>
<li class="toclevel-3 tocsection-20"><a href="LAI#laihost_sync_wake"><span class="tocnumber">2.3.2</span> <span class="toctext">laihost_sync_wake</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-21"><a href="LAI#Unnecessary"><span class="tocnumber">2.4</span> <span class="toctext">Unnecessary</span></a>
<ul>
<li class="toclevel-3 tocsection-22"><a href="LAI#laihost_handle_amldebug"><span class="tocnumber">2.4.1</span> <span class="toctext">laihost_handle_amldebug</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-23"><a href="LAI#Initialization"><span class="tocnumber">3</span> <span class="toctext">Initialization</span></a></li>
<li class="toclevel-1 tocsection-24"><a href="LAI#API"><span class="tocnumber">4</span> <span class="toctext">API</span></a>
<ul>
<li class="toclevel-2 tocsection-25"><a href="LAI#ACPI_Mode"><span class="tocnumber">4.1</span> <span class="toctext">ACPI Mode</span></a></li>
<li class="toclevel-2 tocsection-26"><a href="LAI#Shutdown"><span class="tocnumber">4.2</span> <span class="toctext">Shutdown</span></a></li>
<li class="toclevel-2 tocsection-27"><a href="LAI#Reboot"><span class="tocnumber">4.3</span> <span class="toctext">Reboot</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Uses">Uses</span></h2>
<p>LAI's core is just an <a href="AML" title="AML">AML</a> interpreter which currently works on most hardware with sane AML. However, it includes drivers and helpers for:
</p>
<ul><li>Embedded Controller</li>
<li>Legacy PCI IRQ pin routing</li>
<li>Power management (Setting sleep states S0-S5, reset)</li>
<li>Discovering the <a href="RSDP" title="RSDP">RSDP</a> in BIOS systems</li>
<li>Enabling ACPI mode</li></ul>
<p>LAI is under semi-active development, and the maintainers are relatively quick to reply to contributions.
</p>
<h2><span class="mw-headline" id="Porting">Porting</span></h2>
<p>In order to call into the kernel LAI has a few standardized "host" functions that the kernel needs to implement, most of these are weakly linked, and are optional. However that does not mean that only the few required host functions are needed, in practice, all of the Required and Integral functions are needed for smooth operation. You can find LAI's full host documentation <a rel="nofollow" class="external text" href="https://github.com/managarm/lai/wiki/Host-API-Documentation">here</a>
</p>
<h3><span class="mw-headline" id="Required">Required</span></h3>
<p>These functions are 100% required for the proper functioning of the interpreter, it will not link without these functions
</p>
<h4><span class="mw-headline" id="laihost_log">laihost_log</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Logs a message. level can either be LAI_DEBUG_LOG for debugging info,</span>
<span class="cm">   or LAI_WARN_LOG for warnings */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_log</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">level</span><span class="p">,</span><span class="w"> </span><span class="k">const</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="o">*</span><span class="n">msg</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_panic">laihost_panic</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Reports a fatal error, and halts. */</span><span class="w"></span>
<span class="n">__attribute__</span><span class="p">((</span><span class="k">noreturn</span><span class="p">))</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="n">laihost_panic</span><span class="p">(</span><span class="k">const</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="o">*</span><span class="n">msg</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_malloc">laihost_malloc</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="nf">laihost_malloc</span><span class="p">(</span><span class="kt">size_t</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_realloc">laihost_realloc</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="nf">laihost_realloc</span><span class="p">(</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">,</span><span class="w"> </span><span class="kt">size_t</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_free">laihost_free</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="nf">laihost_free</span><span class="p">(</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h3><span class="mw-headline" id="Integral">Integral</span></h3>
<p>These functions, while not required to link with LAI, are practically integral to its operation
</p>
<h4><span class="mw-headline" id="laihost_map">laihost_map</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Maps count bytes from the given physical address and returns</span>
<span class="cm">   a virtual address that can be used to access the memory. */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="nf">laihost_map</span><span class="p">(</span><span class="kt">size_t</span><span class="w"> </span><span class="n">address</span><span class="p">,</span><span class="w"> </span><span class="kt">size_t</span><span class="w"> </span><span class="n">count</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_unmap">laihost_unmap</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Unmaps count bytes from the given virtual address.</span>
<span class="cm">   LAI only calls this on memory that was previously mapped by laihost_map(). */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_unmap</span><span class="p">(</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="n">pointer</span><span class="p">,</span><span class="w"> </span><span class="kt">size_t</span><span class="w"> </span><span class="n">count</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_scan">laihost_scan</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Returns the (virtual) address of the n-th table that has the given signature,</span>
<span class="cm">   or NULL when no such table was found. */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="nf">laihost_scan</span><span class="p">(</span><span class="kt">char</span><span class="w"> </span><span class="o">*</span><span class="n">sig</span><span class="p">,</span><span class="w"> </span><span class="kt">size_t</span><span class="w"> </span><span class="n">index</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_out">laihost_out</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Write a byte/word/dword to the given I/O port. */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_outb</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">port</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">val</span><span class="p">);</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_outw</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">port</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">val</span><span class="p">);</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_outd</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">port</span><span class="p">,</span><span class="w"> </span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">val</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_in">laihost_in</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Read a byte/word/dword from the given I/O port. */</span><span class="w"></span>
<span class="kt">uint8_t</span><span class="w"> </span><span class="nf">laihost_inb</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">port</span><span class="p">);</span><span class="w"></span>
<span class="kt">uint16_t</span><span class="w"> </span><span class="nf">laihost_inw</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">port</span><span class="p">);</span><span class="w"></span>
<span class="kt">uint32_t</span><span class="w"> </span><span class="nf">laihost_ind</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">port</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_pci_read">laihost_pci_read</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Read a byte/word/dword from the given device&#39;s PCI configuration space</span>
<span class="cm">   at the given offset. */</span><span class="w"></span>
<span class="kt">uint8_t</span><span class="w"> </span><span class="nf">laihost_pci_readb</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">seg</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bus</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">slot</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">fun</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">offset</span><span class="p">);</span><span class="w"></span>
<span class="kt">uint16_t</span><span class="w"> </span><span class="nf">laihost_pci_readw</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">seg</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bus</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">slot</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">fun</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">offset</span><span class="p">);</span><span class="w"></span>
<span class="kt">uint32_t</span><span class="w"> </span><span class="nf">laihost_pci_readd</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">seg</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bus</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">slot</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">fun</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">offset</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_pci_write">laihost_pci_write</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Write a byte/word/dword to the given device&#39;s PCI configuration space</span>
<span class="cm">   at the given offset. */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_pci_writeb</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">seg</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bus</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">slot</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">fun</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">offset</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">val</span><span class="p">);</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_pci_writew</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">seg</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bus</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">slot</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">fun</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">offset</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">val</span><span class="p">);</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_pci_writed</span><span class="p">(</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">seg</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bus</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">slot</span><span class="p">,</span><span class="w"> </span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">fun</span><span class="p">,</span><span class="w"> </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">offset</span><span class="p">,</span><span class="w"> </span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">val</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_sleep">laihost_sleep</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Sleeps for the given amount of milliseconds. Can be stubbed on emulators */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_sleep</span><span class="p">(</span><span class="kt">uint64_t</span><span class="w"> </span><span class="n">ms</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h3><span class="mw-headline" id="Optional">Optional</span></h3>
<p>These functions are optional and LAI will not use them unless you try to use certain features. For example the sync functions will only be called when a lock is contended, this should not happen if you do not call LAI from 2 threads at once. (However it has been observed on 1 machine with buggy AML)
</p>
<h4><span class="mw-headline" id="laihost_sync_wait">laihost_sync_wait</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Blocks the current thread.</span>
<span class="cm">   The host ensures that calls to laihost_sync_wait() and laihost_sync_wake()</span>
<span class="cm">   on the same lai_sync_state are totally ordered.</span>
<span class="cm">   Before blocking, sync-&gt;val is compared against val. If these two values are non-equal, the function returns immediately.</span>
<span class="cm">   Returns a non-zero value if the timeout was exhausted and zero otherwise. */</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="nf">laihost_sync_wait</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">lai_sync_state</span><span class="w"> </span><span class="o">*</span><span class="n">sync</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">val</span><span class="p">,</span><span class="w"> </span><span class="kt">int64_t</span><span class="w"> </span><span class="n">timeout</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h4><span class="mw-headline" id="laihost_sync_wake">laihost_sync_wake</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Unblocks a blocked thread.</span>
<span class="cm">   The host ensures that calls to laihost_sync_wait() and laihost_sync_wake()</span>
<span class="cm">   on the same lai_sync_state are totally ordered. */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_sync_wake</span><span class="p">(</span><span class="k">struct</span><span class="w"> </span><span class="nc">lai_sync_state</span><span class="w"> </span><span class="o">*</span><span class="n">sync</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h3><span class="mw-headline" id="Unnecessary">Unnecessary</span></h3>
<h4><span class="mw-headline" id="laihost_handle_amldebug">laihost_handle_amldebug</span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* Reports information about a variable.</span>
<span class="cm">   This function does not need to be implemented, lai has a default implementation that will print all the info needed for debugging */</span><span class="w"></span>
<span class="kt">void</span><span class="w"> </span><span class="nf">laihost_handle_amldebug</span><span class="p">(</span><span class="n">lai_variable_t</span><span class="w"> </span><span class="o">*</span><span class="n">var</span><span class="p">);</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="Initialization">Initialization</span></h2>
<p>Before you start using LAI's functions, you need to tell it the ACPI's revision and to let it enumerate the AML namespace.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="n">lai_set_acpi_revision</span><span class="p">(</span><span class="n">rsdp</span><span class="o">-&gt;</span><span class="n">revision</span><span class="p">);</span><span class="w"></span>
<span class="n">lai_create_namespace</span><span class="p">();</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="API">API</span></h2>
<p>LAI's full API documentation can be found <a rel="nofollow" class="external text" href="https://github.com/managarm/lai/wiki">on GitHub</a>, however here are some simple examples for using some helpers
</p>
<h3><span class="mw-headline" id="ACPI_Mode">ACPI Mode</span></h3>
<p>This is how you enter full ACPI mode in LAI, do not forget to install an SCI handler and handle ACPI events.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">// From &lt;lai/helpers/sci.h&gt;</span>
<span class="n">lai_enable_acpi</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="w"> </span><span class="c1">// if you use legacy 8259 PIC</span>
<span class="n">lai_enable_acpi</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="w"> </span><span class="c1">// if you use the IOAPIC</span>
</pre></div>
<h3><span class="mw-headline" id="Shutdown">Shutdown</span></h3>
<p>This is how you shutdown in LAI:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="n">lai_enter_sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span><span class="w"> </span><span class="c1">// From &lt;lai/helpers/pm.h&gt;, requires you have enumerated the namespace and are in ACPI mode</span>
</pre></div>
<h3><span class="mw-headline" id="Reboot">Reboot</span></h3>
<p>This is how you reboot in LAI:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="n">lai_acpi_reset</span><span class="p">();</span><span class="w"> </span><span class="c1">// From &lt;lai/helpers/pm.h&gt;</span>
</pre></div>
<!-- 
NewPP limit report
Cached time: 20250211135227
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.107 seconds
Real time usage: 2.660 seconds
Preprocessor visited node count: 490/1000000
Post‐expand include size: 1982/2097152 bytes
Template argument size: 1433/2097152 bytes
Highest expansion depth: 8/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 17980/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    6.419      1 Template:ACPI
100.00%    6.419      1 -total
 86.54%    5.555      1 Template:SmallNavBox
 64.54%    4.143     20 Template:If
 42.89%    2.753     20 Template:Show1
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4607-0!canonical and timestamp 20250211135224 and revision id 28200.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=LAI&amp;oldid=28200">https://wiki.osdev.org/index.php?title=LAI&amp;oldid=28200</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:ACPI" title="Category:ACPI">ACPI</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=LAI" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="LAI#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="LAI" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:LAI" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="LAI"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LAI&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LAI&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/LAI" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/LAI" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LAI&amp;oldid=28200" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LAI&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 10 July 2023, at 17:52.</li>
	<li id="footer-info-0">This page has been accessed 2,681 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=LAI&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.107","walltime":"2.660","ppvisitednodes":{"value":490,"limit":1000000},"postexpandincludesize":{"value":1982,"limit":2097152},"templateargumentsize":{"value":1433,"limit":2097152},"expansiondepth":{"value":8,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":17980,"limit":5000000},"timingprofile":["100.00%    6.419      1 Template:ACPI","100.00%    6.419      1 -total"," 86.54%    5.555      1 Template:SmallNavBox"," 64.54%    4.143     20 Template:If"," 42.89%    2.753     20 Template:Show1"]},"cachereport":{"timestamp":"20250211135227","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":2773});});</script>
</body>
</html>