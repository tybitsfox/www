<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>GNU-EFI - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"fb4626f13b23c28a4699ab0f","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"GNU-EFI","wgTitle":"GNU-EFI","wgCurRevisionId":28634,"wgRevisionId":28634,"wgArticleId":4531,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","X86-64","UEFI"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"GNU-EFI","wgRelevantArticleId":4531,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":
false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-GNU-EFI rootpage-GNU-EFI skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">GNU-EFI</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="GNU-EFI#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="GNU-EFI#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p><a rel="nofollow" class="external text" href="https://sourceforge.net/p/gnu-efi/code/ci/master/tree/">GNU-EFI</a> is a very lightweight developing environment to create UEFI applications. <a href="EDK2" title="EDK2">EDK2</a> is a large, complex environment with its own build system. GNU-EFI on the other hand is a set of libraries and headers for compiling UEFI applications with a system's native GCC.
</p><p>This tutorial will guide you through to create a simple Hello World UEFI application using this library.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="GNU-EFI#Basic_Concept"><span class="tocnumber">1</span> <span class="toctext">Basic Concept</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="GNU-EFI#Requirements"><span class="tocnumber">2</span> <span class="toctext">Requirements</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="GNU-EFI#Libraries"><span class="tocnumber">2.1</span> <span class="toctext">Libraries</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="GNU-EFI#Headers"><span class="tocnumber">2.2</span> <span class="toctext">Headers</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="GNU-EFI#Linker_Script"><span class="tocnumber">2.3</span> <span class="toctext">Linker Script</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="GNU-EFI#Creating_an_EFI_executable"><span class="tocnumber">3</span> <span class="toctext">Creating an EFI executable</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="GNU-EFI#Compilation"><span class="tocnumber">3.1</span> <span class="toctext">Compilation</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="GNU-EFI#Linking"><span class="tocnumber">3.2</span> <span class="toctext">Linking</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="GNU-EFI#Converting_Shared_Object_to_EFI_executable"><span class="tocnumber">3.3</span> <span class="toctext">Converting Shared Object to EFI executable</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="GNU-EFI#Calling_Any_Arbitrary_UEFI_Function"><span class="tocnumber">4</span> <span class="toctext">Calling Any Arbitrary UEFI Function</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="GNU-EFI#See_also"><span class="tocnumber">5</span> <span class="toctext">See also</span></a>
<ul>
<li class="toclevel-2 tocsection-12"><a href="GNU-EFI#Articles"><span class="tocnumber">5.1</span> <span class="toctext">Articles</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="GNU-EFI#External_Links"><span class="tocnumber">6</span> <span class="toctext">External Links</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Basic_Concept">Basic Concept</span></h2>
<p>The main concept is to use your host native compiler, then convert the resulting <a href="ELF" title="ELF">ELF</a> into UEFI-compatible <a href="PE" title="PE">PE</a>. This means you can use your native toolchain, and only one additional step is required.
</p><p>Of course you can also use <a href="GCC_Cross-Compiler" title="GCC Cross-Compiler">GCC Cross-Compiler</a> generating PE directly as described in <a href="UEFI_App_Bare_Bones" title="UEFI App Bare Bones">UEFI App Bare Bones</a>. Whichever you prefer.
</p>
<h2><span class="mw-headline" id="Requirements">Requirements</span></h2>
<p>Download and compile <a rel="nofollow" class="external text" href="https://sourceforge.net/projects/gnu-efi/files/">GNU-EFI</a>.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>$ git clone https://git.code.sf.net/p/gnu-efi/code gnu-efi
$ <span class="nb">cd</span> gnu-efi
$ make
</pre></div>
<h3><span class="mw-headline" id="Libraries">Libraries</span></h3>
<p>This "make" should create the following three object files:
</p>
<ul><li><b>crt0-efi-x86_64.o</b>: A CRT0 (C runtime initialization code) that will call the "efi_main" function.</li>
<li><b>libgnuefi.a</b>: A library containing a single function (<i>_relocate</i>) that is used by the CRT0.</li>
<li><b>libefi.a</b>: A library containing convenience functions like CRC computation, string length calculation, and easy text printing.</li></ul>
<p>Strictly speaking only the first two are needed, but it worth having the third.
</p>
<h3><span class="mw-headline" id="Headers">Headers</span></h3>
<p>You'll need some header files. You can use the ones shipped with your Linux distribution (/usr/include/efi), this is the preferable as they are updated to the latest. Then you can use the ones in the <a href="EDK2" title="EDK2">EDK2</a> package, or the minimal headers in <a rel="nofollow" class="external text" href="https://sourceforge.net/p/gnu-efi/code/ci/master/tree/inc/">GNU-EFI inc</a>. This latter <b>inc</b> directory is installed with the git clone command, however it is just a minimal set of headers, only the essentials and not necessarily up-to-date.
</p>
<h3><span class="mw-headline" id="Linker_Script">Linker Script</span></h3>
<p>This is pretty simple, we'll just use <a rel="nofollow" class="external text" href="https://sourceforge.net/p/gnu-efi/code/ci/master/tree/gnuefi/elf_x86_64_efi.lds">elf_x86_64_efi.lds</a> that GNU-EFI provides.
</p>
<h2><span class="mw-headline" id="Creating_an_EFI_executable">Creating an EFI executable</span></h2>
<p>The traditional "Hello, world" UEFI program is shown below, which we will compile using GNU-EFI in this tutorial.
</p><p><b>main.c</b>:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;efi.h&gt;</span><span class="cp"></span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;efilib.h&gt;</span><span class="cp"></span>

<span class="n">EFI_STATUS</span><span class="w"></span>
<span class="n">EFIAPI</span><span class="w"></span>
<span class="n">efi_main</span><span class="w"> </span><span class="p">(</span><span class="n">EFI_HANDLE</span><span class="w"> </span><span class="n">ImageHandle</span><span class="p">,</span><span class="w"> </span><span class="n">EFI_SYSTEM_TABLE</span><span class="w"> </span><span class="o">*</span><span class="n">SystemTable</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="n">InitializeLib</span><span class="p">(</span><span class="n">ImageHandle</span><span class="p">,</span><span class="w"> </span><span class="n">SystemTable</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="n">Print</span><span class="p">(</span><span class="sa">L</span><span class="s">&quot;Hello, world!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="k">return</span><span class="w"> </span><span class="n">EFI_SUCCESS</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h3><span class="mw-headline" id="Compilation">Compilation</span></h3>
<p>To compile the main.c above, you'll have to use some environment specific command line options. These are:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>$ gcc -Ignu-efi-dir/inc -fpic -ffreestanding -fno-stack-protector -fno-stack-check -fshort-wchar -mno-red-zone -maccumulate-outgoing-args -c main.c -o main.o
</pre></div>
<ul><li><b>-I</b>: set this to the efi headers directory (see above)</li>
<li><b>-fpic</b>: the UEFI PE executables must be relocatable</li>
<li><b>-ffreestanding</b>: there's no hosted gcc environment, we don't have libc</li>
<li><b>-fno-stack-protector -fno-stack-check -mno-red-zone</b>: stack must be strictly used, no additional canaries or pre-allocated local variable space allowed</li>
<li><b>-fshort-wchar</b>: it is very important that UEFI uses 16 bit characters (wide-characters or wchar_t, defined as CHAR16 in efi headers)</li>
<li><b>-maccumulate-outgoing-args</b>: function calls must include the number of arguments passed to the functions</li></ul>
<p>Replace 'gnu-efi-dir' with your repository's path.
</p>
<h3><span class="mw-headline" id="Linking">Linking</span></h3>
<p>It is very simple, but there is a trick to it. To generate properly relocatable code, we should link it as a shared library.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>$ ld -shared -Bsymbolic -Lgnu-efi-dir/x86_64/lib -Lgnu-efi-dir/x86_64/gnuefi -Tgnu-efi-dir/gnuefi/elf_x86_64_efi.lds gnu-efi-dir/x86_64/gnuefi/crt0-efi-x86_64.o main.o -o main.so -lgnuefi -lefi
</pre></div>
<ul><li><b>-shared -Bsymbolic</b>: tell GNU ld to create so</li>
<li><b>-L</b> and <b>-T</b>: where to find the static GNU-EFI libraries (.a) and the linker script</li>
<li><b>.o</b>: it is important to specify crt0 as the first. Should work as the last too, but I had problems</li>
<li><b>-l</b>: linking with gnuefi is a must, as that contains the relocation code. Linking with efi is optional, but recommended</li></ul>
<p>Replace 'gnu-efi-dir' with your repository's path.
</p>
<h3><span class="mw-headline" id="Converting_Shared_Object_to_EFI_executable">Converting Shared Object to EFI executable</span></h3>
<p>The last step is to convert our ELF shared object into an UEFI PE.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>$ objcopy -j .text -j .sdata -j .data -j .rodata -j .dynamic -j .dynsym  -j .rel -j .rela -j .rel.* -j .rela.* -j .reloc --target efi-app-x86_64 --subsystem<span class="o">=</span><span class="m">10</span> main.so main.efi
</pre></div>
<ul><li><b>-j</b>: these specify which sections to keep during convertion</li>
<li><b>--target efi-app-x86_64</b>: this tells objcopy to generate a PE32+ format, with architecture code 0x8664</li>
<li><b>--subsystem=10</b>: this is the most important. It sets the file's type to UEFI executable in the PE header.</li></ul>
<p>Now you can copy <b>main.efi</b> to your <a href="EFI_System_Partition" title="EFI System Partition">EFI System Partition</a>, and after boot run it from the EFI Shell. Or you can rename it to <b>EFI\BOOT\BOOTX64.EFI</b> and it should be executed automatically on boot.
</p>
<h2><span class="mw-headline" id="Calling_Any_Arbitrary_UEFI_Function">Calling Any Arbitrary UEFI Function</span></h2>
<p>The <b>libefi.a</b> has wrappers for the most common UEFI functions, but you might need to call something not covered. For completeness, it provides:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="n">uefi_call_wrapper</span><span class="p">(</span><span class="n">func</span><span class="p">,</span><span class="w"> </span><span class="n">numarg</span><span class="p">,</span><span class="w"> </span><span class="p">...);</span><span class="w"></span>
</pre></div>
<p>For example, the "Print" function used in our main.c and which accepts printf compatible arguments, is under the hood nothing else than a call to:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="n">uefi_call_wrapper</span><span class="p">(</span><span class="n">ST</span><span class="o">-&gt;</span><span class="n">ConOut</span><span class="o">-&gt;</span><span class="n">OutputString</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="n">ST</span><span class="o">-&gt;</span><span class="n">ConOut</span><span class="p">,</span><span class="w"> </span><span class="n">buffer</span><span class="p">);</span><span class="w"></span>
</pre></div>
<p>The biggest advantage of 'uefi_call_wrapper' is that doesn't matter what ABI your gcc is using, it will always correctly translate that into UEFI ABI. If, and only if you've used the correct gcc options, then you should be able to make the same call as:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="n">ST</span><span class="o">-&gt;</span><span class="n">ConOut</span><span class="o">-&gt;</span><span class="n">OutputString</span><span class="p">(</span><span class="n">ST</span><span class="o">-&gt;</span><span class="n">ConOut</span><span class="p">,</span><span class="w"> </span><span class="n">buffer</span><span class="p">);</span><span class="w"></span>
</pre></div>
<p>It worth noting that GNU-EFI uses the <i>host</i> compiler, therefore you might need additional gcc options to get this working. Using 'uefi_call_wrapper' on the other hand will always work.
</p>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="UEFI" title="UEFI">UEFI</a></li>
<li><a href="UEFI_Bare_Bones" class="mw-redirect" title="UEFI Bare Bones">UEFI Bare Bones</a></li>
<li><a href="EFI_System_Partition" title="EFI System Partition">EFI System Partition</a></li></ul>
<h2><span class="mw-headline" id="External_Links">External Links</span></h2>
<ul><li><a rel="nofollow" class="external text" href="http://www.uefi.org/specifications">UEFI specifications et al.</a></li>
<li><a rel="nofollow" class="external text" href="https://sourceforge.net/p/gnu-efi/code/ci/master/tree/">GNU-EFI source</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211124053
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.014 seconds
Real time usage: 0.014 seconds
Preprocessor visited node count: 89/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 4558/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4531-0!canonical and timestamp 20250211124053 and revision id 28634.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=GNU-EFI&amp;oldid=28634">https://wiki.osdev.org/index.php?title=GNU-EFI&amp;oldid=28634</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:X86-64" title="Category:X86-64">X86-64</a></li><li><a href="./Category:UEFI" title="Category:UEFI">UEFI</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=GNU-EFI" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="GNU-EFI#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="GNU-EFI" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:GNU-EFI&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="GNU-EFI"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNU-EFI&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNU-EFI&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/GNU-EFI" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="./Special:RecentChangesLinked/GNU-EFI" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNU-EFI&amp;oldid=28634" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNU-EFI&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 18 February 2024, at 18:38.</li>
	<li id="footer-info-0">This page has been accessed 10,093 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=GNU-EFI&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.014","walltime":"0.014","ppvisitednodes":{"value":89,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":4558,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211124053","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":111});});</script>
</body>
</html>