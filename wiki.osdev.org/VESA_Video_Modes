<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>VESA Video Modes - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"e60c6187fd036040246b5dd8","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"VESA_Video_Modes","wgTitle":"VESA Video Modes","wgCurRevisionId":27835,"wgRevisionId":27835,"wgArticleId":1904,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","Video","FAQ"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"VESA_Video_Modes","wgRelevantArticleId":1904,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-VESA_Video_Modes rootpage-VESA_Video_Modes skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">VESA Video Modes</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="VESA_Video_Modes#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="VESA_Video_Modes#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>Under legacy BIOS (and CSM-capable UEFI systems in legacy BIOS mode) you can access the video card functions using the standardized VESA/VBE functions.
</p><p>In UEFI mode, instead, one uses the <a href="GOP" title="GOP">GOP</a> (Graphics Output Protocol) to access the video card in a standardized way.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="VESA_Video_Modes#VESA_Functions"><span class="tocnumber">1</span> <span class="toctext">VESA Functions</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="VESA_Video_Modes#Will_it_work_with_Bochs?"><span class="tocnumber">2</span> <span class="toctext">Will it work with Bochs?</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="VESA_Video_Modes#How_to_pick_the_mode_I_wish?"><span class="tocnumber">3</span> <span class="toctext">How to pick the mode I wish?</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="VESA_Video_Modes#Common_Mistakes"><span class="tocnumber">4</span> <span class="toctext">Common Mistakes</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="VESA_Video_Modes#VESA_Defined_Mode_Numbers"><span class="tocnumber">4.1</span> <span class="toctext">VESA Defined Mode Numbers</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="VESA_Video_Modes#Use_&quot;Bytes_Between_Lines&quot;"><span class="tocnumber">4.2</span> <span class="toctext">Use "Bytes Between Lines"</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="VESA_Video_Modes#Don&#39;t_Assume_Pixel_Formats"><span class="tocnumber">4.3</span> <span class="toctext">Don't Assume Pixel Formats</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="VESA_Video_Modes#Don&#39;t_Assume_Unused_Bits_Are_Unused"><span class="tocnumber">4.4</span> <span class="toctext">Don't Assume Unused Bits Are Unused</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="VESA_Video_Modes#Don&#39;t_Assume_VGA_Compatibility"><span class="tocnumber">4.5</span> <span class="toctext">Don't Assume VGA Compatibility</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="VESA_Video_Modes#Don&#39;t_Assume_The_Monitor_Supports_A_Video_Mode"><span class="tocnumber">4.6</span> <span class="toctext">Don't Assume The Monitor Supports A Video Mode</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="VESA_Video_Modes#Don&#39;t_Read_From_Video_Memory"><span class="tocnumber">4.7</span> <span class="toctext">Don't Read From Video Memory</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="VESA_Video_Modes#See_Also"><span class="tocnumber">5</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="VESA_Video_Modes#Articles"><span class="tocnumber">5.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="VESA_Video_Modes#Threads"><span class="tocnumber">5.2</span> <span class="toctext">Threads</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="VESA_Video_Modes#External_Links"><span class="tocnumber">5.3</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="VESA_Functions">VESA Functions</span></h2>
<p>You'll want to look in the VESA VBE docs for these functions:
All VESA functions return 0x4F in AL if they are supported and use AH as a status flag, with 0x00 being success. This means that you should check that AX is 0x004F after each VESA call to see if it succeeded.
</p>
<dl><dt>INT 0x10, AX=0x4F00</dt>
<dd>Get Controller Info.  This is the one that returns the array of all supported video modes.</dd></dl>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="k">struct</span><span class="w"> </span><span class="nc">VbeInfoBlock</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">   </span><span class="kt">char</span><span class="w">     </span><span class="n">VbeSignature</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="w">         </span><span class="c1">// == &quot;VESA&quot;</span>
<span class="w">   </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">VbeVersion</span><span class="p">;</span><span class="w">              </span><span class="c1">// == 0x0300 for VBE 3.0</span>
<span class="w">   </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">OemStringPtr</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="w">         </span><span class="c1">// isa vbeFarPtr</span>
<span class="w">   </span><span class="kt">uint8_t</span><span class="w">  </span><span class="n">Capabilities</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="w"></span>
<span class="w">   </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">VideoModePtr</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="w">         </span><span class="c1">// isa vbeFarPtr</span>
<span class="w">   </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">TotalMemory</span><span class="p">;</span><span class="w">             </span><span class="c1">// as # of 64KB blocks</span>
<span class="w">   </span><span class="kt">uint8_t</span><span class="w">  </span><span class="n">Reserved</span><span class="p">[</span><span class="mi">492</span><span class="p">];</span><span class="w"></span>
<span class="p">}</span><span class="w"> </span><span class="n">__attribute__</span><span class="p">((</span><span class="n">packed</span><span class="p">));</span><span class="w"></span>

<span class="n">VbeInfoBlock</span><span class="w"> </span><span class="o">*</span><span class="n">vib</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dos_alloc</span><span class="p">(</span><span class="mi">512</span><span class="p">);</span><span class="w"></span>
<span class="n">v86_bios</span><span class="p">(</span><span class="mh">0x10</span><span class="p">,</span><span class="w"> </span><span class="p">{</span><span class="n">ax</span><span class="o">:</span><span class="mh">0x4f00</span><span class="p">,</span><span class="w"> </span><span class="n">es</span><span class="o">:</span><span class="n">SEG</span><span class="p">(</span><span class="n">vib</span><span class="p">),</span><span class="w"> </span><span class="n">di</span><span class="o">:</span><span class="n">OFF</span><span class="p">(</span><span class="n">vib</span><span class="p">)},</span><span class="w"> </span><span class="o">&amp;</span><span class="n">out</span><span class="p">);</span><span class="w"></span>
<span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">out</span><span class="p">.</span><span class="n">ax</span><span class="o">!=</span><span class="mh">0x004f</span><span class="p">)</span><span class="w"> </span><span class="n">die</span><span class="p">(</span><span class="s">&quot;Something wrong with VBE get info&quot;</span><span class="p">);</span><span class="w"></span>
</pre></div>
<p>In assembly(nasm):
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nf">struc</span><span class="w"> </span><span class="no">VesaInfoBlock</span><span class="w">				</span><span class="c1">;	VesaInfoBlock_size = 512 bytes</span>
<span class="w">	</span><span class="na">.Signature</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">4</span><span class="w">		</span><span class="c1">;	must be &#39;VESA&#39;</span>
<span class="w">	</span><span class="na">.Version</span><span class="w">		</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.OEMNamePtr</span><span class="w">		</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.Capabilities</span><span class="w">		</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>

<span class="w">	</span><span class="na">.VideoModesOffset</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.VideoModesSegment</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>

<span class="w">	</span><span class="na">.CountOf64KBlocks</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.OEMSoftwareRevision</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.OEMVendorNamePtr</span><span class="w">	</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.OEMProductNamePtr</span><span class="w">	</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.OEMProductRevisionPtr</span><span class="w">	</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.Reserved</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">222</span><span class="w"></span>
<span class="w">	</span><span class="na">.OEMData</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">256</span><span class="w"></span>
<span class="nf">endstruc</span><span class="w"></span>

<span class="nl">Main:</span><span class="w"></span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="no">ds</span><span class="w"></span>
<span class="w">	</span><span class="nf">pop</span><span class="w"> </span><span class="no">es</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">di</span><span class="p">,</span><span class="w"> </span><span class="no">VesaInfoBlockBuffer</span><span class="w"></span>
<span class="w">	</span><span class="nf">call</span><span class="w"> </span><span class="no">get_vesa_info</span><span class="w"></span>
<span class="w">	</span><span class="nf">jmp</span><span class="w"> </span><span class="no">$</span><span class="w"></span>

<span class="c1">;	in:</span>
<span class="c1">;		es:di - 512-byte buffer</span>
<span class="c1">;	out:</span>
<span class="c1">;		cf - set on error</span>
<span class="nl">get_vesa_info:</span><span class="w"></span>
<span class="w">	</span><span class="nf">clc</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x4f00</span><span class="w"></span>
<span class="w">	</span><span class="nf">int</span><span class="w"> </span><span class="mi">0x10</span><span class="w"></span>
<span class="w">	</span><span class="nf">cmp</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x004f</span><span class="w"></span>
<span class="w">	</span><span class="nf">jne</span><span class="w"> </span><span class="no">.failed</span><span class="w"></span>
<span class="w">	</span><span class="nf">ret</span><span class="w"></span>
<span class="w">	</span><span class="nl">.failed:</span><span class="w"></span>
<span class="w">		</span><span class="nf">stc</span><span class="w"></span>
<span class="w">		</span><span class="nf">ret</span><span class="w"></span>

<span class="nf">ALIGN</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="w"></span>

<span class="w">	</span><span class="nl">VesaInfoBlockBuffer:</span><span class="w"> </span><span class="nf">istruc</span><span class="w"> </span><span class="no">VesaInfoBlock</span><span class="w"></span>
<span class="w">		</span><span class="nf">at</span><span class="w"> </span><span class="no">VesaInfoBlock.Signature</span><span class="p">,</span><span class="w">				</span><span class="no">db</span><span class="w"> </span><span class="err">&quot;</span><span class="no">VESA</span><span class="err">&quot;</span><span class="w"></span>
<span class="w">		</span><span class="nf">times</span><span class="w"> </span><span class="mi">508</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="nf">iend</span><span class="w"></span>
</pre></div>
<p><b>INT 0x10, AX=0x4F01, CX=mode, ES:DI=256 byte buffer</b>
</p>
<dl><dd>Get Mode Info.  Call this for each member of the mode array to find out the details of that mode. The 256 byte buffer will be filled by the mode info block.</dd></dl>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="k">struct</span><span class="w"> </span><span class="nc">vbe_mode_info_structure</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">attributes</span><span class="p">;</span><span class="w">		</span><span class="c1">// deprecated, only bit 7 should be of interest to you, and it indicates the mode supports a linear frame buffer.</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">window_a</span><span class="p">;</span><span class="w">			</span><span class="c1">// deprecated</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">window_b</span><span class="p">;</span><span class="w">			</span><span class="c1">// deprecated</span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">granularity</span><span class="p">;</span><span class="w">		</span><span class="c1">// deprecated; used while calculating bank numbers</span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">window_size</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">segment_a</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">segment_b</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">win_func_ptr</span><span class="p">;</span><span class="w">		</span><span class="c1">// deprecated; used to switch banks from protected mode without returning to real mode</span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">pitch</span><span class="p">;</span><span class="w">			</span><span class="c1">// number of bytes per horizontal line</span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">width</span><span class="p">;</span><span class="w">			</span><span class="c1">// width in pixels</span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">height</span><span class="p">;</span><span class="w">			</span><span class="c1">// height in pixels</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">w_char</span><span class="p">;</span><span class="w">			</span><span class="c1">// unused...</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">y_char</span><span class="p">;</span><span class="w">			</span><span class="c1">// ...</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">planes</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bpp</span><span class="p">;</span><span class="w">			</span><span class="c1">// bits per pixel in this mode</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">banks</span><span class="p">;</span><span class="w">			</span><span class="c1">// deprecated; total number of banks in this mode</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">memory_model</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">bank_size</span><span class="p">;</span><span class="w">		</span><span class="c1">// deprecated; size of a bank, almost always 64 KB but may be 16 KB...</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">image_pages</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">reserved0</span><span class="p">;</span><span class="w"></span>

<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">red_mask</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">red_position</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">green_mask</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">green_position</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">blue_mask</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">blue_position</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">reserved_mask</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">reserved_position</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">direct_color_attributes</span><span class="p">;</span><span class="w"></span>

<span class="w">	</span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">framebuffer</span><span class="p">;</span><span class="w">		</span><span class="c1">// physical address of the linear frame buffer; write here to draw to the screen</span>
<span class="w">	</span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">off_screen_mem_off</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">off_screen_mem_size</span><span class="p">;</span><span class="w">	</span><span class="c1">// size of memory in the framebuffer but not being displayed on the screen</span>
<span class="w">	</span><span class="kt">uint8_t</span><span class="w"> </span><span class="n">reserved1</span><span class="p">[</span><span class="mi">206</span><span class="p">];</span><span class="w"></span>
<span class="p">}</span><span class="w"> </span><span class="n">__attribute__</span><span class="w"> </span><span class="p">((</span><span class="n">packed</span><span class="p">));</span><span class="w"></span>
</pre></div>
<p>In assembly(nasm):
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nf">struc</span><span class="w"> </span><span class="no">VesaModeInfoBlock</span><span class="w">				</span><span class="c1">;	VesaModeInfoBlock_size = 256 bytes</span>
<span class="w">	</span><span class="na">.ModeAttributes</span><span class="w">		</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.FirstWindowAttributes</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.SecondWindowAttributes</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.WindowGranularity</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in KB</span>
<span class="w">	</span><span class="na">.WindowSize</span><span class="w">		</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in KB</span>
<span class="w">	</span><span class="na">.FirstWindowSegment</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	0 if not supported</span>
<span class="w">	</span><span class="na">.SecondWindowSegment</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	0 if not supported</span>
<span class="w">	</span><span class="na">.WindowFunctionPtr</span><span class="w">	</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.BytesPerScanLine</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>

<span class="w">	</span><span class="c1">;	Added in Revision 1.2</span>
<span class="w">	</span><span class="na">.Width</span><span class="w">			</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in pixels(graphics)/columns(text)</span>
<span class="w">	</span><span class="na">.Height</span><span class="w">			</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in pixels(graphics)/columns(text)</span>
<span class="w">	</span><span class="na">.CharWidth</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in pixels</span>
<span class="w">	</span><span class="na">.CharHeight</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in pixels</span>
<span class="w">	</span><span class="na">.PlanesCount</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.BitsPerPixel</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.BanksCount</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.MemoryModel</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	http://www.ctyme.com/intr/rb-0274.htm#Table82</span>
<span class="w">	</span><span class="na">.BankSize</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in KB</span>
<span class="w">	</span><span class="na">.ImagePagesCount</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	count - 1</span>
<span class="w">	</span><span class="na">.Reserved1</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	equals 0 in Revision 1.0-2.0, 1 in 3.0</span>

<span class="w">	</span><span class="na">.RedMaskSize</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.RedFieldPosition</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.GreenMaskSize</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.GreenFieldPosition</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.BlueMaskSize</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.BlueFieldPosition</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.ReservedMaskSize</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.ReservedMaskPosition</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.DirectColorModeInfo</span><span class="w">	</span><span class="no">resb</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>

<span class="w">	</span><span class="c1">;	Added in Revision 2.0</span>
<span class="w">	</span><span class="na">.LFBAddress</span><span class="w">		</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.OffscreenMemoryOffset</span><span class="w">	</span><span class="no">resd</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="na">.OffscreenMemorySize</span><span class="w">	</span><span class="no">resw</span><span class="w"> </span><span class="mi">1</span><span class="w">		</span><span class="c1">;	in KB</span>
<span class="w">	</span><span class="na">.Reserved2</span><span class="w">		</span><span class="no">resb</span><span class="w"> </span><span class="mi">206</span><span class="w">	</span><span class="c1">;	available in Revision 3.0, but useless for now</span>
<span class="nf">endstruc</span><span class="w"></span>

<span class="nl">Main:</span><span class="w"></span>
<span class="w">	</span><span class="c1">; after getting VesaInfoBlock:</span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="no">word</span><span class="w"> </span><span class="p">[</span><span class="no">VesaInfoBlockBuffer</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">VesaInfoBlock.VideoModesSegment</span><span class="p">]</span><span class="w"></span>
<span class="w">	</span><span class="nf">pop</span><span class="w"> </span><span class="no">es</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">di</span><span class="p">,</span><span class="w"> </span><span class="no">VesaModeInfoBlockBuffer</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">bx</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">VesaInfoBlockBuffer</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">VesaInfoBlock.VideoModesOffset</span><span class="p">]</span><span class="w">	</span><span class="c1">;	get video modes list address</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">cx</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">bx</span><span class="p">]</span><span class="w">							</span><span class="c1">;	get first video mode number</span>
<span class="w">	</span><span class="nf">cmp</span><span class="w"> </span><span class="no">cx</span><span class="p">,</span><span class="w"> </span><span class="mi">0xffff</span><span class="w">							</span><span class="c1">;	vesa modes list empty</span>
<span class="w">	</span><span class="nf">je</span><span class="w"> </span><span class="no">.NoModes</span><span class="w"></span>
<span class="w">	</span><span class="nf">call</span><span class="w"> </span><span class="no">get_vesa_mode_info</span><span class="w"></span>
<span class="nl">.NoModes:</span><span class="w"></span>
<span class="w">	</span><span class="nf">jmp</span><span class="w"> </span><span class="no">$</span><span class="w"></span>


<span class="c1">;	in:</span>
<span class="c1">;		cx - VESA mode number</span>
<span class="c1">;		es:di - 256-byte buffer</span>
<span class="c1">;	out:</span>
<span class="c1">;		cf - set on error</span>
<span class="nl">get_vesa_mode_info:</span><span class="w"></span>
<span class="w">	</span><span class="nf">clc</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x4f01</span><span class="w"></span>
<span class="w">	</span><span class="nf">int</span><span class="w"> </span><span class="mi">0x10</span><span class="w"></span>
<span class="w">	</span><span class="nf">cmp</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x004f</span><span class="w"></span>
<span class="w">	</span><span class="nf">jne</span><span class="w"> </span><span class="no">.failed</span><span class="w"></span>
<span class="w">	</span><span class="nf">ret</span><span class="w"></span>
<span class="w">	</span><span class="nl">.failed:</span><span class="w"></span>
<span class="w">		</span><span class="nf">stc</span><span class="w"></span>
<span class="w">		</span><span class="nf">ret</span><span class="w"></span>

<span class="nf">ALIGN</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="w"></span>

<span class="nl">VesaModeInfoBlockBuffer:</span><span class="w">	</span><span class="nf">istruc</span><span class="w"> </span><span class="no">VesaModeInfoBlock</span><span class="w"></span>
<span class="w">		</span><span class="nf">times</span><span class="w"> </span><span class="no">VesaModeInfoBlock_size</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="nf">iend</span><span class="w"></span>
</pre></div>
<p><b>INT 0x10, AX=0x4F02, BX=mode, ES:DI=CRTCInfoBlock</b>
</p>
<dl><dd>Set Video Mode.  Call this with the mode number you decide to use.  If you choose a mode that makes use of a linear framebuffer, you should OR the mode number with 0x4000. This sets the "Use LFB" bit in the mode number. Set the bit 11 of BX to instruct the BIOS to use the passed CRTCInfoBlock structure, see the specification for more information.</dd></dl>
<dl><dd>BIOSs can switch to protected mode to implement this, and might reset the GDT. This is observable on QEMU 2.2.x.</dd></dl>
<h2><span id="Will_it_work_with_Bochs.3F"></span><span class="mw-headline" id="Will_it_work_with_Bochs?">Will it work with Bochs?</span></h2>
<p>For VBE to work in Bochs you need the "VGABIOS-lgpl" BIOS and have a version of Bochs that was compiled with the <tt>--enable-vbe</tt> option... See <a href="http://forum.osdev.org/viewtopic.php?t=9655" class="extiw" title="topic:9655">Vesa Information in Bochs</a> thread for more info. Also read about <a href="Bochs_Graphics_Adaptor" class="mw-redirect" title="Bochs Graphics Adaptor">Bochs Graphics Adaptor</a>.
</p>
<h2><span id="How_to_pick_the_mode_I_wish.3F"></span><span class="mw-headline" id="How_to_pick_the_mode_I_wish?">How to pick the mode I wish?</span></h2>
<p>VESA stopped assigning codes for video modes long ago -- instead they standardized a much better solution: you can query the video card for what modes it supports, and query it about the attributes of each mode. In your OS, you can  have a function that you call with a desired width, height, and depth, and it returns the video mode number for it (or the closest match). Then, just set that mode
</p><p>Here's a sample code, assuming you have a VirtualMonitor already ... Basically, you will scan the 'modes list' referenced by the VbeInfoBlock.videomodes[] and then call 'get mode info' for each mode. You can then compare width, height and colordepth of each mode with the desired one.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="kt">uint16_t</span><span class="w"> </span><span class="nf">findMode</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">d</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="k">struct</span><span class="w"> </span><span class="nc">VbeInfoBlock</span><span class="w"> </span><span class="o">*</span><span class="n">ctrl</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">VbeInfoBlock</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="mh">0x2000</span><span class="p">;</span><span class="w"></span>
<span class="w">  </span><span class="k">struct</span><span class="w"> </span><span class="nc">ModeInfoBlock</span><span class="w"> </span><span class="o">*</span><span class="n">inf</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">ModeInfoBlock</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="mh">0x3000</span><span class="p">;</span><span class="w"></span>
<span class="w">  </span><span class="kt">uint16_t</span><span class="w"> </span><span class="o">*</span><span class="n">modes</span><span class="p">;</span><span class="w"></span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">;</span><span class="w"></span>
<span class="w">  </span><span class="kt">uint16_t</span><span class="w"> </span><span class="n">best</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mh">0x13</span><span class="p">;</span><span class="w"></span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">pixdiff</span><span class="p">,</span><span class="w"> </span><span class="n">bestpixdiff</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">DIFF</span><span class="p">(</span><span class="mi">320</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="mi">200</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">y</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="kt">int</span><span class="w"> </span><span class="n">depthdiff</span><span class="p">,</span><span class="w"> </span><span class="n">bestdepthdiff</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">8</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="o">?</span><span class="w"> </span><span class="mi">8</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="o">:</span><span class="w"> </span><span class="p">(</span><span class="n">d</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">8</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="mi">2</span><span class="p">;</span><span class="w"></span>

<span class="w">  </span><span class="n">strncpy</span><span class="p">(</span><span class="n">ctrl</span><span class="o">-&gt;</span><span class="n">VbeSignature</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;VBE2&quot;</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="n">intV86</span><span class="p">(</span><span class="mh">0x10</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;ax,es:di&quot;</span><span class="p">,</span><span class="w"> </span><span class="mh">0x4F00</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="n">ctrl</span><span class="p">);</span><span class="w"> </span><span class="c1">// Get Controller Info</span>
<span class="w">  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">(</span><span class="kt">uint16_t</span><span class="p">)</span><span class="n">v86</span><span class="p">.</span><span class="n">tss</span><span class="p">.</span><span class="n">eax</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mh">0x004F</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="n">best</span><span class="p">;</span><span class="w"></span>

<span class="w">  </span><span class="n">modes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">uint16_t</span><span class="o">*</span><span class="p">)</span><span class="n">REALPTR</span><span class="p">(</span><span class="n">ctrl</span><span class="o">-&gt;</span><span class="n">VideoModePtr</span><span class="p">);</span><span class="w"></span>
<span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="n">modes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mh">0xFFFF</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="o">++</span><span class="n">i</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">      </span><span class="n">intV86</span><span class="p">(</span><span class="mh">0x10</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;ax,cx,es:di&quot;</span><span class="p">,</span><span class="w"> </span><span class="mh">0x4F01</span><span class="p">,</span><span class="w"> </span><span class="n">modes</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="n">inf</span><span class="p">);</span><span class="w"> </span><span class="c1">// Get Mode Info</span>

<span class="w">      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">(</span><span class="kt">uint16_t</span><span class="p">)</span><span class="n">v86</span><span class="p">.</span><span class="n">tss</span><span class="p">.</span><span class="n">eax</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mh">0x004F</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">continue</span><span class="p">;</span><span class="w"></span>

<span class="w">      </span><span class="c1">// Check if this is a graphics mode with linear frame buffer support</span>
<span class="w">      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">(</span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">attributes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="mh">0x90</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mh">0x90</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">continue</span><span class="p">;</span><span class="w"></span>

<span class="w">      </span><span class="c1">// Check if this is a packed pixel or direct color mode</span>
<span class="w">      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">memory_model</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">4</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">memory_model</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">6</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">continue</span><span class="p">;</span><span class="w"></span>

<span class="w">      </span><span class="c1">// Check if this is exactly the mode we&#39;re looking for</span>
<span class="w">      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">XResolution</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">YResolution</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"></span>
<span class="w">          </span><span class="n">d</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">BitsPerPixel</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="n">modes</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="w"></span>

<span class="w">      </span><span class="c1">// Otherwise, compare to the closest match so far, remember if best</span>
<span class="w">      </span><span class="n">pixdiff</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">DIFF</span><span class="p">(</span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">Xres</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">Yres</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">y</span><span class="p">);</span><span class="w"></span>
<span class="w">      </span><span class="n">depthdiff</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">bpp</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="n">d</span><span class="p">)</span><span class="o">?</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">bpp</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="o">:</span><span class="w"> </span><span class="p">(</span><span class="n">d</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">inf</span><span class="o">-&gt;</span><span class="n">bpp</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="mi">2</span><span class="p">;</span><span class="w"></span>
<span class="w">      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">bestpixdiff</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">pixdiff</span><span class="w"> </span><span class="o">||</span><span class="w"></span>
<span class="w">          </span><span class="p">(</span><span class="n">bestpixdiff</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">pixdiff</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="n">bestdepthdiff</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">depthdiff</span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="n">best</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">modes</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="w"></span>
<span class="w">        </span><span class="n">bestpixdiff</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pixdiff</span><span class="p">;</span><span class="w"></span>
<span class="w">        </span><span class="n">bestdepthdiff</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">depthdiff</span><span class="p">;</span><span class="w"></span>
<span class="w">      </span><span class="p">}</span><span class="w"></span>
<span class="w">  </span><span class="p">}</span><span class="w"></span>
<span class="w">  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">640</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">480</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="mh">0x11</span><span class="p">;</span><span class="w"></span>
<span class="w">  </span><span class="k">return</span><span class="w"> </span><span class="n">best</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="Common_Mistakes">Common Mistakes</span></h2>
<p>There's some mistakes that beginners seem to make fairly often when they first start working with VBE.
</p>
<h3><span class="mw-headline" id="VESA_Defined_Mode_Numbers">VESA Defined Mode Numbers</span></h3>
<p>For older versions of the VBE specification (VBE 1.0, VBE 1.1 and VBE 1.2) VESA defined some standard mode numbers. For example, mode 0x0113 was 800 * 600 * 15-bpp. In VBE 2.0 these mode numbers were deprecated - VESA decided not to define any more of them, told video card manufacturers they don't need to use the old standard mode numbers, and told programmers to search for the mode they want without relying on any of the old standard mode numbers. Despite this, it's still possible to find obsolete information on the internet suggesting to use these old standard mode numbers.
</p>
<h3><span id="Use_.22Bytes_Between_Lines.22"></span><span class="mw-headline" id="Use_&quot;Bytes_Between_Lines&quot;">Use "Bytes Between Lines"</span></h3>
<p>People tend to assume that pixel data is contiguous (e.g. line 1, then line 2, then line 3, ...). This isn't always the case, and for a variety of reasons there may be padding between lines (e.g. line 1, padding, then line 2, padding, then line 3, ...). The "Get Mode Information" VBE function returns the number of bytes between lines, and this value should be used. For example, for a 640 * 480 * 16-bpp video mode, the offset of a line is found by "offset = line * bytes_per_line" and not by "offset = line * (640 * 2)". In the same way, you can't use one "rep stosb/w/d/q" or "memset()" to fill the entire display, and you should fill each line separately to avoid writing to any padding.
</p><p>Note that (for VBE 3.0) there may be 2 "bytes between lines" values returned by the "Get Mode Information" VBE function. The first one is used when the video mode is setup for bank switching and the second one is used when linear frame buffer is being used. For older versions of VBE there is no "bytes between lines for linear frame buffer" value, and the "bytes between lines for bank switched" value is used for both bank switching and linear frame buffer.
</p>
<h3><span id="Don.27t_Assume_Pixel_Formats"></span><span class="mw-headline" id="Don't_Assume_Pixel_Formats">Don't Assume Pixel Formats</span></h3>
<p>Usually pixel data is in "RGB" format, but this isn't always the case. A pixel can be in "BGR" format or anything else, and may not even use Red, Green and Blue components - it could use "YUV" where there's one luma/brightness component (Y) and two chrominance (UV) components. Always check the "memory_model" field and (for 15-bpp and higher video modes) all of the "component mask" and "field position" fields (e.g. "red_mask_size", "red_field_position", etc) in the structure returned by the "Get Mode Information" VBE function.
</p>
<h3><span id="Don.27t_Assume_Unused_Bits_Are_Unused"></span><span class="mw-headline" id="Don't_Assume_Unused_Bits_Are_Unused">Don't Assume Unused Bits Are Unused</span></h3>
<p>For some colour depths there's "unused" bits in the pixel data (one "unused" bit per pixel in 15-bpp modes, and 8 "unused" bits per pixel for 32-bpp modes). These unused bits may actually be used by some video cards for a variety of extra features. For one example, I know of a video card where (in 15-bpp modes) if the highest/unused bit is set then it uses the lowest 8 bits of the pixel data as an index into the palette.
</p>
<h3><span id="Don.27t_Assume_VGA_Compatibility"></span><span class="mw-headline" id="Don't_Assume_VGA_Compatibility">Don't Assume VGA Compatibility</span></h3>
<p>For 8-bpp video modes people assume that they can use the VGA I/O ports to change the palette. It's much better to use the VBE functions instead, but if you don't then at least test if the video mode uses VGA I/O ports by testing the "VGA compatible mode" flag (bit 5) in "mode_attributes" field returned by the "Get Mode Information" VBE function.
</p><p>In a similar way, for 4-bpp "planar" video modes some people assume that the VGA I/O ports can be used to switch between planes rather than testing if the "VGA compatible mode" flag is set first.
</p>
<h3><span id="Don.27t_Assume_The_Monitor_Supports_A_Video_Mode"></span><span class="mw-headline" id="Don't_Assume_The_Monitor_Supports_A_Video_Mode">Don't Assume The Monitor Supports A Video Mode</span></h3>
<p>We all like pretty graphics and high resolution video modes. Unfortunately, if VBE says that a video mode is supported by the video card it does not mean that the video mode is also supported by the monitor. VESA has defined 2 video mode timings that are meant to be supported by all monitors (640 * 480 standard VGA timing and 720 * 480 standard VGA timing). For all other video modes you should either use <a href="EDID" title="EDID">EDID</a> to find out if the monitor supports the video mode's timing (or not), or provide a way for the user to test the video mode and change it if it doesn't work. This is the approach used by Windows, with a dialog box appearing with the option to accept or revert. No action within 15 seconds reverts. Just an idea&#160;;).
</p><p>Using EDID for this purpose is complicated. Unless you provide a "CRTC information block" structure when you set the video mode you can't be entirely sure what timing the video card will use; and only some video cards that support VBE 3.0 support the "CRTC information" correctly.
</p><p>The other alternative is to only ever use video modes that (should) use 640 * 480 and 720 * 480 standard VGA timing. For video modes with lower horizontal resolutions the video card sends the each pixel twice, and for video modes with lower vertical resolutions the video card sends the each row of pixels twice (called "double scanning"); and in both cases the video timing is the same as it would be for the corresponding higher resolution video mode. This gives the following list of "safe" resolutions:
</p>
<ul><li>720 * 480</li>
<li>640 * 480</li>
<li>360 * 480 (actually uses "720 * 480" timing)</li>
<li>320 * 480 (actually uses "640 * 480" timing)</li>
<li>720 * 240 (actually uses "720 * 480" timing)</li>
<li>640 * 240 (actually uses "640 * 480" timing)</li>
<li>360 * 240 (actually uses "720 * 480" timing)</li>
<li>320 * 240 (actually uses "640 * 480" timing)</li></ul>
<p>Colour depth doesn't/shouldn't effect the video timing signals. This means that the best possible safe video mode would be 720 * 480 * 24/32-bpp.
</p>
<h3><span id="Don.27t_Read_From_Video_Memory"></span><span class="mw-headline" id="Don't_Read_From_Video_Memory">Don't Read From Video Memory</span></h3>
<p>Reading from the video memory is slooow! Use <a href="Double_Buffering" title="Double Buffering">double buffering</a> instead.
</p>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="./User:Omarrx024/VESA_Tutorial" title="User:Omarrx024/VESA Tutorial">VESA Tutorial</a></li>
<li><a href="VGA_Hardware" title="VGA Hardware">VGA Hardware</a> - VESA predecessor</li>
<li><a href="GOP" title="GOP">Graphic Output Protocol</a> - VESA successor on <a href="UEFI" title="UEFI">UEFI</a> machines</li></ul>
<h3><span class="mw-headline" id="Threads">Threads</span></h3>
<ul><li><a href="http://forum.osdev.org/viewtopic.php?t=9700" class="extiw" title="topic:9700">VESA, higher modes</a> - Initial Thread, reply by Dreamsmith (aka DaidalosGuy)</li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li>VBE at <a rel="nofollow" class="external text" href="https://en.wikipedia.org/wiki/VESA_BIOS_Extensions">Wikipedia</a></li>
<li><a rel="nofollow" class="external text" href="http://www.delorie.com/djgpp/doc/ug/graphics/vesa.html">Guide: VESA graphics modes</a></li>
<li><a rel="nofollow" class="external text" href="http://www.petesqbsite.com/sections/tutorials/tuts/vbe3.pdf">The VESA VBE 3.0 specification</a></li>
<li><a rel="nofollow" class="external text" href="http://www.monstersoft.com/tutorial1/VESA_intro.html">Introduction to VESA programming</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250212011043
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.056 seconds
Real time usage: 0.715 seconds
Preprocessor visited node count: 80/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 43368/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1904-0!canonical and timestamp 20250212011042 and revision id 27835.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=VESA_Video_Modes&amp;oldid=27835">https://wiki.osdev.org/index.php?title=VESA_Video_Modes&amp;oldid=27835</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Video" title="Category:Video">Video</a></li><li><a href="./Category:FAQ" title="Category:FAQ">FAQ</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=VESA+Video+Modes" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="VESA_Video_Modes#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="VESA_Video_Modes" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:VESA_Video_Modes" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="VESA_Video_Modes"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VESA_Video_Modes&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VESA_Video_Modes&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/VESA_Video_Modes" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/VESA_Video_Modes" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VESA_Video_Modes&amp;oldid=27835" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VESA_Video_Modes&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-lang" class="vector-menu mw-portlet mw-portlet-lang vector-menu-portal portal" aria-labelledby="p-lang-label" role="navigation"  >
	<h3
		id="p-lang-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">In other languages</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li class="interlanguage-link interwiki-de mw-list-item"><a href="http://www.lowlevel.eu/wiki/VESA_BIOS_Extensions" title="VESA BIOS Extensions – Deutsch" lang="de" hreflang="de" class="interlanguage-link-target"><span>Deutsch</span></a></li></ul>
		
	</div>
</nav>

</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 28 June 2023, at 18:37.</li>
	<li id="footer-info-0">This page has been accessed 20,855 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=VESA_Video_Modes&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.056","walltime":"0.715","ppvisitednodes":{"value":80,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":43368,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250212011043","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":816});});</script>
</body>
</html>