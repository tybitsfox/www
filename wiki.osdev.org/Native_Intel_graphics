<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Native Intel graphics - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"df6e71c87e5eeb15e74a9f57","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Native_Intel_graphics","wgTitle":"Native Intel graphics","wgCurRevisionId":25649,"wgRevisionId":25649,"wgArticleId":4026,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Video"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Native_Intel_graphics","wgRelevantArticleId":4026,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":
false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","skins.vector.styles.legacy":"ready","jquery.makeCollapsible.styles":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","jquery.makeCollapsible","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.visualEditor.desktopArticleTarget.noscript%7Cjquery.makeCollapsible.styles%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Native_Intel_graphics rootpage-Native_Intel_graphics skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Native Intel graphics</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Native_Intel_graphics#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Native_Intel_graphics#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Native_Intel_graphics#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Native_Intel_graphics#Prerequisites"><span class="tocnumber">1.1</span> <span class="toctext">Prerequisites</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="Native_Intel_graphics#Getting_EDID_via_DDC"><span class="tocnumber">2</span> <span class="toctext">Getting EDID via DDC</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Native_Intel_graphics#Generation_4_GMA_desktop_chips_(aka_Intel_G45)"><span class="tocnumber">3</span> <span class="toctext">Generation 4 GMA desktop chips (aka Intel G45)</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="Native_Intel_graphics#Architecture_overview"><span class="tocnumber">3.1</span> <span class="toctext">Architecture overview</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="Native_Intel_graphics#Documentation"><span class="tocnumber">3.2</span> <span class="toctext">Documentation</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="Native_Intel_graphics#Mode_setting"><span class="tocnumber">3.3</span> <span class="toctext">Mode setting</span></a>
<ul>
<li class="toclevel-3 tocsection-8"><a href="Native_Intel_graphics#Programming_the_DPLL"><span class="tocnumber">3.3.1</span> <span class="toctext">Programming the DPLL</span></a></li>
<li class="toclevel-3 tocsection-9"><a href="Native_Intel_graphics#Programming_the_display_pipes"><span class="tocnumber">3.3.2</span> <span class="toctext">Programming the display pipes</span></a></li>
<li class="toclevel-3 tocsection-10"><a href="Native_Intel_graphics#Handling_planes"><span class="tocnumber">3.3.3</span> <span class="toctext">Handling planes</span></a></li>
<li class="toclevel-3 tocsection-11"><a href="Native_Intel_graphics#Enabling_and_disabling_connectors"><span class="tocnumber">3.3.4</span> <span class="toctext">Enabling and disabling connectors</span></a></li>
<li class="toclevel-3 tocsection-12"><a href="Native_Intel_graphics#Disabling_the_legacy_VGA_emulation"><span class="tocnumber">3.3.5</span> <span class="toctext">Disabling the legacy VGA emulation</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="Native_Intel_graphics#Intel_HD_Graphics"><span class="tocnumber">4</span> <span class="toctext">Intel HD Graphics</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="Native_Intel_graphics#Debugging_tips"><span class="tocnumber">5</span> <span class="toctext">Debugging tips</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="Native_Intel_graphics#Implementations_in_hobby_OSs"><span class="tocnumber">6</span> <span class="toctext">Implementations in hobby OSs</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Introduction">Introduction</span></h2>
<p>Intel has produced a number of graphics chips that are integrated into their chipsets and processors.
Most notably modern Intel processors often come with Intel HD graphics chips.
Wikipedia contains <a rel="nofollow" class="external text" href="https://en.wikipedia.org/wiki/List_of_Intel_graphics_processing_units">a list</a> of all those chips.
This page explains how to drive a subset of those cards. In particular it explains how to change the graphics resolution
and how to manage the hardware provided frame buffers. It does not yet explain how the GPU can be used to accelerate
2D and 3D graphics operations via shader programs.
</p>
<h3><span class="mw-headline" id="Prerequisites">Prerequisites</span></h3>
<p>Before trying to implement a native driver for your OS, make sure you understand the basics first.
</p>
<ul><li>Read the <a href="VGA_Hardware" title="VGA Hardware">VGA Hardware</a> page. Especially the part about display timings it is still relevant for modern graphics cards. You should know what horizontal/vertical active, total, sync start/end and blanking start/end values mean; and what a pixel clock is.</li>
<li>You need to be able to access <a href="PCI" title="PCI">PCI</a> configuration space and find MMIO regions that are determined by BARs.</li></ul>
<h2><span class="mw-headline" id="Getting_EDID_via_DDC">Getting EDID via DDC</span></h2>
<p>In order to determine the graphics modes that are supported on a connected monitor it is necessary to parse the monitor's <a href="EDID" title="EDID">EDID</a> information. EDID is obtained via <a href="https://wiki.osdev.org/index.php?title=DDC&amp;action=edit&amp;redlink=1" class="new" title="DDC (page does not exist)">DDC</a> which is a simple protocol over <a href="https://wiki.osdev.org/index.php?title=I%C2%B2C&amp;action=edit&amp;redlink=1" class="new" title="I²C (page does not exist)">I²C</a>. Intel graphics chips provide a relative straightforward way to interact with the I²C bus.
</p><p>Before using the I²C bus a connector has to be selected in the <code>GMBUS0</code> register. This register also sets the bus rate. 100 kHz is a conservative default choice.
</p><p>In order to send a packet to the bus the following steps suffice:
</p>
<ul><li>Write the first 4 bytes of data to the <code>GMBUS3</code> register.</li>
<li>Write the destination address, the byte count and the software-ready bit to the <code>GMBUS1</code> register. The simplest way to use the bus is to program the bus cycle selects bits so that no index or STOP is generated and the bus just enters a wait state after the packet is transferred.</li>
<li>Wait until the hardware-ready bit in <code>GMBUS2</code> is set. Optionally an IRQ can be enabled to avoid busy waiting.</li>
<li>Write the next 4 bytes to <code>GMBUS3</code> and wait for hardware-ready in <code>GMBUS2</code>. Repeat this last step until all data is transferred.</li></ul>
<p>Receiving a packet works as follows:
</p>
<ul><li>Write the destination address, the byte count, the software-ready bit and the direction bit to the <code>GMBUS1</code> register.</li>
<li>Wait for hardware-ready in <code>GMBUS2</code>. Read 4 bytes of data from <code>GMBUS3</code>. Repeat this last step until all data is transferred.</li></ul>
<p>After a packet was sent or received the driver should wait until the bus enters a wait state by checking for the wait-phase bit in <code>GMBUS2</code>. If the transaction (possibly consisting of multiple packets) is complete a STOP condition should be generated via the bus cycle select bit in <code>GMBUS1</code>.
</p>
<h2><span id="Generation_4_GMA_desktop_chips_.28aka_Intel_G45.29"></span><span class="mw-headline" id="Generation_4_GMA_desktop_chips_(aka_Intel_G45)">Generation 4 GMA desktop chips (aka Intel G45)</span></h2>
<p>The G45 is a PCI-Express based graphics chip that was introduced by Intel in 2008.
</p>
<h3><span class="mw-headline" id="Architecture_overview">Architecture overview</span></h3>
<p>G45 chips appear as devices on the PCI bus. They are identified a vendor ID of 0x8086 and a model-specific device ID. The PCI configuration space is used to access two BARs: BAR 0 points to a MMIO region that contains all registers of the card. BAR 2 allows access to the graphics memory.
</p><p>The chip supports two independent graphics pipelines. Each pipeline is made of the following:
</p>
<ul><li>A DPLL (digital phase-locked loop) that generates the pixel clock.</li>
<li>A display pipe that is responsible for setting the display timings.</li>
<li>A primary plane and secondary planes. The primary plane supplies the primary framebuffer to the display pipe. Secondary planes are mostly used to implement hardware mouse cursors.</li></ul>
<p>Both pipelines share a set of connectors that are used to attach monitors to the card. G45 supports DAC (digital-to-analog converter, i.e. CRTs via the usual VGA plug) connectors, SDVO (serial digital video out) connectors, LVDS (low-voltage differential signaling) connectors and TV output. SDVO is an internal bus that is usually transcoded to HDMI or DisplayPort. LVDS is used to connect integrated flat panels to the graphics chip of laptops.
</p>
<h3><span class="mw-headline" id="Documentation">Documentation</span></h3>
<p>The G45's registers are documented by Intel. However Intel's functional descriptions are quite sparse. The Linux kernel's i915 driver is often a good reference.
</p>
<ul><li>Intel's documentation is available <a rel="nofollow" class="external text" href="https://01.org/linuxgraphics/documentation/hardware-specification-prms">here</a>. We are primarily interested in the <a rel="nofollow" class="external text" href="https://01.org/sites/default/files/documentation/g45_vol_3_register_0_0.pdf">G45: Volume Three: Display Register</a> that describes the display registers. <a rel="nofollow" class="external text" href="https://01.org/sites/default/files/documentation/g45_vol_1a_core_updated.pdf">G45: Volume 1a Graphics Core</a> documents the graphics memory interface and the PCI configuration space. The <a rel="nofollow" class="external text" href="https://01.org/sites/default/files/documentation/965_g35_vol_3_display_registers_updated.pdf">G35: Volume Three: Display Registers</a> contains a few registers that are undocumented in the G45 manual but still must be programmed by the driver.</li>
<li>The <a rel="nofollow" class="external text" href="http://lxr.free-electrons.com/source/drivers/gpu/drm/i915">i915 driver</a> of the Linux kernel. Almost all of the mode setting logic is in <a rel="nofollow" class="external text" href="https://elixir.bootlin.com/linux/latest/source/drivers/gpu/drm/i915/display/intel_display.c">intel_display.c</a>.</li></ul>
<h3><span class="mw-headline" id="Mode_setting">Mode setting</span></h3>
<p>Mode setting proceeds in two phases: First the display hardware needs to be deactivated. After that it can be reprogrammed and enabled again in another mode.
</p><p>More specifically disabling the display hardware consists of the following steps:
</p>
<ul><li>Disable all output connectors.</li>
<li>Disable all planes. This includes the primary plane and cursor planes.</li>
<li>Disable the display pipe.</li>
<li>Disable the DPLL.</li>
<li>Disable the legacy VGA emulation.</li></ul>
<p>Enabling the display reverses this sequence:
</p>
<ul><li>Program the DPLL to generate a suitable pixel clock and enable it. Wait for the clock to stabilize.</li>
<li>Setup the display timings of your desired mode and enable the display pipe.</li>
<li>Set a framebuffer address and stride and enable the primary plane and all secondary planes that you wish to use.</li>
<li>Enable the output connectors.</li></ul>
<h4><span class="mw-headline" id="Programming_the_DPLL">Programming the DPLL</span></h4>
<p>Before a display pipe can be enabled its DPLL has to be programmed to generate a suitable pixel clock for the desired graphics mode.
The DPLL clock is determined by five integer variables called N, M1, M2, P1 and P2. The relation between the DPLL clock and those variables is given by the formula:
</p><p><code>DPLL = (reference frequency * (5 * (M1 - 2) + (M2 - 2)) / N) / (P1 * P2)</code>
</p><p>There are limits on various terms of this formula. Let <code>M = 5 * (M1 - 2) + (M2 - 2)</code>, <code>P = P1 * P2</code> and <code>VCO = reference frequency * (5 * (M1 - 2) + (M2 - 2)) / N</code>. Then M1 and M2 need to be chosen so that <code>M1 &lt; M2</code>. The following table lists the G45's limits on DPLL variables:
</p>
<table class="wikitable">

<tbody><tr>
<th scope="row">Variable
</th>
<td>DPLL
</td>
<td>VCO
</td>
<td>N
</td>
<td>M
</td>
<td>M1
</td>
<td>M2
</td>
<td>P
</td>
<td>P1
</td>
<td>P2
</td></tr>
<tr>
<th scope="row">Min
</th>
<td style="text-align:right;">25,000 kHz
</td>
<td style="text-align:right;">1,750,000 kHz
</td>
<td style="text-align:right;">1
</td>
<td style="text-align:right;">104
</td>
<td style="text-align:right;">17
</td>
<td style="text-align:right;">5
</td>
<td style="text-align:right;">10
</td>
<td style="text-align:right;">1
</td>
<td style="text-align:right;">10
</td></tr>
<tr>
<th scope="row">Max
</th>
<td style="text-align:right;">270,000 kHz
</td>
<td style="text-align:right;">3,500,000 kHz
</td>
<td style="text-align:right;">4
</td>
<td style="text-align:right;">138
</td>
<td style="text-align:right;">23
</td>
<td style="text-align:right;">11
</td>
<td style="text-align:right;">30
</td>
<td style="text-align:right;">3
</td>
<td style="text-align:right;">10
</td></tr></tbody></table>
<p>The reference frequency is 96,000 kHz for DAC and SDVO output.
</p><p>The resulting pixel clock is the quotient between the DPLL clock and a pixel multiplier. The pixel multiplier inserts padding into the SDVO output to ensure that its DPLL always operates at a frequency between 100 MHz and 200 MHz. Note that the pixel multiplier also applies to DAC output.
</p><p>In order to determine the DPLL parameters one has to:
</p>
<ul><li>Take the desired pixel clock as input.</li>
<li>Chose a pixel multiplier so that the pixel clock times this multiplier is in the 100 MHz to 200 MHz range. This value is the required DPLL clock.</li>
<li>Compute N, M1, M2, P1 and P2 from the DPLL clock. This can be done by iterating over all possible N, M1, M2, P1 and P2 values and checking if each combination falls into the allowed limits.</li></ul>
<p>After that the DPLL can be programmed. This is done by programming the N, M1 and M2 values in <code>FPA0</code> register and programming the P1 and P2 values and enabling the DPLL in the <code>DPLLA_CTRL</code> register. Ensure to set the VGA disable bit and select SDVO/DAC mode. The driver should issue a 150μs delay after enabling the DPLL to allow the clock to stabilize.
</p>
<div class="toccolours mw-collapsible mw-collapsed">
<p><b>Reference implementations</b>
</p>
<div class="mw-collapsible-content">
<ul><li>Linux i915 driver (version 4.9): <code>g4x_find_best_dpll()</code> in <a rel="nofollow" class="external text" href="http://lxr.free-electrons.com/source/drivers/gpu/drm/i915/intel_display.c">intel_display.c</a> computes the N, M1, M2, P1 and P2 values for a given DPLL clock. <code>i9xx_compute_dpll()</code> determines the DPLL register values. <code>i9xx_set_pll_dividers()</code> and <code>i9xx_enable_pll()</code> write those values to the registers.</li></ul>
</div></div>
<h4><span class="mw-headline" id="Programming_the_display_pipes">Programming the display pipes</span></h4>
<p>Before a display pipe can be enabled the display timings have to be programmed in the <code>HTOTAL_A</code>, <code>VTOTAL_A</code>, <code>HBLANK_A</code>, <code>VBLANK_A</code>, <code>HSYNC_A</code>, <code>VSYNC_A</code> and <code>PIPEASRC</code> registers. The values of the <code>PIPEASRC</code> register should usually match the horizontal and vertical active values.
</p><p>Display pipes can be enabled and disabled via their <code>PIPEACONF</code> registers.
</p><p>Pipes should only be enabled while their DPLLs are enabled and warmed up.
</p>
<div class="toccolours mw-collapsible mw-collapsed">
<p><b>Reference implementations</b>
</p>
<div class="mw-collapsible-content">
<ul><li>Linux i915 driver (version 4.9): <code>intel_set_pipe_timings()</code> and <code>intel_set_pipe_src_size()</code> in <a rel="nofollow" class="external text" href="http://lxr.free-electrons.com/source/drivers/gpu/drm/i915/intel_display.c">intel_display.c</a> program the display timings. <code>i9xx_set_pipeconf()</code> and <code>intel_enable_pipe()</code> enable the pipe.</li></ul>
</div></div>
<h4><span class="mw-headline" id="Handling_planes">Handling planes</span></h4>
<p>The <code>DSPASURF</code> register control the address of the primary framebuffer. The stride of the buffer has to be programmed in the <code>DSPASTRIDE</code> register. G45 requires strides to be multiples of 64. The <code>DSPALINOFF</code> register is usually set to zero.
</p><p>The primary plane can be enabled and disabled via the <code>DSPACNTR</code> register. This register also sets the pixel format.
</p><p>Planes should only be enabled while the pipes they are assigned to are enabled.
</p>
<h4><span class="mw-headline" id="Enabling_and_disabling_connectors">Enabling and disabling connectors</span></h4>
<p>The analog output connector can be enabled and disabled via the <code>ADPA</code> register. This register also specifies the pipe that the connector uses.
</p><p>Note that connectors must only be enabled or disabled while their respective pipes are enabled.
</p>
<h4><span class="mw-headline" id="Disabling_the_legacy_VGA_emulation">Disabling the legacy VGA emulation</span></h4>
<p>The VGA emulation is controlled via the <code>VGACNTRL</code> register. For non-VGA modes the <code>VGA Display Disable</code> bit should be set. Likewise the <code>VGA Centering Enable</code> bits should be set to 0.
</p>
<h2><span class="mw-headline" id="Intel_HD_Graphics">Intel HD Graphics</span></h2>
<p>See <a href="Intel_HD_Graphics" title="Intel HD Graphics">Intel HD Graphics</a>.
</p>
<h2><span class="mw-headline" id="Debugging_tips">Debugging tips</span></h2>
<ul><li>While debugging a display driver logging messages to the screen is often not possible. Use <a href="Serial_Ports" title="Serial Ports">Serial Ports</a> instead.</li>
<li>Because there are no emulators that emulate Intel graphics cards you have to test your driver on a physical machine. Make sure that you can recompile your driver and reboot your test machine with little effort. Things like <a href="PXE" title="PXE">PXE</a> might help with that.</li>
<li>Read the initial values of each register and ensure you understand them before you try to change the registers.</li></ul>
<h2><span class="mw-headline" id="Implementations_in_hobby_OSs">Implementations in hobby OSs</span></h2>
<ul><li><a rel="nofollow" class="external text" href="https://github.com/avdgrinten/managarm">managarm</a> (as of commit 0e9d37c) has a G45 mode setting driver in <a rel="nofollow" class="external text" href="https://github.com/avdgrinten/managarm/blob/master/drivers/gfx/intel/src/main.cpp">drivers/gfx/intel</a>. Note that the code makes heavy use of C++ features, particularly operator overloading of the register classes.</li></ul>
<!-- 
NewPP limit report
Cached time: 20250212010631
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.014 seconds
Real time usage: 0.014 seconds
Preprocessor visited node count: 56/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4026-0!canonical and timestamp 20250212010631 and revision id 25649.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Native_Intel_graphics&amp;oldid=25649">https://wiki.osdev.org/index.php?title=Native_Intel_graphics&amp;oldid=25649</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="./Category:Video" title="Category:Video">Video</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Native+Intel+graphics" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Native_Intel_graphics#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Native_Intel_graphics" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Native_Intel_graphics&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Native_Intel_graphics"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Native_Intel_graphics&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Native_Intel_graphics&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Native_Intel_graphics" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Native_Intel_graphics" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Native_Intel_graphics&amp;oldid=25649" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Native_Intel_graphics&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 8 February 2021, at 17:43.</li>
	<li id="footer-info-0">This page has been accessed 7,970 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Native_Intel_graphics&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.014","walltime":"0.014","ppvisitednodes":{"value":56,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":0,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250212010631","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":105});});</script>
</body>
</html>