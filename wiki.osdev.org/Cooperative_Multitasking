<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Cooperative Multitasking - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"ba4b21c9f317c27fb2759161","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Cooperative_Multitasking","wgTitle":"Cooperative Multitasking","wgCurRevisionId":27870,"wgRevisionId":27870,"wgArticleId":3671,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","Level 2 Tutorials","In Progress","C","Multitasking","X86 CPU"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Cooperative_Multitasking","wgRelevantArticleId":3671,
"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook",
"ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Cooperative_Multitasking rootpage-Cooperative_Multitasking skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Cooperative Multitasking</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Cooperative_Multitasking#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Cooperative_Multitasking#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_2.png" class="image"><img alt="Difficulty 2.png" src="images/a/a1/Difficulty_2.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Medium</td></tr></tbody></table>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></tbody></table>
</center>
<p>This tutorial will cover the creation of a co-operative (not pre-emptive) kernel-level multitasking system. That is, kernel threads and processes. The code here is specific to the IA-32 architecture.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Cooperative_Multitasking#Requirements"><span class="tocnumber">1</span> <span class="toctext">Requirements</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Cooperative_Multitasking#task.h"><span class="tocnumber">2</span> <span class="toctext"><i>task.h</i></span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Cooperative_Multitasking#task.c"><span class="tocnumber">3</span> <span class="toctext"><i>task.c</i></span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Cooperative_Multitasking#switch.S"><span class="tocnumber">4</span> <span class="toctext"><i>switch.S</i></span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Cooperative_Multitasking#Doing_it"><span class="tocnumber">5</span> <span class="toctext">Doing it</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Requirements">Requirements</span></h2>
<ul><li><a href="Paging" title="Paging">Paging</a></li></ul>
<h2><span class="mw-headline" id="task.h"><i>task.h</i></span></h2>
<p>This header defines the function and types used in here. It's code is
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#ifndef __TASK_H__</span>
<span class="cp">#define __TASK_H__</span>

<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;stdint.h&gt;</span><span class="cp"></span>

<span class="k">extern</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">initTasking</span><span class="p">();</span><span class="w"></span>

<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">eax</span><span class="p">,</span><span class="w"> </span><span class="n">ebx</span><span class="p">,</span><span class="w"> </span><span class="n">ecx</span><span class="p">,</span><span class="w"> </span><span class="n">edx</span><span class="p">,</span><span class="w"> </span><span class="n">esi</span><span class="p">,</span><span class="w"> </span><span class="n">edi</span><span class="p">,</span><span class="w"> </span><span class="n">esp</span><span class="p">,</span><span class="w"> </span><span class="n">ebp</span><span class="p">,</span><span class="w"> </span><span class="n">eip</span><span class="p">,</span><span class="w"> </span><span class="n">eflags</span><span class="p">,</span><span class="w"> </span><span class="n">cr3</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"> </span><span class="n">Registers</span><span class="p">;</span><span class="w"></span>

<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">Task</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">Registers</span><span class="w"> </span><span class="n">regs</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="k">struct</span><span class="w"> </span><span class="nc">Task</span><span class="w"> </span><span class="o">*</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"> </span><span class="n">Task</span><span class="p">;</span><span class="w"></span>

<span class="k">extern</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">initTasking</span><span class="p">();</span><span class="w"></span>
<span class="k">extern</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">createTask</span><span class="p">(</span><span class="n">Task</span><span class="o">*</span><span class="p">,</span><span class="w"> </span><span class="kt">void</span><span class="p">(</span><span class="o">*</span><span class="p">)(),</span><span class="w"> </span><span class="kt">uint32_t</span><span class="p">,</span><span class="w"> </span><span class="kt">uint32_t</span><span class="o">*</span><span class="p">);</span><span class="w"></span>

<span class="k">extern</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">yield</span><span class="p">();</span><span class="w"> </span><span class="c1">// Switch task frontend</span>
<span class="k">extern</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">switchTask</span><span class="p">(</span><span class="n">Registers</span><span class="w"> </span><span class="o">*</span><span class="n">old</span><span class="p">,</span><span class="w"> </span><span class="n">Registers</span><span class="w"> </span><span class="o">*</span><span class="n">new</span><span class="p">);</span><span class="w"> </span><span class="c1">// The function which actually switches</span>

<span class="cp">#endif </span><span class="cm">/* __TASK_H__ */</span><span class="cp"></span>
</pre></div>
<h2><span class="mw-headline" id="task.c"><i>task.c</i></span></h2>
<p>This file defines the actual wrappers that <i>switchTask()</i> uses, <i>createTask()</i> and <i>yield()</i>:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&quot;task.h&quot;</span><span class="cp"></span>

<span class="k">static</span><span class="w"> </span><span class="n">Task</span><span class="w"> </span><span class="o">*</span><span class="n">runningTask</span><span class="p">;</span><span class="w"></span>
<span class="k">static</span><span class="w"> </span><span class="n">Task</span><span class="w"> </span><span class="n">mainTask</span><span class="p">;</span><span class="w"></span>
<span class="k">static</span><span class="w"> </span><span class="n">Task</span><span class="w"> </span><span class="n">otherTask</span><span class="p">;</span><span class="w"></span>

<span class="k">static</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">otherMain</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">printk</span><span class="p">(</span><span class="s">&quot;Hello multitasking world!&quot;</span><span class="p">);</span><span class="w"> </span><span class="c1">// Not implemented here...</span>
<span class="w">    </span><span class="n">yield</span><span class="p">();</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>

<span class="kt">void</span><span class="w"> </span><span class="nf">initTasking</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="c1">// Get EFLAGS and CR3</span>
<span class="w">    </span><span class="k">asm</span><span class="w"> </span><span class="k">volatile</span><span class="p">(</span><span class="s">&quot;movl&#160;%%cr3,&#160;%%eax; movl&#160;%%eax, %0;&quot;</span><span class="o">:</span><span class="s">&quot;=m&quot;</span><span class="p">(</span><span class="n">mainTask</span><span class="p">.</span><span class="n">regs</span><span class="p">.</span><span class="n">cr3</span><span class="p">)</span><span class="o">::</span><span class="s">&quot;%eax&quot;</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="k">asm</span><span class="w"> </span><span class="k">volatile</span><span class="p">(</span><span class="s">&quot;pushfl; movl (%%esp),&#160;%%eax; movl&#160;%%eax, %0; popfl;&quot;</span><span class="o">:</span><span class="s">&quot;=m&quot;</span><span class="p">(</span><span class="n">mainTask</span><span class="p">.</span><span class="n">regs</span><span class="p">.</span><span class="n">eflags</span><span class="p">)</span><span class="o">::</span><span class="s">&quot;%eax&quot;</span><span class="p">);</span><span class="w"></span>

<span class="w">    </span><span class="n">createTask</span><span class="p">(</span><span class="o">&amp;</span><span class="n">otherTask</span><span class="p">,</span><span class="w"> </span><span class="n">otherMain</span><span class="p">,</span><span class="w"> </span><span class="n">mainTask</span><span class="p">.</span><span class="n">regs</span><span class="p">.</span><span class="n">eflags</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="kt">uint32_t</span><span class="o">*</span><span class="p">)</span><span class="n">mainTask</span><span class="p">.</span><span class="n">regs</span><span class="p">.</span><span class="n">cr3</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">mainTask</span><span class="p">.</span><span class="n">next</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">&amp;</span><span class="n">otherTask</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">otherTask</span><span class="p">.</span><span class="n">next</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">&amp;</span><span class="n">mainTask</span><span class="p">;</span><span class="w"></span>

<span class="w">    </span><span class="n">runningTask</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">&amp;</span><span class="n">mainTask</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>

<span class="kt">void</span><span class="w"> </span><span class="nf">createTask</span><span class="p">(</span><span class="n">Task</span><span class="w"> </span><span class="o">*</span><span class="n">task</span><span class="p">,</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="p">(</span><span class="o">*</span><span class="n">main</span><span class="p">)(),</span><span class="w"> </span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">flags</span><span class="p">,</span><span class="w"> </span><span class="kt">uint32_t</span><span class="w"> </span><span class="o">*</span><span class="n">pagedir</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">eax</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">ebx</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">ecx</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">edx</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">esi</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">edi</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">eflags</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">flags</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">eip</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">uint32_t</span><span class="p">)</span><span class="w"> </span><span class="n">main</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">cr3</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">uint32_t</span><span class="p">)</span><span class="w"> </span><span class="n">pagedir</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">.</span><span class="n">esp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="kt">uint32_t</span><span class="p">)</span><span class="w"> </span><span class="n">allocPage</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mh">0x1000</span><span class="p">;</span><span class="w"> </span><span class="c1">// Not implemented here</span>
<span class="w">    </span><span class="n">task</span><span class="o">-&gt;</span><span class="n">next</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>

<span class="kt">void</span><span class="w"> </span><span class="nf">yield</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">Task</span><span class="w"> </span><span class="o">*</span><span class="n">last</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runningTask</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">runningTask</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runningTask</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">switchTask</span><span class="p">(</span><span class="o">&amp;</span><span class="n">last</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">runningTask</span><span class="o">-&gt;</span><span class="n">regs</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="switch.S"><i>switch.S</i></span></h2>
<p>This is the file that actually changes between tasks. It defines a function, <i>switchTask()</i>, which does all the magic. It saves all registers to <i>from</i> and loads them from <i>to</i>. It is trickier than you might think. Its function prototype is
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="kt">void</span><span class="w"> </span><span class="nf">switchTask</span><span class="p">(</span><span class="n">Registers</span><span class="w"> </span><span class="o">*</span><span class="n">from</span><span class="p">,</span><span class="w"> </span><span class="n">Registers</span><span class="w"> </span><span class="o">*</span><span class="n">to</span><span class="p">);</span><span class="w"></span>
</pre></div>
<p>Its code is
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="na">.section</span><span class="w"> </span><span class="no">.text</span><span class="w"></span>
<span class="na">.global</span><span class="w"> </span><span class="no">switchTask</span><span class="w"></span>
<span class="nl">switchTask:</span><span class="w"></span>
<span class="w">    </span><span class="nf">pusha</span><span class="w"></span>
<span class="w">    </span><span class="nf">pushf</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%cr3</span><span class="p">,</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#Push CR3</span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="nv">%eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">44</span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#The first argument, where to save</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%ebx</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%ecx</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%edx</span><span class="p">,</span><span class="w"> </span><span class="mi">12</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%esi</span><span class="p">,</span><span class="w"> </span><span class="mi">16</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%edi</span><span class="p">,</span><span class="w"> </span><span class="mi">20</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">36</span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%ebx</span><span class="w"> </span><span class="c1">#EAX</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">40</span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%ecx</span><span class="w"> </span><span class="c1">#IP</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">20</span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%edx</span><span class="w"> </span><span class="c1">#ESP</span>
<span class="w">    </span><span class="nf">add</span><span class="w"> </span><span class="no">$4</span><span class="p">,</span><span class="w"> </span><span class="nv">%edx</span><span class="w"> </span><span class="c1">#Remove the return value&#160;;)</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">16</span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%esi</span><span class="w"> </span><span class="c1">#EBP</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">4</span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%edi</span><span class="w"> </span><span class="c1">#EFLAGS</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%ebx</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%edx</span><span class="p">,</span><span class="w"> </span><span class="mi">24</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%esi</span><span class="p">,</span><span class="w"> </span><span class="mi">28</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%ecx</span><span class="p">,</span><span class="w"> </span><span class="mi">32</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%edi</span><span class="p">,</span><span class="w"> </span><span class="mi">36</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">pop</span><span class="w"> </span><span class="nv">%ebx</span><span class="w"> </span><span class="c1">#CR3</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%ebx</span><span class="p">,</span><span class="w"> </span><span class="mi">40</span><span class="p">(</span><span class="nv">%eax</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="nv">%ebx</span><span class="w"> </span><span class="c1">#Goodbye again&#160;;)</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">48</span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#Now it is the new object</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">4</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%ebx</span><span class="w"> </span><span class="c1">#EBX</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">8</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%ecx</span><span class="w"> </span><span class="c1">#ECX</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">12</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%edx</span><span class="w"> </span><span class="c1">#EDX</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">16</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%esi</span><span class="w"> </span><span class="c1">#ESI</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">20</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%edi</span><span class="w"> </span><span class="c1">#EDI</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">28</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%ebp</span><span class="w"> </span><span class="c1">#EBP</span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="nv">%eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">36</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#EFLAGS</span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="nv">%eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">popf</span><span class="w"></span>
<span class="w">    </span><span class="nf">pop</span><span class="w"> </span><span class="nv">%eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">24</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%esp</span><span class="w"> </span><span class="c1">#ESP</span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="nv">%eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">40</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#CR3</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="nv">%eax</span><span class="p">,</span><span class="w"> </span><span class="nv">%cr3</span><span class="w"></span>
<span class="w">    </span><span class="nf">pop</span><span class="w"> </span><span class="nv">%eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="nv">%eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="mi">32</span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#EIP</span>
<span class="w">    </span><span class="nf">xchg</span><span class="w"> </span><span class="p">(</span><span class="nv">%esp</span><span class="p">),</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#We do not have any more registers to use as tmp storage</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="p">(</span><span class="nv">%eax</span><span class="p">),</span><span class="w"> </span><span class="nv">%eax</span><span class="w"> </span><span class="c1">#EAX</span>
<span class="w">    </span><span class="nf">ret</span><span class="w"> </span><span class="c1">#This ends all!</span>
</pre></div>
<h2><span class="mw-headline" id="Doing_it">Doing it</span></h2>
<p>Put this on some source file
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&quot;task.h&quot;</span><span class="cp"></span>

<span class="kt">void</span><span class="w"> </span><span class="nf">doIt</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">printk</span><span class="p">(</span><span class="s">&quot;Switching to otherTask... </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="n">yield</span><span class="p">();</span><span class="w"></span>
<span class="w">    </span><span class="n">printk</span><span class="p">(</span><span class="s">&quot;Returned to mainTask!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<p>Now, from your <i>kernel_main()</i> call <i>doIt()</i>!
</p><p>Congratulations! You've just implement kernel multitasking!
</p><p>(Note: Article on proper kernel multi-tasking coming soon)
</p>
<!-- 
NewPP limit report
Cached time: 20250212010950
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.054 seconds
Real time usage: 0.709 seconds
Preprocessor visited node count: 132/1000000
Post‐expand include size: 700/2097152 bytes
Template argument size: 52/2097152 bytes
Highest expansion depth: 19/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 27297/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    4.633      1 -total
 90.83%    4.208      1 Template:Rating
 86.43%    4.004      3 Template:If
 73.18%    3.390      3 Template:Show1
 20.87%    0.967      3 Template:Eq
 10.30%    0.477      3 Template:Eq1
  8.22%    0.381      1 Template:In_Progress
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3671-0!canonical and timestamp 20250212010949 and revision id 27870.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Cooperative_Multitasking&amp;oldid=27870">https://wiki.osdev.org/index.php?title=Cooperative_Multitasking&amp;oldid=27870</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Level_2_Tutorials" title="Category:Level 2 Tutorials">Level 2 Tutorials</a></li><li><a href="./Category:In_Progress" title="Category:In Progress">In Progress</a></li><li><a href="./Category:C" title="Category:C">C</a></li><li><a href="./Category:Multitasking" title="Category:Multitasking">Multitasking</a></li><li><a href="./Category:X86_CPU" title="Category:X86 CPU">X86 CPU</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Cooperative+Multitasking" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Cooperative_Multitasking#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Cooperative_Multitasking" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:Cooperative_Multitasking" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Cooperative_Multitasking"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Cooperative_Multitasking&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Cooperative_Multitasking&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Cooperative_Multitasking" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Cooperative_Multitasking" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Cooperative_Multitasking&amp;oldid=27870" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Cooperative_Multitasking&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 9 July 2023, at 04:08.</li>
	<li id="footer-info-0">This page has been accessed 2,631 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Cooperative_Multitasking&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.054","walltime":"0.709","ppvisitednodes":{"value":132,"limit":1000000},"postexpandincludesize":{"value":700,"limit":2097152},"templateargumentsize":{"value":52,"limit":2097152},"expansiondepth":{"value":19,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":27297,"limit":5000000},"timingprofile":["100.00%    4.633      1 -total"," 90.83%    4.208      1 Template:Rating"," 86.43%    4.004      3 Template:If"," 73.18%    3.390      3 Template:Show1"," 20.87%    0.967      3 Template:Eq"," 10.30%    0.477      3 Template:Eq1","  8.22%    0.381      1 Template:In_Progress"]},"cachereport":{"timestamp":"20250212010950","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":819});});</script>
</body>
</html>