<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>D Bare Bones With LDC2 - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"d96644d29c4fa57fe74afe20","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"D_Bare_Bones_With_LDC2","wgTitle":"D Bare Bones With LDC2","wgCurRevisionId":26640,"wgRevisionId":26640,"wgArticleId":3292,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","In Progress","Level 2 Tutorials","Bare bones tutorials","D"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"D_Bare_Bones_With_LDC2","wgRelevantArticleId":3292,
"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook",
"ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-D_Bare_Bones_With_LDC2 rootpage-D_Bare_Bones_With_LDC2 skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">D Bare Bones With LDC2</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="D_Bare_Bones_With_LDC2#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="D_Bare_Bones_With_LDC2#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></tbody></table>
</center>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p>This tutorial needs to explain what the code does as tutorials are not just copy paste. You can help out by <a rel="nofollow" class="external text" href="https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;action=edit">editing</a> this page to include more context to what the code does.
</p>
</td></tr></tbody></table>
</center>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><big><b>WAIT! Have you read <a href="Getting_Started" title="Getting Started">Getting Started</a>, <a href="Beginner_Mistakes" title="Beginner Mistakes">Beginner Mistakes</a>, and some of the related <a href="./Category:OS_theory" title="Category:OS theory">OS theory</a>?</b></big>
</p>
</td></tr></tbody></table>
</center><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_2.png" class="image"><img alt="Difficulty 2.png" src="images/a/a1/Difficulty_2.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Medium</td></tr></tbody></table>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="D_Bare_Bones_With_LDC2#Requirements"><span class="tocnumber">1</span> <span class="toctext">Requirements</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="D_Bare_Bones_With_LDC2#References"><span class="tocnumber">2</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="D_Bare_Bones_With_LDC2#Instructions_to_build_the_kernel"><span class="tocnumber">3</span> <span class="toctext">Instructions to build the kernel</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="D_Bare_Bones_With_LDC2#boot.s"><span class="tocnumber">4</span> <span class="toctext">boot.s</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="D_Bare_Bones_With_LDC2#load.s"><span class="tocnumber">5</span> <span class="toctext">load.s</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="D_Bare_Bones_With_LDC2#defines.mac"><span class="tocnumber">6</span> <span class="toctext">defines.mac</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="D_Bare_Bones_With_LDC2#kmain.d"><span class="tocnumber">7</span> <span class="toctext">kmain.d</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Requirements">Requirements</span></h2>
<p>You'll need LDC2, Yasm and ld to compile the kernel.
</p><p>GRUB, mkisofs and QEMU could be used to test it.
</p>
<h2><span class="mw-headline" id="References">References</span></h2>
<p>Most sources and information come from osdev wiki and Xomb wiki.
</p><p><a rel="nofollow" class="external free" href="http://wiki.xomb.org/index.php?title=XOmB_Bare_Bones">http://wiki.xomb.org/index.php?title=XOmB_Bare_Bones</a>
</p>
<h2><span class="mw-headline" id="Instructions_to_build_the_kernel">Instructions to build the kernel</span></h2>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>yasm -o boot.o boot.s -felf64
yasm -o load.o load.s -felf64
ldc2 -c -nodefaultlib -code-model<span class="o">=</span>large -of<span class="o">=</span>kmain.o kmain.d
ld -nostdlib -nodefaultlibs -b elf64-x86-64 -T linker.ld -o kernel.bin boot.o load.o kmain.o
</pre></div>
<p>Build iso and test using QEMU
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>mkisofs -R -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size <span class="m">16</span> <span class="se">\</span>
 -boot-info-table -input-charset UTF-8 -o xomb.iso ./iso
qemu-system-x86_64 -cdrom xomb.iso
</pre></div>
<h2><span class="mw-headline" id="boot.s">boot.s</span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">; boot.s</span>

<span class="c1">; entry is from bootloader</span>

<span class="nf">section</span><span class="w"> </span><span class="no">.text</span><span class="w"></span>
<span class="nf">bits</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>

<span class="err">%</span><span class="nf">include</span><span class="w"> </span><span class="err">&quot;</span><span class="no">defines.mac</span><span class="err">&quot;</span><span class="w"></span>

<span class="c1">; externs given by the linker script</span>
<span class="nf">extern</span><span class="w"> </span><span class="no">_edata</span><span class="w"></span>
<span class="nf">extern</span><span class="w"> </span><span class="no">_end</span><span class="w"></span>

<span class="c1">; extern to the load.s</span>
<span class="nf">extern</span><span class="w"> </span><span class="no">start64</span><span class="w"></span>
<span class="nf">extern</span><span class="w"> </span><span class="no">stack</span><span class="w"></span>

<span class="c1">; define the starting point for this module</span>
<span class="nf">global</span><span class="w"> </span><span class="no">start</span><span class="w"></span>
<span class="nf">global</span><span class="w"> </span><span class="no">_start</span><span class="w"></span>
<span class="nl">start:</span><span class="w"></span>
<span class="nl">_start:</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Stash values for multiboot we won&#39;t touch until 64 bit mode</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">esi</span><span class="p">,</span><span class="w"> </span><span class="no">ebx</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">edi</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>

<span class="w">	</span><span class="nf">jmp</span><span class="w"> </span><span class="no">start32</span><span class="w"></span>

<span class="w">	</span><span class="c1">; the multiboot header needs to be aligned at</span>
<span class="w">	</span><span class="c1">; a 32 bit boundary</span>
<span class="w">	</span><span class="nf">align</span><span class="w"> </span><span class="mi">4</span><span class="w"></span>

<span class="w">	</span><span class="nl">multiboot_header:</span><span class="w"></span>

<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_MAGIC</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_FLAGS</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="p">-(</span><span class="no">MULTIBOOT_HEADER_MAGIC</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_FLAGS</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="no">multiboot_header</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="no">_start</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="p">(</span><span class="no">_edata-KERNEL_VMA_BASE</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="p">(</span><span class="no">_end-KERNEL_VMA_BASE</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="no">_start</span><span class="w"></span>

<span class="c1">; the 32 bit entry</span>
<span class="nf">global</span><span class="w"> </span><span class="no">start32</span><span class="w"></span>
<span class="nl">start32:</span><span class="w"></span>

<span class="w">	</span><span class="c1">; disable interrupts</span>
<span class="w">	</span><span class="nf">cli</span><span class="w"></span>

<span class="w">	</span><span class="c1">; enable 64-bit page translation table entries</span>
<span class="w">	</span><span class="c1">; by setting CR4.PAE = 1.</span>
<span class="w">	</span><span class="c1">;</span>
<span class="w">	</span><span class="c1">; Paging is not enabled until long mode.</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">cr4</span><span class="w"></span>
<span class="w">	</span><span class="nf">bts</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">cr4</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Create long mode page table and init CR3 to</span>
<span class="w">	</span><span class="c1">; point to the base of the PML4 page table</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">pml4_base</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">cr3</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Enable Long mode and SYSCALL / SYSRET instructions</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ecx</span><span class="p">,</span><span class="w"> </span><span class="mi">0xC0000080</span><span class="w"></span>
<span class="w">	</span><span class="nf">rdmsr</span><span class="w"></span>
<span class="w">	</span><span class="nf">bts</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="w"></span>
<span class="w">	</span><span class="nf">bts</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="nf">wrmsr</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Load the 32 bit GDT</span>
<span class="w">	</span><span class="nf">lgdt</span><span class="w"> </span><span class="p">[</span><span class="no">pGDT32</span><span class="p">]</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Load the 32 bit IDT</span>
<span class="w">	</span><span class="c1">; lidt [pIDT32]</span>

<span class="w">	</span><span class="c1">; establish a stack for 32 bit code</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">esp</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="no">stack-KERNEL_VMA_BASE</span><span class="p">)</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">STACK_SIZE</span><span class="w"></span>

<span class="w">	</span><span class="c1">; enable paging to activate long mode</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">cr0</span><span class="w"></span>
<span class="w">	</span><span class="nf">bts</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">31</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">cr0</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>

<span class="w">	</span><span class="nf">jmp</span><span class="w"> </span><span class="no">CS_KERNEL</span><span class="p">:(</span><span class="no">start64-KERNEL_VMA_BASE</span><span class="p">)</span><span class="w"></span>

<span class="nf">bits</span><span class="w"> </span><span class="mi">64</span><span class="w"></span>
<span class="nl">code64Jump:</span><span class="w"></span>
<span class="w">	</span><span class="nf">jmp</span><span class="w"> </span><span class="p">(</span><span class="no">start64-KERNEL_VMA_BASE</span><span class="p">)</span><span class="w"></span>




<span class="c1">; Data Structures Follow</span>
<span class="nf">bits</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>

<span class="c1">; 32 bit gdt</span>

<span class="nf">align</span><span class="w"> </span><span class="mi">4096</span><span class="w"></span>

<span class="nl">pGDT32:</span><span class="w"></span>
<span class="w">	</span><span class="nf">dw</span><span class="w"> </span><span class="no">GDT_END</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="no">GDT_TABLE</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="no">GDT_TABLE</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="no">KERNEL_VMA_BASE</span><span class="w"></span>

<span class="nl">GDT_TABLE:</span><span class="w"></span>

<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x0000000000000000</span><span class="w">	</span><span class="c1">; Null Descriptor</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x00cf9a000000ffff</span><span class="w">	</span><span class="c1">; CS_KERNEL32</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x00af9a000000ffff</span><span class="p">,</span><span class="mi">0</span><span class="w">	</span><span class="c1">; CS_KERNEL</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x00af93000000ffff</span><span class="p">,</span><span class="mi">0</span><span class="w">	</span><span class="c1">; DS_KERNEL</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x00affa000000ffff</span><span class="p">,</span><span class="mi">0</span><span class="w">	</span><span class="c1">; CS_USER</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x00aff3000000ffff</span><span class="p">,</span><span class="mi">0</span><span class="w">	</span><span class="c1">; DS_USER</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="w">					</span><span class="c1">;</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="w">					</span><span class="c1">;</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="w">					</span><span class="c1">;</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="w">					</span><span class="c1">;</span>

<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="w">				</span><span class="c1">; Three TLS descriptors</span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x0000f40000000000</span><span class="w">	</span><span class="c1">;</span>

<span class="nl">GDT_END:</span><span class="w"></span>




<span class="c1">; Temporary page tables</span>

<span class="c1">; These assume linking to 0xFFFF800000000000</span>
<span class="nf">align</span><span class="w"> </span><span class="mi">4096</span><span class="w"></span>
<span class="nl">pml4_base:</span><span class="w"></span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="p">(</span><span class="no">pml3_base</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x7</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">times</span><span class="w"> </span><span class="mi">255</span><span class="w"> </span><span class="no">dq</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="p">(</span><span class="no">pml3_base</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x7</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">times</span><span class="w"> </span><span class="mi">255</span><span class="w"> </span><span class="no">dq</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>

<span class="nf">align</span><span class="w"> </span><span class="mi">4096</span><span class="w"></span>
<span class="nl">pml3_base:</span><span class="w"></span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="p">(</span><span class="no">pml2_base</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x7</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">times</span><span class="w"> </span><span class="mi">511</span><span class="w"> </span><span class="no">dq</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>

<span class="nf">align</span><span class="w"> </span><span class="mi">4096</span><span class="w"></span>
<span class="nl">pml2_base:</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="nf">assign</span><span class="w"> </span><span class="no">i</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="na">rep</span><span class="w"> </span><span class="err">25</span><span class="w"></span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="p">(</span><span class="no">pml1_base</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">i</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x7</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="nf">assign</span><span class="w"> </span><span class="no">i</span><span class="w"> </span><span class="no">i</span><span class="err">+</span><span class="mi">4096</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="nf">endrep</span><span class="w"></span>

<span class="w">	</span><span class="nf">times</span><span class="w"> </span><span class="p">(</span><span class="mi">512-25</span><span class="p">)</span><span class="w"> </span><span class="no">dq</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>

<span class="nf">align</span><span class="w"> </span><span class="mi">4096</span><span class="w"></span>
<span class="c1">; 15 tables are described here</span>
<span class="c1">; this maps 40 MB from address 0x0</span>
<span class="c1">; to an identity mapping</span>
<span class="nl">pml1_base:</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="nf">assign</span><span class="w"> </span><span class="no">i</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="na">rep</span><span class="w"> </span><span class="err">512*25</span><span class="w"></span>
<span class="w">	</span><span class="nf">dq</span><span class="w"> </span><span class="p">(</span><span class="no">i</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">12</span><span class="p">)</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="mi">0x087</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="nf">assign</span><span class="w"> </span><span class="no">i</span><span class="w"> </span><span class="no">i</span><span class="err">+</span><span class="mi">1</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="nf">endrep</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="load.s">load.s</span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">; load.s</span>

<span class="c1">; entry is from boot.s</span>

<span class="nf">bits</span><span class="w"> </span><span class="mi">64</span><span class="w"></span>

<span class="c1">; Everywhere you see some weird addition logic</span>
<span class="c1">; This is to fit the addresses into 32 bit sizes</span>
<span class="c1">; Note, they will sign extend!</span>

<span class="nf">section</span><span class="w"> </span><span class="no">.text</span><span class="w"></span>

<span class="c1">; include useful definitions</span>
<span class="err">%</span><span class="nf">include</span><span class="w"> </span><span class="err">&quot;</span><span class="no">defines.mac</span><span class="err">&quot;</span><span class="w"></span>

<span class="c1">; extern to kmain.d</span>
<span class="nf">extern</span><span class="w"> </span><span class="no">kmain</span><span class="w"></span>

<span class="nf">global</span><span class="w"> </span><span class="no">start64</span><span class="w"></span>

<span class="nl">start64:</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Initialize the 64 bit stack pointer.</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">rsp</span><span class="p">,</span><span class="w"> </span><span class="p">((</span><span class="no">stack</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="no">KERNEL_VMA_BASE</span><span class="p">)</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">STACK_SIZE</span><span class="p">)</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Set up the stack for the return.</span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="no">CS_KERNEL</span><span class="w"></span>

<span class="w">	</span><span class="c1">; RAX - the address to return to</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="no">KERNEL_VMA_BASE</span><span class="w"> </span><span class="err">&gt;&gt;</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="w">	</span><span class="nf">shl</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="w">	</span><span class="nf">or</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="no">long_entry</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="p">(</span><span class="no">KERNEL_VMA_BASE</span><span class="w"> </span><span class="err">&amp;</span><span class="w"> </span><span class="mi">0xffffffff00000000</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="no">rax</span><span class="w"></span>

<span class="w">	</span><span class="c1">; Go into canonical higher half</span>
<span class="w">	</span><span class="c1">; It uses a trick to update the program counter</span>
<span class="w">	</span><span class="c1">;   across a 64 bit address space</span>
<span class="w">	</span><span class="nf">ret</span><span class="w"></span>

<span class="nl">long_entry:</span><span class="w"></span>

<span class="w">	</span><span class="c1">; From here on out, we are running instructions</span>
<span class="w">	</span><span class="c1">; within the higher half (0xffffffff80000000 ... )</span>

<span class="w">	</span><span class="c1">; We can safely upmap the lower half, we do not</span>
<span class="w">	</span><span class="c1">; need an identity mapping of this region</span>

<span class="w">	</span><span class="c1">; set up a 64 bit virtual stack</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="no">KERNEL_VMA_BASE</span><span class="w"> </span><span class="err">&gt;&gt;</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="w">	</span><span class="nf">shl</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="mi">32</span><span class="w"></span>
<span class="w">	</span><span class="nf">or</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="no">stack</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="p">(</span><span class="no">KERNEL_VMA_BASE</span><span class="w"> </span><span class="err">&amp;</span><span class="w"> </span><span class="mi">0xffffffff00000000</span><span class="p">)</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">rsp</span><span class="p">,</span><span class="w"> </span><span class="no">rax</span><span class="w"></span>

<span class="w">	</span><span class="c1">; set cpu flags</span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="nf">lss</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">rsp</span><span class="p">]</span><span class="w"></span>
<span class="w">	</span><span class="nf">popf</span><span class="w"></span>

<span class="w">	</span><span class="c1">; set the input/output permission level to 3</span>
<span class="w">	</span><span class="c1">; it will allow all access</span>

<span class="w">	</span><span class="nf">pushf</span><span class="w"></span>
<span class="w">	</span><span class="nf">pop</span><span class="w"> </span><span class="no">rax</span><span class="w"></span>
<span class="w">	</span><span class="nf">or</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x3000</span><span class="w"></span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="no">rax</span><span class="w"></span>
<span class="w">	</span><span class="nf">popf</span><span class="w"></span>

<span class="w">	</span><span class="c1">; update the multiboot struct to point to a</span>
<span class="w">	</span><span class="c1">; virtual address</span>
<span class="w">	</span><span class="nf">add</span><span class="w"> </span><span class="no">rsi</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="no">KERNEL_VMA_BASE</span><span class="w"> </span><span class="err">&amp;</span><span class="w"> </span><span class="mi">0xffffffff</span><span class="p">)</span><span class="w"></span>

<span class="w">	</span><span class="c1">; push the parameters (just in case)</span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="no">rsi</span><span class="w"></span>
<span class="w">	</span><span class="nf">push</span><span class="w"> </span><span class="no">rdi</span><span class="w"></span>

<span class="w">	</span><span class="c1">; call kmain</span>
<span class="w">	</span><span class="nf">call</span><span class="w"> </span><span class="no">kmain</span><span class="w"></span>



<span class="w">	</span><span class="c1">; we should not get here</span>

<span class="nl">haltloop:</span><span class="w"></span>

<span class="w">	</span><span class="nf">hlt</span><span class="w"></span>
<span class="w">	</span><span class="nf">jmp</span><span class="w"> </span><span class="no">haltloop</span><span class="w"></span>
<span class="w">	</span><span class="nf">nop</span><span class="w"></span>
<span class="w">	</span><span class="nf">nop</span><span class="w"></span>
<span class="w">	</span><span class="nf">nop</span><span class="w"></span>



<span class="c1">; stack space</span>
<span class="nf">global</span><span class="w"> </span><span class="no">stack</span><span class="w"></span>
<span class="nf">align</span><span class="w"> </span><span class="mi">4096</span><span class="w"></span>

<span class="nl">stack:</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="na">rep</span><span class="w"> </span><span class="nf">STACK_SIZE</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">	</span><span class="err">%</span><span class="nf">endrep</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="defines.mac">defines.mac</span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">; multiboot definitions</span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_MAGIC</span><span class="w">	</span><span class="mi">0x1BADB002</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">MULTIBOOT_HEADER_FLAGS</span><span class="w">	</span><span class="mi">0x00010003</span><span class="w"></span>

<span class="c1">; where is the kernel?</span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">KERNEL_VMA_BASE</span><span class="w">			</span><span class="mi">0xFFFF800000000000</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">KERNEL_LMA_BASE</span><span class="w">			</span><span class="mi">0x100000</span><span class="w"></span>

<span class="c1">; the gdt entry to use for the kernel</span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">CS_KERNEL</span><span class="w">				</span><span class="mi">0x10</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">CS_KERNEL32</span><span class="w">				</span><span class="mi">0x08</span><span class="w"></span>

<span class="c1">; other definitions</span>

<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">STACK_SIZE</span><span class="w">				</span><span class="mi">0x4000</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="kmain.d">kmain.d</span></h2>
<div class="mw-highlight mw-highlight-lang-d mw-content-ltr" dir="ltr"><pre><span></span><span class="k">module</span><span class="w"> </span><span class="n">kmaina</span><span class="p">;</span><span class="w"></span>
<span class="k">extern</span><span class="p">(</span><span class="n">C</span><span class="p">)</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="n">kmain</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">bootLoaderID</span><span class="p">,</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="p">*</span><span class="n">data</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="kt">int</span><span class="w"> </span><span class="n">ypos</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="c1">//Starting points of the cursor</span><span class="w"></span>
<span class="w">	</span><span class="kt">int</span><span class="w"> </span><span class="n">xpos</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="k">const</span><span class="w"> </span><span class="kt">uint</span><span class="w"> </span><span class="n">COLUMNS</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="mi">80</span><span class="p">;</span><span class="w"> </span><span class="c1">//Screensize</span><span class="w"></span>
<span class="w">	</span><span class="k">const</span><span class="w"> </span><span class="kt">uint</span><span class="w"> </span><span class="n">LINES</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="mi">24</span><span class="p">;</span><span class="w"></span>
<span class="w"> </span>
<span class="w">	</span><span class="kt">ubyte</span><span class="p">*</span><span class="w"> </span><span class="n">vidmem</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="k">cast</span><span class="p">(</span><span class="kt">ubyte</span><span class="p">*)</span><span class="mh">0xFFFF8000000B8000</span><span class="p">;</span><span class="w"> </span><span class="c1">//Video memory address</span><span class="w"></span>
<span class="w"> </span>
<span class="w">	</span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="p">&lt;</span><span class="w"> </span><span class="n">COLUMNS</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="n">LINES</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="mi">2</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="p">++)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="c1">//Loops through the screen and clears it</span><span class="w"></span>
<span class="w">			</span><span class="p">*(</span><span class="n">vidmem</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="w"> </span>
<span class="w">	</span><span class="p">*(</span><span class="n">vidmem</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="p">(</span><span class="n">xpos</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="n">ypos</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="n">COLUMNS</span><span class="p">)</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="mi">2</span><span class="p">)</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="sc">&#39;D&#39;</span><span class="w"> </span><span class="p">&amp;</span><span class="w"> </span><span class="mh">0xFF</span><span class="p">;</span><span class="w"> </span><span class="c1">//Prints the letter D</span><span class="w"></span>
<span class="w">	</span><span class="p">*(</span><span class="n">vidmem</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="p">(</span><span class="n">xpos</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="n">ypos</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="n">COLUMNS</span><span class="p">)</span><span class="w"> </span><span class="p">*</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="p">+</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="mh">0x07</span><span class="p">;</span><span class="w"> </span><span class="c1">//Sets the colour for D to be light grey (0x07)</span><span class="w"></span>
<span class="w"> </span>
<span class="w">	</span><span class="k">for</span><span class="w"> </span><span class="p">(;;)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="c1">//Loop forever. You can add your kernel logic here</span><span class="w"></span>
<span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
<span class="k">extern</span><span class="p">(</span><span class="n">C</span><span class="p">)</span><span class="w"> </span><span class="kt">void</span><span class="p">*</span><span class="w"> </span><span class="n">_Dmodule_ref</span><span class="p">;</span><span class="w"></span>
</pre></div>
<!-- 
NewPP limit report
Cached time: 20250212011211
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.074 seconds
Real time usage: 0.893 seconds
Preprocessor visited node count: 165/1000000
Post‐expand include size: 2242/2097152 bytes
Template argument size: 447/2097152 bytes
Highest expansion depth: 19/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 35166/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    7.379      1 -total
 57.20%    4.221      3 Template:If
 55.92%    4.126      1 Template:Rating
 49.63%    3.662      3 Template:Show1
 22.37%    1.651      1 Template:TutorialExplain
 17.15%    1.266      2 Template:NoteBox
 12.76%    0.941      3 Template:Eq
 12.24%    0.903      1 Template:In_Progress
 10.89%    0.804      1 Template:EditThis
  6.99%    0.516      1 Template:BeginnersWarning
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3292-0!canonical and timestamp 20250212011210 and revision id 26640.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;oldid=26640">https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;oldid=26640</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:In_Progress" title="Category:In Progress">In Progress</a></li><li><a href="./Category:Level_2_Tutorials" title="Category:Level 2 Tutorials">Level 2 Tutorials</a></li><li><a href="./Category:Bare_bones_tutorials" title="Category:Bare bones tutorials">Bare bones tutorials</a></li><li><a href="./Category:D" title="Category:D">D</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=D+Bare+Bones+With+LDC2" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="D_Bare_Bones_With_LDC2#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="D_Bare_Bones_With_LDC2" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:D_Bare_Bones_With_LDC2" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="D_Bare_Bones_With_LDC2"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/D_Bare_Bones_With_LDC2" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/D_Bare_Bones_With_LDC2" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;oldid=26640" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 2 November 2021, at 00:27.</li>
	<li id="footer-info-0">This page has been accessed 2,431 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=D_Bare_Bones_With_LDC2&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.074","walltime":"0.893","ppvisitednodes":{"value":165,"limit":1000000},"postexpandincludesize":{"value":2242,"limit":2097152},"templateargumentsize":{"value":447,"limit":2097152},"expansiondepth":{"value":19,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":35166,"limit":5000000},"timingprofile":["100.00%    7.379      1 -total"," 57.20%    4.221      3 Template:If"," 55.92%    4.126      1 Template:Rating"," 49.63%    3.662      3 Template:Show1"," 22.37%    1.651      1 Template:TutorialExplain"," 17.15%    1.266      2 Template:NoteBox"," 12.76%    0.941      3 Template:Eq"," 12.24%    0.903      1 Template:In_Progress"," 10.89%    0.804      1 Template:EditThis","  6.99%    0.516      1 Template:BeginnersWarning"]},"cachereport":{"timestamp":"20250212011211","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":91});});</script>
</body>
</html>