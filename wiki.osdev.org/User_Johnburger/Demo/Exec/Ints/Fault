<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>User:Johnburger/Demo/Exec/Ints/Fault - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"849266a7ec775be948739b28","wgCSPNonce":false,"wgCanonicalNamespace":"User","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":2,"wgPageName":"User:Johnburger/Demo/Exec/Ints/Fault","wgTitle":"Johnburger/Demo/Exec/Ints/Fault","wgCurRevisionId":21427,"wgRevisionId":21427,"wgArticleId":3557,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"User:Johnburger/Demo/Exec/Ints/Fault","wgRelevantArticleId":3557,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[
],"wgRestrictionMove":[],"wgRelevantUserName":"Johnburger","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="../../../../favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="../../../../opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="../../../../api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-2 ns-subject page-User_Johnburger_Demo_Exec_Ints_Fault rootpage-User_Johnburger skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-namespace">User</span><span class="mw-page-title-separator">:</span><span class="mw-page-title-main">Johnburger/Demo/Exec/Ints/Fault</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="https://wiki.osdev.org/User:Johnburger" title="User:Johnburger">User:Johnburger</a>&lrm; | <a href="../../../Demo" title="User:Johnburger/Demo">Demo</a></span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Fault#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Fault#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>This module provides two generic routines to handle the complexities of installing and handling Faults when a complete Task context is required for them.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Fault#Exec.Ints.Fault:"><span class="tocnumber">1</span> <span class="toctext">Exec.Ints.Fault:</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Fault#Exec.Ints.Fault.Handler:"><span class="tocnumber">2</span> <span class="toctext">Exec.Ints.Fault.Handler:</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Fault#Extant_Interrupts"><span class="tocnumber">3</span> <span class="toctext">Extant Interrupts</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="Fault#Scenario"><span class="tocnumber">3.1</span> <span class="toctext">Scenario</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="Fault#&quot;Solution&quot;"><span class="tocnumber">3.2</span> <span class="toctext">"Solution"</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="Fault#Caution"><span class="tocnumber">3.3</span> <span class="toctext">Caution</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-7"><a href="Fault#Demo/Exec/Ints/Fault.inc"><span class="tocnumber">4</span> <span class="toctext">Demo/Exec/Ints/Fault.inc</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Exec.Ints.Fault:"><code>Exec.Ints.Fault:</code></span></h2>
<p>This function sets up a mini-environment inside the Executive's <a href="../LDT" title="User:Johnburger/Demo/Exec/LDT">LDT</a>:
</p>
<ol><li>It allocates RAM for a Stack for the Handler, and adds it to the LDT;</li>
<li>It allocates RAM for a TSS, and initializes it to point to the Fault Handler;</li>
<li>It adds the new TSS to the GDT, and an alias to the TSS in the LDT;</li>
<li>It updates the Fault's entry in the IDT to point to the new TSS with a Task Gate.</li></ol>
<h2><span class="mw-headline" id="Exec.Ints.Fault.Handler:"><code>Exec.Ints.Fault.Handler:</code></span></h2>
<p>This function is assumed to be called by the Handler installed above:
</p>
<ol><li>It checks to see if Interrupts are OK (see <a href="Fault#Extant_Interrupts">below</a>);</li>
<li>It then references its own TSS alias, to fish out the Backlink Task field. It's a pity that Task State Segments aren't readable by Supervisor code - this is what the Alias created above is for;</li>
<li>It then brute-force copies the Descriptor for the Faulting TSS from the GDT into the (reserved) Fault Alias - that copies the <code>.Base</code> and <code>.Limit</code> fields across;</li>
<li>It then updates the Fault Alias to be a mere Data Descriptor, all ready for the generic Fault handler to fish out the register values for the Faulting Task;</li>
<li>It then <code>CALL</code>s the generic <a href="../../Ints/Fault" title="User:Johnburger/Demo/Ints/Fault">Fault</a> handler - a <code>FAR</code> call since it's in the Global Interrupt Code Segment, rather than this Local Code;</li>
<li>Upon return, it fixes up the Stack and <code>RET</code>urns for the next Fault.</li></ol>
<h2><span class="mw-headline" id="Extant_Interrupts">Extant Interrupts</span></h2>
<p>I assume that the user may want to invoke the Debugger while the registers are being shown, which requires the Keyboard - but unfortunately the Fault might have occurred during the servicing of an interrupt!
</p>
<h3><span class="mw-headline" id="Scenario">Scenario</span></h3>
<p>Here's the scenario:
</p>
<ul><li>The Stack is very close to its Limit.</li>
<li>A Timer interrupt occurs, which <code>PUSH</code>es <code>EFlags</code>, <code>CS</code> and <code>EIP</code> onto the Stack. The Stack is now full!</li>
<li>The Timer handler needs <code>EAX</code>, so <code>PUSH</code>es it - which underflows the Stack causing a Stack Fault exception.</li>
<li>The CPU switches Tasks to the Stack Fault Handler, which calls this generic Handler, which calls the generic Fault handler.</li></ul>
<p>But at this point the Timer interrupt is still extant: there's a new Stack ready and able to handle the interrupt, but no way of re-triggering it! That's not so bad for the Timer interrupt, but it has a higher priority inside the <a href="../../Dev/PIC" title="User:Johnburger/Demo/Dev/PIC">Priority Interrupt Controller</a> (PIC) than the Keyboard interrupt - so no Keypresses are going to get handled either. And of course it might have been the Keyboard interrupt that caused the Stack Fault, with the same effect: no Keypresses.
</p>
<h3><span id=".22Solution.22"></span><span class="mw-headline" id="&quot;Solution&quot;">"Solution"</span></h3>
<p>A na&#239;ve programmer might just emit an End-Of-Interrupt (EOI) command (or two!) to the PIC - but that's definitely not the correct strategy. The PIC can be interrogated to find out if there are any Interrupts in-service - which is what this code does.
</p><p>First, it isolates whether either the Timer or Keyboard interrupts are extant - they're the first two, with the highest priority, and I'm only interested in the Keyboard for this Demonstrator anyway. If the Timer interrupt is extant, it simply does an EOI - there'll be another in a millisecond anyway - and goes back to look again. If the Keyboard interrupt is extant, it calls its handler with an <code>INT</code> instruction.
</p><p>After that, the PIC should be sufficiently "satisfied" to let more Keyboard interrupts through - and we can use the Debugger!
</p>
<h3><span class="mw-headline" id="Caution">Caution</span></h3>
<p>Note that I do <i><b>not</b></i> advocate doing this in a real system. I coded it here because I wanted to be able to debug the various memory structures after a Stack Fault, and I wanted my keyboard back!
</p>
<h2><span id="Demo.2FExec.2FInts.2FFault.inc"></span><span class="mw-headline" id="Demo/Exec/Ints/Fault.inc"><code><a href="../../Demo" title="User:Johnburger/Demo/Demo">Demo</a>/<a href="../Exec" title="User:Johnburger/Demo/Exec/Exec">Exec</a>/<a href="Ints" title="User:Johnburger/Demo/Exec/Ints/Ints">Ints</a>/Fault.inc</code></span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">;</span>
<span class="c1">; Exec/Ints/Fault.inc</span>
<span class="c1">;</span>

<span class="c1">; This module is the generic Fault handler, for Faults that need their own</span>
<span class="c1">; runtime environment: Stack, TSS, etc. It presumes the following:</span>
<span class="c1">; 1) The LDT has three consecutive entries for the Fault Handler:</span>
<span class="c1">;    a) Stack - This will be created</span>
<span class="c1">;    b) TSS   - This will be created and set up.</span>
<span class="c1">;    c) Alias - This will be used by the Fault handler to alias the Faulting TSS</span>
<span class="c1">; 2) The .Fault function installs the Handler using the provided values.</span>
<span class="c1">; 3) The .Handler function will be called by the specific Fault handler.</span>

<span class="nl">Exec.Ints.Fault:</span><span class="w"></span>

<span class="nf">Exec.Ints.Fault.Stack.Size</span><span class="w">   </span><span class="no">EQU</span><span class="w">   </span><span class="mi">1000</span><span class="no">h</span><span class="w">        </span><span class="c1">; Give ourselves PLENTY of room!</span>

<span class="err">%</span><span class="nf">push</span><span class="w"> </span><span class="no">Ints.Fault</span><span class="w"> </span><span class="c1">; Let&#39;s not leave these %defines just lying around...</span>

<span class="err">%</span><span class="nf">define</span><span class="w">         </span><span class="nv">%$IDT.Entry</span><span class="w">     </span><span class="no">EBP</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">4</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w">         </span><span class="nv">%$LDT.Entry</span><span class="w">     </span><span class="no">EBP</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">8</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w">         </span><span class="nv">%$Handler</span><span class="w">       </span><span class="no">EBP</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">12</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w">         </span><span class="nv">%$Base</span><span class="w">          </span><span class="no">EBP</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w">         </span><span class="nv">%$TSS</span><span class="w">           </span><span class="no">EBP</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">20</span><span class="w"></span>

<span class="w">                </span><span class="nf">ENTER</span><span class="w">           </span><span class="mi">20</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="nv">%$IDT.Entry</span><span class="p">],</span><span class="no">EAX</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="nv">%$LDT.Entry</span><span class="p">],</span><span class="no">EBX</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="nv">%$Handler</span><span class="p">],</span><span class="no">EDX</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AX</span><span class="p">,</span><span class="no">Selector</span><span class="p">(</span><span class="no">Exec.LDT.Alias</span><span class="p">,</span><span class="w"> </span><span class="no">LDT</span><span class="p">,</span><span class="w"> </span><span class="no">RPL0</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">ES</span><span class="p">,</span><span class="no">AX</span><span class="w">         </span><span class="c1">; Point to LDT alias</span>

<span class="w">                </span><span class="c1">; Allocate Stack for Fault handler</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">ECX</span><span class="p">,</span><span class="no">Exec.Ints.Fault.Stack.Size</span><span class="w"></span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Exec.Alloc.RAM</span><span class="w"></span>
<span class="w">                </span><span class="nf">TEST</span><span class="w">            </span><span class="no">EAX</span><span class="p">,</span><span class="no">EAX</span><span class="w"></span>
<span class="w">                </span><span class="nf">JZ</span><span class="w">              </span><span class="no">.End</span><span class="w"></span>

<span class="w">                </span><span class="c1">; Store in LDT</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DL</span><span class="p">,</span><span class="no">Type.Mem</span><span class="p">(</span><span class="no">Stack</span><span class="p">,</span><span class="w"> </span><span class="no">DPL0</span><span class="p">,</span><span class="w"> </span><span class="no">RW</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DH</span><span class="p">,</span><span class="no">Gran.Mem</span><span class="p">(</span><span class="no">Byte</span><span class="p">,</span><span class="w">  </span><span class="no">Big</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Exec.Alloc.DT.Mem</span><span class="w"></span>

<span class="w">                </span><span class="c1">; Allocate TSS</span>
<span class="w">                </span><span class="nf">SLDT</span><span class="w">            </span><span class="no">AX</span><span class="w">            </span><span class="c1">; My LDT</span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Exec.Alloc.TSS</span><span class="w"></span>
<span class="w">                </span><span class="nf">TEST</span><span class="w">            </span><span class="no">EAX</span><span class="p">,</span><span class="no">EAX</span><span class="w"></span>
<span class="w">                </span><span class="nf">JZ</span><span class="w">              </span><span class="no">.End</span><span class="w"></span>

<span class="w">                </span><span class="c1">; Remember its Base</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="nv">%$Base</span><span class="p">],</span><span class="no">EAX</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EBX</span><span class="p">,[</span><span class="nv">%$LDT.Entry</span><span class="p">]</span><span class="w"></span>
<span class="w">                </span><span class="nf">OR</span><span class="w">              </span><span class="no">BX</span><span class="p">,</span><span class="no">WORD</span><span class="w"> </span><span class="no">x86.Seg.TI</span><span class="w">      </span><span class="c1">; Index inside LDT</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EDX</span><span class="p">,[</span><span class="nv">%$Handler</span><span class="p">]</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="no">ES</span><span class="p">:</span><span class="no">x86.TSS.SS</span><span class="p">],</span><span class="no">BX</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="no">ES</span><span class="p">:</span><span class="no">x86.TSS.CS</span><span class="p">],</span><span class="no">CS</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="no">ES</span><span class="p">:</span><span class="no">x86.TSS.EIP</span><span class="p">],</span><span class="no">EDX</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AH</span><span class="p">,</span><span class="no">System.TSS</span><span class="w">   </span><span class="c1">; Oh BOY is it a System TSS!</span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Exec.Alloc.TSS.Enable</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="nv">%$TSS</span><span class="p">],</span><span class="no">EBX</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AX</span><span class="p">,</span><span class="no">Selector</span><span class="p">(</span><span class="no">Exec.LDT.Alias</span><span class="p">,</span><span class="w"> </span><span class="no">LDT</span><span class="p">,</span><span class="w"> </span><span class="no">RPL0</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">ES</span><span class="p">,</span><span class="no">AX</span><span class="w">             </span><span class="c1">; Point to LDT alias again</span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EAX</span><span class="p">,[</span><span class="nv">%$Base</span><span class="p">]</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EBX</span><span class="p">,[</span><span class="nv">%$LDT.Entry</span><span class="p">]</span><span class="w"></span>
<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">EBX</span><span class="p">,</span><span class="no">x86.Desc_size</span><span class="w"> </span><span class="c1">; Point to .TSS alias in LDT</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DL</span><span class="p">,</span><span class="no">Type.Mem</span><span class="p">(</span><span class="no">Data</span><span class="p">,</span><span class="w"> </span><span class="no">DPL0</span><span class="p">,</span><span class="w"> </span><span class="no">NoRW</span><span class="p">)</span><span class="w"> </span><span class="c1">; TSS Alias</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DH</span><span class="p">,</span><span class="no">Gran.Mem</span><span class="p">(</span><span class="no">Byte</span><span class="p">,</span><span class="w"> </span><span class="no">Small</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Exec.Alloc.DT.Mem</span><span class="w"></span>

<span class="w">                </span><span class="c1">; Finally, update IDT Entry to tell it it&#39;s now handled by a TSS</span>
<span class="w">                </span><span class="nf">XOR</span><span class="w">             </span><span class="no">EAX</span><span class="p">,</span><span class="no">EAX</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EBX</span><span class="p">,[</span><span class="nv">%$IDT.Entry</span><span class="p">]</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">ECX</span><span class="p">,[</span><span class="nv">%$TSS</span><span class="p">]</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DL</span><span class="p">,</span><span class="no">Type.Sys</span><span class="p">(</span><span class="no">Task</span><span class="p">,</span><span class="w"> </span><span class="no">DPL0</span><span class="p">,</span><span class="w"> </span><span class="mi">286</span><span class="p">)</span><span class="w"> </span><span class="c1">; No &#39;386 variant</span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">Exec.Alloc.IDT</span><span class="w"></span>
<span class="nl">.End:</span><span class="w"></span>
<span class="w">                </span><span class="nf">LEAVE</span><span class="w"></span>
<span class="w">                </span><span class="nf">RET</span><span class="w"></span>
<span class="err">%</span><span class="nf">pop</span><span class="w"></span>
<span class="c1">;...............................................................................</span>
<span class="nl">.Handler:</span><span class="w"></span>
<span class="w">                </span><span class="nf">STI</span><span class="w">                           </span><span class="c1">; Interrupts may have been off</span>

<span class="nl">.TestIRQs:</span><span class="w"></span>
<span class="w">                </span><span class="c1">; Worse, Fault may have happened during an IRQ handler!</span>
<span class="w">                </span><span class="c1">; Isolate IRQ handlers that have started but aren&#39;t acknowledged</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="no">Dev.PIC.Cmd.ISR</span><span class="w"></span>
<span class="w">                </span><span class="nf">OUT</span><span class="w">             </span><span class="no">Dev.PIC.A.Cmd</span><span class="p">,</span><span class="no">AL</span><span class="w"></span>
<span class="w">                </span><span class="nf">JMP</span><span class="w">             </span><span class="no">$</span><span class="err">+</span><span class="mi">2</span><span class="w">             </span><span class="c1">; Wait for I/O bus</span>
<span class="w">                </span><span class="nf">IN</span><span class="w">              </span><span class="no">AL</span><span class="p">,</span><span class="no">Dev.PIC.A.Cmd</span><span class="w"></span>

<span class="w">                </span><span class="nf">AND</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="no">Dev.PIC.A.Key</span><span class="err">|</span><span class="no">Dev.PIC.A.Timer</span><span class="c1">; Only worried about these</span>
<span class="w">                </span><span class="nf">JZ</span><span class="w">              </span><span class="no">.NoInterrupts</span><span class="w">    </span><span class="c1">; Nothing to worry about!</span>
<span class="w">                </span><span class="nf">CMP</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="no">Dev.PIC.A.Key</span><span class="w"> </span><span class="c1">; If keypress outstanding...</span>
<span class="w">                </span><span class="nf">JE</span><span class="w">              </span><span class="no">.KeyInterrupt</span><span class="w">    </span><span class="c1">; Handle it</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AL</span><span class="p">,</span><span class="no">Dev.PIC.Cmd.EOI</span><span class="w"> </span><span class="c1">; Acknowledge</span>
<span class="w">                </span><span class="nf">OUT</span><span class="w">             </span><span class="no">Dev.PIC.A.Cmd</span><span class="p">,</span><span class="no">AL</span><span class="w"> </span><span class="c1">; current IRQ (should be Timer)</span>
<span class="w">                </span><span class="nf">JMP</span><span class="w">             </span><span class="no">.TestIRQs</span><span class="w">        </span><span class="c1">; And keep looking</span>

<span class="nl">.KeyInterrupt:</span><span class="w"></span>
<span class="w">                </span><span class="nf">INT</span><span class="w">             </span><span class="p">(</span><span class="no">IDT.Key-IDT</span><span class="p">)</span><span class="err">/</span><span class="no">x86.Desc_size</span><span class="w"> </span><span class="c1">; Re-invoke the Key interrupt</span>
<span class="c1">; Continue</span>
<span class="nl">.NoInterrupts:</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AX</span><span class="p">,</span><span class="no">Selector</span><span class="p">(</span><span class="no">GDT.Alias</span><span class="p">,</span><span class="w"> </span><span class="no">GDT</span><span class="p">,</span><span class="w"> </span><span class="no">RPL0</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">DS</span><span class="p">,</span><span class="no">AX</span><span class="w">         </span><span class="c1">; Need information from GDT</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">AX</span><span class="p">,</span><span class="no">Selector</span><span class="p">(</span><span class="no">Exec.LDT.Alias</span><span class="p">,</span><span class="w"> </span><span class="no">LDT</span><span class="p">,</span><span class="w"> </span><span class="no">RPL0</span><span class="p">)</span><span class="w"></span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">ES</span><span class="p">,</span><span class="no">AX</span><span class="w">         </span><span class="c1">; Need to update alias in LDT</span>
<span class="w">                </span><span class="nf">LEA</span><span class="w">             </span><span class="no">AX</span><span class="p">,[</span><span class="no">BX</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">x86.Seg.TI</span><span class="p">]</span><span class="w"> </span><span class="c1">; Need my TSS alias in LDT</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">FS</span><span class="p">,</span><span class="no">AX</span><span class="w"></span>

<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">EBX</span><span class="p">,</span><span class="no">x86.Desc_size</span><span class="w"> </span><span class="c1">; Point to TSS alias in LDT</span>

<span class="w">                </span><span class="nf">MOVZX</span><span class="w">           </span><span class="no">ESI</span><span class="p">,</span><span class="no">WORD</span><span class="w"> </span><span class="p">[</span><span class="no">FS</span><span class="p">:</span><span class="no">x86.TSS.Back</span><span class="p">]</span><span class="w"> </span><span class="c1">; Who called me?</span>

<span class="w">                </span><span class="nf">PUSH</span><span class="w">            </span><span class="no">ESI</span><span class="w">               </span><span class="c1">; Need this on Stack to display Task</span>

<span class="w">                </span><span class="c1">; Copy faulting TSS definition, then alter .Type to make it an alias</span>
<span class="w">                </span><span class="nf">CLD</span><span class="w">                               </span><span class="c1">; Work forwards</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">ECX</span><span class="p">,</span><span class="no">x86.Desc_size</span><span class="w"> </span><span class="err">/</span><span class="w"> </span><span class="mi">4</span><span class="w">      </span><span class="c1">; Number of DWords</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EDI</span><span class="p">,</span><span class="no">EBX</span><span class="w"></span>
<span class="w">                </span><span class="nf">REP</span><span class="w">             </span><span class="no">MOVSD</span><span class="w">             </span><span class="c1">; Brute force details across!</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="p">[</span><span class="no">ES</span><span class="p">:</span><span class="no">EBX</span><span class="err">+</span><span class="no">x86.Desc.Type</span><span class="p">],</span><span class="no">BYTE</span><span class="w"> </span><span class="no">Type.Mem</span><span class="p">(</span><span class="no">Data</span><span class="p">,</span><span class="w"> </span><span class="no">DPL0</span><span class="p">,</span><span class="w"> </span><span class="no">NoRW</span><span class="p">)</span><span class="w"></span>

<span class="w">                </span><span class="nf">LEA</span><span class="w">             </span><span class="no">AX</span><span class="p">,[</span><span class="no">BX</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="no">x86.Seg.TI</span><span class="p">]</span><span class="w"> </span><span class="c1">; TSS alias in LDT</span>
<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">FS</span><span class="p">,</span><span class="no">AX</span><span class="w"></span>

<span class="w">                </span><span class="nf">MOV</span><span class="w">             </span><span class="no">EDI</span><span class="p">,[</span><span class="no">ESP</span><span class="err">+</span><span class="mi">8</span><span class="p">]</span><span class="w">       </span><span class="c1">; Load Interrupt number</span>
<span class="w">                </span><span class="nf">CALL</span><span class="w">            </span><span class="no">GDT.Ints</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="no">Ints.Fault.External</span><span class="w"></span>

<span class="w">                </span><span class="nf">ADD</span><span class="w">             </span><span class="no">ESP</span><span class="p">,</span><span class="mi">4</span><span class="w">             </span><span class="c1">; Ignore Back Task</span>
<span class="w">                </span><span class="nf">RET</span><span class="w"></span>
</pre></div>
<!-- 
NewPP limit report
Cached time: 20250211171223
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.027 seconds
Real time usage: 0.168 seconds
Preprocessor visited node count: 28/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 24067/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3557-0!canonical and timestamp 20250211171222 and revision id 21427.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Exec/Ints/Fault&amp;oldid=21427">https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Exec/Ints/Fault&amp;oldid=21427</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="../../../../Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=User%3AJohnburger%2FDemo%2FExec%2FInts%2FFault" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Fault#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-user" class="selected mw-list-item"><a href="Fault" title="View the user page [c]" accesskey="c"><span>User page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User_talk:Johnburger/Demo/Exec/Ints/Fault&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Fault"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Exec/Ints/Fault&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Exec/Ints/Fault&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="../../../../index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="../../../../index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="../../../../Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="../../../../Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="../../../../OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="../../../../OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="../../../../OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="../../../../Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="../../../../Special:WhatLinksHere/User:Johnburger/Demo/Exec/Ints/Fault" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/User:Johnburger/Demo/Exec/Ints/Fault" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-contributions" class="mw-list-item"><a href="../../../../Special:Contributions/Johnburger" title="A list of contributions by this user"><span>User contributions</span></a></li><li id="t-log" class="mw-list-item"><a href="../../../../Special:Log/Johnburger"><span>Logs</span></a></li><li id="t-userrights" class="mw-list-item"><a href="../../../../Special:UserRights/Johnburger"><span>View user groups</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="../../../../Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Exec/Ints/Fault&amp;oldid=21427" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Exec/Ints/Fault&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 29 August 2017, at 09:22.</li>
	<li id="footer-info-0">This page has been accessed 511 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="../../../../OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="../../../../OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="../../../../OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Exec/Ints/Fault&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="../../../../resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="../../../../resources/assets/poweredby_mediawiki_132x47.png 1.5x, ../../../../resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.027","walltime":"0.168","ppvisitednodes":{"value":28,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":24067,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211171223","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":274});});</script>
</body>
</html>