<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>User:Johnburger/Demo/Boot/Boot - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"1e8c073725ce00ad29929eba","wgCSPNonce":false,"wgCanonicalNamespace":"User","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":2,"wgPageName":"User:Johnburger/Demo/Boot/Boot","wgTitle":"Johnburger/Demo/Boot/Boot","wgCurRevisionId":21355,"wgRevisionId":21355,"wgArticleId":3486,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"User:Johnburger/Demo/Boot/Boot","wgRelevantArticleId":3486,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],
"wgRestrictionMove":[],"wgRelevantUserName":"Johnburger","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="../../../favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="../../../opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="../../../api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-2 ns-subject page-User_Johnburger_Demo_Boot_Boot rootpage-User_Johnburger skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-namespace">User</span><span class="mw-page-title-separator">:</span><span class="mw-page-title-main">Johnburger/Demo/Boot/Boot</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="https://wiki.osdev.org/User:Johnburger" title="User:Johnburger">User:Johnburger</a>&lrm; | <a href="../../Demo" title="User:Johnburger/Demo">Demo</a></span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Boot#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Boot#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>The following code is the entire Real Mode code in the system. It prepares the system for Protected Mode by setting up relevant tables, but it also calls the BIOS to perform tasks, or get information to save away for later. The final thing it does is "stamp" the code with a BIOS signature, so that the various boot loaders will recognize it as a valid - albeit never-seen-before - Boot Sector.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Boot#Boot_Sector_size"><span class="tocnumber">1</span> <span class="toctext">Boot Sector size</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Boot#Fall-through_Code"><span class="tocnumber">1.1</span> <span class="toctext">Fall-through Code</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="Boot#Common_JMP_Code"><span class="tocnumber">1.2</span> <span class="toctext">Common JMP Code</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="Boot#Memory_Map"><span class="tocnumber">2</span> <span class="toctext">Memory Map</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Boot#Demo/Boot/Boot.inc"><span class="tocnumber">3</span> <span class="toctext">Demo/Boot/Boot.inc</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Boot_Sector_size">Boot Sector size</span></h2>
<p>One thing to note is that we only have 512 bytes to do everything. If all options are enabled (<code>BIOS.VGA.90x60</code> takes a <em>lot</em> of work!) there are only a handful of bytes left. For this reason the following code doesn't use the formal, correct, and highly-laudable modular programming technique of defined subroutines that are individually <code>CALL</code>ed - I don't have the space to waste on three bytes for every call, and one byte for every return.
</p>
<h3><span class="mw-headline" id="Fall-through_Code">Fall-through Code</span></h3>
<p>Instead, everything is written as a stream-of-consciousness - sorry, -execution - paradigm where the tail end of one module (yes, there are still modules!) simply falls through to the start of the next one. There are places where <code>CALL</code>/<code>RET</code> are used - whenever the same bunch of code needs to be executed more than once, I put it into a subroutine. But that pesky <code>RET</code> at the end interferes with the stream-of-cons... er... -execution paradigm, and I have to <code>JMP</code> over it.
</p><p>But sometimes I use a different technique. If I'm about to fall into the subroutine with carefully-set-up register values, and when I've finished I'm about to <code>JMP</code> past the subroutine anyway, instead I cheat. Instead of
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="w">             </span><span class="nf">CALL</span><span class="w">        </span><span class="no">.Sub</span><span class="w"></span>
<span class="w">             </span><span class="nf">JMP</span><span class="w">         </span><span class="no">.Past</span><span class="w"></span>
<span class="nl">.Sub:</span><span class="w"></span>
<span class="c1">; Do stuff here</span>
<span class="w">             </span><span class="nf">RET</span><span class="w"></span>
<span class="nl">.Past:</span><span class="w"></span>
</pre></div>
<p>I use an assembly trick and code the following:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="w">             </span><span class="nf">PUSH</span><span class="w">        </span><span class="no">.Past</span><span class="w">   </span><span class="c1">; Fake a CALL from Past</span>
<span class="nl">.Sub:</span><span class="w"></span>
<span class="c1">; Do stuff here</span>
<span class="w">             </span><span class="nf">RET</span><span class="w"></span>
<span class="nl">.Past:</span><span class="w"></span>
</pre></div>
<p>When the <code>RET</code> is executed, it <code>POP</code>s off the return address - which is Past where I want to be!
</p><p>I don't normally condone this kind of coding, but sometimes it's necessary in constrained environments - and this is very constrained indeed!
</p>
<h3><span class="mw-headline" id="Common_JMP_Code">Common <code>JMP</code> Code</span></h3>
<p>Having justified my use of a coding technique that would have <a rel="nofollow" class="external text" href="https://en.wikipedia.org/wiki/Niklaus_Wirth%7C">Niklaus Wirth</a> turning in his (hopefully long-postponed!) grave, I need to mention a more common coding technique that I also use, this time in code that is less constrained. I have some code that is repeated a number of times, but is extremely similar. Given a little initialization code, the rest is identical. In those cases, I do use the following construct:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nl">Entry1:</span><span class="w"></span>
<span class="w">          </span><span class="c1">; Perform setup for situation #1</span>
<span class="w">          </span><span class="nf">JMP</span><span class="w">       </span><span class="no">CommonCode</span><span class="w"></span>
<span class="nl">Entry2:</span><span class="w"></span>
<span class="w">          </span><span class="c1">; Perform setup for situation #2</span>
<span class="w">          </span><span class="nf">JMP</span><span class="w">       </span><span class="no">CommonCode</span><span class="w"></span>
<span class="nl">Entry3:</span><span class="w"></span>
<span class="w">          </span><span class="c1">; Perform setup for situation #3</span>
<span class="w">          </span><span class="nf">JMP</span><span class="w">       </span><span class="no">CommonCode</span><span class="w"></span>
<span class="nl">Entry4:</span><span class="w"></span>
<span class="w">          </span><span class="c1">; Perform setup for situation #4</span>
<span class="c1">;         JMP       CommonCode</span>
<span class="nl">CommonCode:</span><span class="w"></span>
<span class="w">          </span><span class="c1">; Do what&#39;s common</span>
</pre></div>
<p>For <em>this</em> technique, I am not apologetic. In fact, the above also demonstrates another technique I use: sometimes code is "obvious", usually by pattern with other code around it, but the effect of that obvious code is a no-effect - in other words, a waste of space. I have three choices:
</p>
<ol><li>Leave the code in, taking up some measly number of bytes;</li>
<li>Remove the code completely, meaning that in the future I might just notice the break in the pattern and unthinkingly add it in again; or</li>
<li>Leave the code in, but comment it out to prevent it from being assembled.</li></ol>
<p>Needless to say, I chose the last option.
</p>
<h2><span class="mw-headline" id="Memory_Map">Memory Map</span></h2>
<p>At this point in time (BIOS Boot complete), the Memory Map looks something like:
</p>
<table class="wikitable">
<tbody><tr>
<th>Address
</th>
<th>Usage
</th></tr>
<tr>
<td><code>0000_0000h</code>
</td>
<td>Interrupt Vector Table
</td></tr>
<tr>
<td><code>0000_0400h</code>
</td>
<td><code>SS:SP</code> Stack Top <code>*</code>
</td></tr>
<tr>
<td><code>0000_0400h</code>
</td>
<td>BIOS Data Area
</td></tr>
<tr>
<td><code>0000_0500h</code>
</td>
<td>Available
</td></tr>
<tr>
<td><code>0000_0600h</code>
</td>
<td>Master Boot Record (MBR) <code>**</code>
</td></tr>
<tr>
<td><code>0000_0800h</code>
</td>
<td>Available
</td></tr>
<tr>
<td><code>0000_7C00h</code>
</td>
<td>BIOS-loaded Boot Sector
</td></tr>
<tr>
<td><code>0000_7E00h</code>
</td>
<td>Available
</td></tr>
<tr>
<td><code>0009_F???h</code> <code>***</code>
</td>
<td>Extended BIOS Data Area
</td></tr>
<tr>
<td><code>000A_0000h</code>
</td>
<td>Adapter / ROM Area
</td></tr>
<tr>
<td><code>000B_8000h</code>
</td>
<td>Text Video Memory
</td></tr>
<tr>
<td><code>000F_0000h</code>
</td>
<td>BIOS ROM
</td></tr>
<tr>
<td><code>0010_0000h</code>
</td>
<td>High Memory <code>****</code>
</td></tr></tbody></table>
<p><code>*</code> Yes! Believe it or not, the BIOS initializes the stack to point to the end of the Interrupt Vector table. Every <code>CALL</code> or <code>PUSH</code> you make adds a new, interesting vector to the IVT...
<br />
<code>**</code> The MBR only exists here if the PC has booted from a Hard Drive.
<br />
<code>***</code> An INT 12h will help identify this value.
<br />
<code>****</code> Note that this memory is only accessible in Protected Mode - except for the first 64 kiB (less 16 bytes), which you can access with a Segment Register set to <code>0FFFFh</code> as long as the A20 Gate is off. By the way: <strong>DON'T DO THIS!</strong>
</p>
<h2><span id="Demo.2FBoot.2FBoot.inc"></span><span class="mw-headline" id="Demo/Boot/Boot.inc"><code><a href="../Demo" title="User:Johnburger/Demo/Demo">Demo</a>/<a href="../Overview#Boot_Sequence" title="User:Johnburger/Demo/Overview">Boot</a>/Boot.inc</code></span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">;</span>
<span class="c1">; Boot/Boot.inc</span>
<span class="c1">;</span>

<span class="c1">; This is the BIOS Boot entry point. It runs in Real Mode, and assumes the</span>
<span class="c1">; standard BIOS Boot Specification 1.01.</span>
<span class="c1">;</span>
<span class="c1">; It performs the following actions:</span>
<span class="c1">; 1) Loads the rest of the code into RAM;</span>
<span class="c1">; 2) Gets some information from the soon-to-be-unusable BIOS;</span>
<span class="c1">; 3) Sets up the PC for Protected Mode;</span>
<span class="c1">; 4) JMPs to the freshly-loaded Protected Mode code</span>
<span class="c1">; After that, the memory used to hold this code is avaiable to the system.</span>
<span class="c1">;</span>
<span class="c1">; Note that one of the goals of the Boot sector is to jettison itself:</span>
<span class="c1">; 7C00h is such an awkward location, so ideally after doing all the Real Mode</span>
<span class="c1">; initialisation, we can JMP to Protected Mode and simply leave this code behind.</span>

<span class="c1">; To save space, I take advantage of some HORRIBLE things you can do with</span>
<span class="c1">; assembly language: PUSHing values to fake CALLs, or worse, SELF-MODIFYING CODE!</span>
<span class="c1">; In Protected Mode, this last is very difficult to organise - and unreliable</span>
<span class="c1">; with later processors that have on-board caches - so not worth it.</span>
<span class="c1">; In Real Mode, this can be very useful as a register- and code-saving device!</span>

<span class="c1">; To save space, I&#39;ve done away with byte-wasting CALLs and RETs for &quot;modular&quot;</span>
<span class="c1">; programming. Not that modules aren&#39;t in and of themselves useful - indeed,</span>
<span class="c1">; they&#39;re still modularised within their own little files - but the result is</span>
<span class="c1">; simply a stream of bytes to execute. Where I have defined subroutines to be</span>
<span class="c1">; CALLed, the stream of code has to either JMP over the subroutine&#39;s RET, or</span>
<span class="c1">; a CALL is faked by PUSHing the desired continuation address onto the stack.</span>

<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="w">                </span><span class="nf">SEGMENT</span><span class="w">         </span><span class="no">Real</span><span class="w">  </span><span class="no">VSTART</span><span class="err">=</span><span class="mi">0</span><span class="w">  </span><span class="no">ALIGN</span><span class="err">=</span><span class="mi">1</span><span class="w"></span>

<span class="w">                </span><span class="nf">USE16</span><span class="w">                      </span><span class="c1">; Real Mode? 16 bits!</span>

<span class="c1">; At this point, DL is probably the drive number of the Boot Drive.</span>
<span class="c1">; ES:SI is possibly a pointer to the MBR Partition table entry (See Load.inc).</span>
<span class="c1">; In any case: don&#39;t clobber DL, ES or SI before Load.inc!</span>

<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">Entry.inc</span><span class="err">&quot;</span><span class="w"> </span><span class="c1">; Entry code to initialise important registers</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">CPU.inc</span><span class="err">&quot;</span><span class="w">  </span><span class="c1">; Check CPU is (at least) a &#39;386</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">Load.inc</span><span class="err">&quot;</span><span class="w"> </span><span class="c1">; Load Protected Mode code</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">IDT.inc</span><span class="err">&quot;</span><span class="w">  </span><span class="c1">; Move IDT to final location</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">RAM.inc</span><span class="err">&quot;</span><span class="w">  </span><span class="c1">; Get RAM size</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">A20.inc</span><span class="err">&quot;</span><span class="w">  </span><span class="c1">; Enable A20 gate</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">Key.inc</span><span class="err">&quot;</span><span class="w">  </span><span class="c1">; Speed up keyboard</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">VGA.inc</span><span class="err">&quot;</span><span class="w">  </span><span class="c1">; Switch Video mode</span>
<span class="c1">;-------------------------------------------------------------------------------</span>
<span class="err">%</span><span class="nf">include</span><span class="w">        </span><span class="err">&quot;</span><span class="no">Boot</span><span class="err">/</span><span class="no">PM.inc</span><span class="err">&quot;</span><span class="w">   </span><span class="c1">; Switch to Protected Mode</span>
<span class="c1">;-------------------------------------------------------------------------------</span>

<span class="c1">; At this point, we still must be inside the first 512-byte Boot sector.</span>
<span class="c1">; We need to confirm to the BIOS that this sector is a valid Boot sector by</span>
<span class="c1">; having BIOS.Sig.Value at the correct place.</span>
<span class="c1">; Note that if the previous code was too large, the following Pad calculation</span>
<span class="c1">; will underflow and generate an error.</span>

<span class="nf">Real.Padding</span><span class="w">    </span><span class="no">EQU</span><span class="w">             </span><span class="no">BIOS.Sig.Pos</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="p">(</span><span class="no">$</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="no">$$</span><span class="p">)</span><span class="w"></span>
<span class="nf">TIMES</span><span class="w">           </span><span class="no">Real.Padding</span><span class="w">    </span><span class="no">DB</span><span class="w"> </span><span class="mi">00</span><span class="no">h</span><span class="w"></span>

<span class="w">                </span><span class="nf">DW</span><span class="w">              </span><span class="no">BIOS.Sig.Value</span><span class="w"></span>
</pre></div>
<!-- 
NewPP limit report
Cached time: 20250211171118
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.033 seconds
Real time usage: 0.575 seconds
Preprocessor visited node count: 33/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 10925/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3486-0!canonical and timestamp 20250211171117 and revision id 21355.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Boot/Boot&amp;oldid=21355">https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Boot/Boot&amp;oldid=21355</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="../../../Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=User%3AJohnburger%2FDemo%2FBoot%2FBoot" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Boot#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-user" class="selected mw-list-item"><a href="Boot" title="View the user page [c]" accesskey="c"><span>User page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User_talk:Johnburger/Demo/Boot/Boot&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Boot"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Boot/Boot&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Boot/Boot&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="../../../index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="../../../index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="../../../Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="../../../Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="../../../OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="../../../OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="../../../OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="../../../Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="../../../Special:WhatLinksHere/User:Johnburger/Demo/Boot/Boot" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/User:Johnburger/Demo/Boot/Boot" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-contributions" class="mw-list-item"><a href="../../../Special:Contributions/Johnburger" title="A list of contributions by this user"><span>User contributions</span></a></li><li id="t-log" class="mw-list-item"><a href="../../../Special:Log/Johnburger"><span>Logs</span></a></li><li id="t-userrights" class="mw-list-item"><a href="../../../Special:UserRights/Johnburger"><span>View user groups</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="../../../Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Boot/Boot&amp;oldid=21355" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Boot/Boot&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 28 August 2017, at 21:11.</li>
	<li id="footer-info-0">This page has been accessed 1,177 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="../../../OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="../../../OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="../../../OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=User:Johnburger/Demo/Boot/Boot&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="../../../resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="../../../resources/assets/poweredby_mediawiki_132x47.png 1.5x, ../../../resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.033","walltime":"0.575","ppvisitednodes":{"value":33,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":10925,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211171118","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":687});});</script>
</body>
</html>