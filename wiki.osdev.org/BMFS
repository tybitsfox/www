<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>BMFS - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"02c259ea9bc4f44fb330de05","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"BMFS","wgTitle":"BMFS","wgCurRevisionId":27496,"wgRevisionId":27496,"wgArticleId":4263,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Filesystems"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"BMFS","wgRelevantArticleId":4263,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":
false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-BMFS rootpage-BMFS skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">BMFS</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="BMFS#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="BMFS#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="BMFS#BMFS"><span class="tocnumber">1</span> <span class="toctext">BMFS</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="BMFS#Disclaimer"><span class="tocnumber">1.1</span> <span class="toctext">Disclaimer</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="BMFS#A_Little_History"><span class="tocnumber">2</span> <span class="toctext">A Little History</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="BMFS#Building_BMFS"><span class="tocnumber">3</span> <span class="toctext">Building BMFS</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="BMFS#Initializing_the_File_System"><span class="tocnumber">3.1</span> <span class="toctext">Initializing the File System</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="BMFS#Opening_a_File"><span class="tocnumber">3.2</span> <span class="toctext">Opening a File</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="BMFS#Opening_a_Directory"><span class="tocnumber">3.3</span> <span class="toctext">Opening a Directory</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="BMFS#Creating_a_File_System_on_the_Development_Machine"><span class="tocnumber">3.4</span> <span class="toctext">Creating a File System on the Development Machine</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="BMFS#Reporting_Bugs"><span class="tocnumber">3.5</span> <span class="toctext">Reporting Bugs</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="BMFS#Going_Further"><span class="tocnumber">3.6</span> <span class="toctext">Going Further</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="BMFS">BMFS</span></h2>
<p>BMFS is a simple file system in active development that supports regular files and directories.
</p>
<h3><span class="mw-headline" id="Disclaimer">Disclaimer</span></h3>
<p>I am a contributor of BMFS. There's plenty of other file system implementations that could be used in an OS project.
</p><p>BMFS, while it has existed for some time, is considered a new project. Be wary of bugs.
</p>
<h2><span class="mw-headline" id="A_Little_History">A Little History</span></h2>
<p>BMFS was a file system initially designed by Ian Seyler for the BareMetal-OS project. Since then, it has been put into a separate project and the development continued there.
</p><p>In it's initial design, it only supported a root directory with a maximum of 64 files. The idea was to have a simple file system that supported just enough of a file system for a database program to use.
</p><p>The development continued and the design changed a bit, and now it supports sub-directories, file permissions, user and group IDs, and more.
</p><p>It also comes with a user space program to construct file systems and examine their contents, and a <a href="FUSE" title="FUSE">FUSE</a> binding to use BMFS on Linux systems.
</p><p>The project is now being constantly improved, and one of its design goals is to be used in any other operating system.
</p>
<h2><span class="mw-headline" id="Building_BMFS">Building BMFS</span></h2>
<p>While using the instructions from the project is the most reliable way to build the project, this should also help build the project.
</p><p>Starting by cloning the project using git, and entering the directory.
</p>
<pre>   git clone <a rel="nofollow" class="external free" href="https://github.com/ReturnInfinity/BMFS">https://github.com/ReturnInfinity/BMFS</a>
   cd BMFS
</pre>
<p>Then use GNU Make to build the project, specifying that you are cross compiling using the CONFIG variable.
</p>
<pre>   make CONFIG=cross
</pre>
<p>The cross compiler here defaults to x86_64-none-elf-gcc. If you would like to use a different target, use the CROSS_COMPILE variable like this:
</p>
<pre>   make CONFIG=cross CROSS_COMPILE=aarch64-none-elf-
</pre>
<p>Once the project is built, you can install it in a location of your choosing by using the PREFIX variable, and the install target.
</p>
<pre>   make CONFIG=cross install PREFIX=/home/taylor/.local
</pre>
<p>Now, you have the library libbmfs.a installed at /home/taylor/.local/lib and the headers installed at /home/taylor/include
</p><p>That means you'll have to pass those paths to GCC, by doing something like this:
</p>
<pre>   gcc -I /home/taylor/.local/include -L /home/taylor/.local/lib
</pre>
<p>You can also install it to /usr/local, to avoid having to do that.
</p>
<h3><span class="mw-headline" id="Initializing_the_File_System">Initializing the File System</span></h3>
<p>Once the project is built, and your build system has the information to use the library, you can start writing code.
</p><p>The header bmfs/bmfs.h is there for convenience to include all the headers used in the project.
</p><p>Start by including that header in your code.
</p>
<pre>   #include &lt;bmfs/bmfs.h&gt;
   
   void open_file(const char *path) {
       /* Do stuff here */
   }
</pre>
<p>Once that's done, you'll need to tell BMFS how to read the disk that contains the file system.
</p><p>You can do that using the BMFSDisk structure.
</p>
<pre>   int my_disk_read(void *disk_data, void *buf, bmfs_uint64 len, bmfs_uint64 *read_len);
   
   int my_disk_seek(void *disk_data, bmfs_uint64_t pos, int whence);
   
   void open_file(const char *path) {
   
       struct BMFSDisk disk;
   
       bmfs_disk_init(&amp;disk);
       disk.seek = my_disk_seek;
       disk.read = my_disk_read;
   }
   
   /* Implement my_disk_read and my_disk_seek */
</pre>
<p>Now that the disk is initialized, you can initialize the file system structure and read the file system contents.
</p>
<pre>   int open_file(const char *path) {
   
       /* Initialize disk here */
   
       struct BMFS bmfs;
   
       bmfs_init(&amp;bmfs);
   
       bmfs_set_disk(&amp;bmfs, &amp;disk);
   
       int err = bmfs_import(&amp;bmfs);
       if (err&#160;!= 0) {
           kprintf("Failed to import BMFS file system.\n");
           return -1;
       }
   }
</pre>
<h3><span class="mw-headline" id="Opening_a_File">Opening a File</span></h3>
<p>With the disk and the file system initialized, you can open the file.
</p>
<pre>   int show_file(const char *path) {
   
       /* Initialize disk here. */
   
       /* Initialize file system header. */
   
       struct BMFSFile file;
   
       bmfs_file_init(&amp;file);
   
       err = bmfs_open_file(&amp;bmfs, &amp;file, path);
       if (err == BMFS_ENOENT) {
           kprintf("Entry '%s' does not exist.\n", path);
       } else if (err == BMFS_EISDIR) {
           kprintf("Entry '%s' is a directory.\n", path);
       } else if (err&#160;!= 0) {
           kprintf("Failed to open '%s'.\n", path);
           return -1;
       }
   
       bmfs_file_set_mode(&amp;file, BMFS_MODE_READ);
   
       char buf[512];
   
       while (bmfs_file_eof(&amp;file)) {
   
           bmfs_uint64 read_count = 0;
   
           err = bmfs_file_read(&amp;file, buf, 512, &amp;read_count);
           if (err&#160;!= 0)
               break;
   
           my_print_function(buf, read_count);
       }
   }
</pre>
<h3><span class="mw-headline" id="Opening_a_Directory">Opening a Directory</span></h3>
<p>Opening a directory is similar to opening a file.
</p><p>You'll have to initialize the file system the same as you did for the file.
</p>
<pre>   int list_dir(const char *path) {
   
       /* Initialize the file system here. */
   
       struct BMFSDir dir;
   
       bmfs_dir_init(&amp;dir);
   
       int err = bmfs_open_dir(&amp;bmfs, &amp;dir, path);
       if (err == BMFS_ENOTDIR) {
           kprintf("Entry '%s' is not a directory.\n", path);
           return -1;
       } else if (err == BMFS_ENOENT) {
           kprintf("Directory '%s' does not exist.\n", path);
           return -1;
       } else if (err&#160;!= 0) {
           kprintf("Failed to open directory '%s'.\n", path);
           return -1;
       }
       
       for (;;) {
           const struct BMFSEntry *entry = bmfs_dir_next(&amp;dir);
           if (entry == BMFS_NULL)
               break;
           
           kprintf("Entry: %s\n", entry-&gt;Name);
       }
   }
</pre>
<h3><span class="mw-headline" id="Creating_a_File_System_on_the_Development_Machine">Creating a File System on the Development Machine</span></h3>
<p>Sometimes, in creating an operating system, a file system has to be made in the development machine to transfer system files (such as programs or shared libraries).
</p><p>For that reason, the BMFS utility program was designed. It allows a user to create a file system on a disk image and read and write to the file system.
</p><p>To build the utility program, just use the standard 'make' and 'make install' commands in the project directory.
</p>
<pre>   git clone <a rel="nofollow" class="external free" href="https://github.com/ReturnInfinity/BMFS">https://github.com/ReturnInfinity/BMFS</a>
   cd BMFS
   make
   sudo make install
</pre>
<p>Create a disk image called 'bmfs.img' using the 'init' command.
</p>
<pre>   bmfs init
</pre>
<p>To use a different name, use the `--disk` option.
</p>
<pre>   bmfs --disk my-file-system.img init
</pre>
<p>Using `bmfs.img` is nice, because all the commands default to this name.
</p><p>The rest of this tutorial assumes you have used the name 'bmfs.img'.
</p><p>If this is not the case, just specify the name using the '--disk' option for each command.
</p><p>To create a directory, us the 'mkdir' command.
</p>
<pre>   bmfs mkdir /drivers
</pre>
<p>To transfer a file from the host system to the image, us the 'cp' command.
</p>
<pre>   bmfs cp ahci-driver.sys /drivers/ahci.sys
</pre>
<p>To list the contents of a directory, us the 'ls' command.
</p>
<pre>   bmfs ls /drivers
</pre>
<h3><span class="mw-headline" id="Reporting_Bugs">Reporting Bugs</span></h3>
<p>If you think there is a bug in the file system implementation, report it on the project issue tracker <a rel="nofollow" class="external autonumber" href="https://github.com/ReturnInfinity/BMFS/issues">[1]</a>.
</p>
<h3><span class="mw-headline" id="Going_Further">Going Further</span></h3>
<p>The library can do even more than that and new features are added continuously.
</p><p>Visit the Doxygen generated documentation <a rel="nofollow" class="external autonumber" href="https://returninfinity.github.io/bmfs-doc/modules.html">[2]</a> for more information.
</p>
<!-- 
NewPP limit report
Cached time: 20250212011545
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.010 seconds
Real time usage: 0.010 seconds
Preprocessor visited node count: 30/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4263-0!canonical and timestamp 20250212011545 and revision id 27496.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=BMFS&amp;oldid=27496">https://wiki.osdev.org/index.php?title=BMFS&amp;oldid=27496</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="./Category:Filesystems" title="Category:Filesystems">Filesystems</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=BMFS" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="BMFS#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="BMFS" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:BMFS&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="BMFS"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=BMFS&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=BMFS&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/BMFS" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/BMFS" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=BMFS&amp;oldid=27496" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=BMFS&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 28 November 2022, at 16:36.</li>
	<li id="footer-info-0">This page has been accessed 2,451 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=BMFS&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.010","walltime":"0.010","ppvisitednodes":{"value":30,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":0,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250212011545","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":105});});</script>
</body>
</html>