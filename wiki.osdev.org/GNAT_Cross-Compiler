<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>GNAT Cross-Compiler - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"a4b8bacda4749d7879384edc","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"GNAT_Cross-Compiler","wgTitle":"GNAT Cross-Compiler","wgCurRevisionId":25437,"wgRevisionId":25437,"wgArticleId":4464,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","Level 1 Tutorials","Ada","Compilers","Tutorials"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"GNAT_Cross-Compiler","wgRelevantArticleId":4464,"wgIsProbablyEditable":false,
"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-GNAT_Cross-Compiler rootpage-GNAT_Cross-Compiler skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">GNAT Cross-Compiler</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="GNAT_Cross-Compiler#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="GNAT_Cross-Compiler#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_1.png" class="image"><img alt="Difficulty 1.png" src="images/d/d3/Difficulty_1.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Beginner</td></tr></tbody></table>
<p>This article focuses on creating a <a href="GCC_Cross-Compiler" title="GCC Cross-Compiler">cross-compiler</a> suitable for cross-compiling Ada code for operating system development.
</p><p><a rel="nofollow" class="external text" href="https://www.gnu.org/software/gnat/">GNAT</a> is a fully featured Ada compiler maintained by the Free Software Foundation, which forms part of the <a href="GCC" title="GCC">GCC</a> compiler collection. Additionally, there is a proprietary version of the GNAT compiler maintained by <a rel="nofollow" class="external text" href="https://www.adacore.com/">AdaCore</a>. For the remainder of this tutorial, any reference to GNAT will be referring to the FSF version, which is freely available from the Free Software Foundation.
</p><p>As of the time of writing, GNAT remains the most fully-featured freely available Ada compiler on the market. So this will be used as the basis of the cross-compiler.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="GNAT_Cross-Compiler#Prerequisites"><span class="tocnumber">1</span> <span class="toctext">Prerequisites</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="GNAT_Cross-Compiler#Installing_Build_Dependencies"><span class="tocnumber">1.1</span> <span class="toctext">Installing Build Dependencies</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="GNAT_Cross-Compiler#Build"><span class="tocnumber">2</span> <span class="toctext">Build</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="GNAT_Cross-Compiler#Preparation"><span class="tocnumber">2.1</span> <span class="toctext">Preparation</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="GNAT_Cross-Compiler#Binutils"><span class="tocnumber">2.2</span> <span class="toctext">Binutils</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="GNAT_Cross-Compiler#GCC"><span class="tocnumber">2.3</span> <span class="toctext">GCC</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="GNAT_Cross-Compiler#GNAT"><span class="tocnumber">2.4</span> <span class="toctext">GNAT</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-8"><a href="GNAT_Cross-Compiler#Final_Setup"><span class="tocnumber">3</span> <span class="toctext">Final Setup</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="GNAT_Cross-Compiler#GPRbuild_Integration"><span class="tocnumber">4</span> <span class="toctext">GPRbuild Integration</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Prerequisites">Prerequisites</span></h2>
<p>In order to build a GNAT cross-compiler a local installation of both GCC and GNAT is required. Additionally, since GNAT is a front-end to GCC, all of the pre-requisite dependencies necessary for building a GCC cross-compiler are required.
</p><p>For best results, building a version of GCC/GNAT which is identical to your system GCC/GNAT is recommended. This minimises the chance of incompatibility with the host compiler resulting in errors during the build process.
</p>
<h3><span class="mw-headline" id="Installing_Build_Dependencies">Installing Build Dependencies</span></h3>
<p>The table below lists the various build dependencies for building GNAT from source. These can either be built from source, or installed via the package manager in a *nix distribution. The name of the package in Debian based Linux distributions is provided for convenience.
</p>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1&#125;&#125;&#125;">

<tbody><tr>
<th>Dependency
</th>
<td>Source Code
</td>
<td>Apt package (Debian, Ubuntu, Mint, WSL, ...)
</td></tr>
<tr>
<td>GCC
</td>
<td>N/A
</td>
<td><b><tt>build-essential</tt></b>
</td></tr>
<tr>
<td>GNAT
</td>
<td>N/A
</td>
<td><b><tt>gnat</tt></b>
</td></tr>
<tr>
<td>Make
</td>
<td>N/A
</td>
<td><b><tt>build-essential</tt></b>
</td></tr>
<tr>
<td><a rel="nofollow" class="external text" href="https://www.gnu.org/software/bison/">Bison</a>
</td>
<td><a rel="nofollow" class="external autonumber" href="https://ftp.gnu.org/gnu/bison/">[1]</a>
</td>
<td><b><tt>bison</tt></b>
</td></tr>
<tr>
<td><a rel="nofollow" class="external text" href="https://github.com/westes/flex">Flex</a>
</td>
<td><a rel="nofollow" class="external autonumber" href="https://github.com/westes/flex/releases">[2]</a>
</td>
<td><b><tt>flex</tt></b>
</td></tr>
<tr>
<td><a rel="nofollow" class="external text" href="https://gmplib.org/">GMP</a>
</td>
<td><a rel="nofollow" class="external autonumber" href="https://ftp.gnu.org/gnu/gmp/">[3]</a>
</td>
<td><b><tt>libgmp3-dev</tt></b>
</td></tr>
<tr>
<td>MPC
</td>
<td><a rel="nofollow" class="external autonumber" href="https://ftp.gnu.org/gnu/mpc/">[4]</a>
</td>
<td><b><tt>libmpc-dev</tt></b>
</td></tr>
<tr>
<td><a rel="nofollow" class="external text" href="https://www.mpfr.org/">MPFR</a>
</td>
<td><a rel="nofollow" class="external autonumber" href="https://ftp.gnu.org/gnu/mpfr/">[5]</a>
</td>
<td><b><tt>libmpfr-dev</tt></b>
</td></tr>
<tr>
<td><a rel="nofollow" class="external text" href="https://www.gnu.org/software/texinfo/">Texinfo</a>
</td>
<td><a rel="nofollow" class="external autonumber" href="https://ftp.gnu.org/gnu/texinfo/">[6]</a>
</td>
<td><b><tt>texinfo</tt></b>
</td></tr></tbody></table>
<h2><span class="mw-headline" id="Build">Build</span></h2>
<p>The following section of this guide details the build instructions for creating a GNAT cross-compiler. This will take the form of a series of shell commands which perform the individual necessary instructions to complete the build. This form is chosen since it provides easily visualised instructions and can be combined to produce an easily reproducible recipe in the form of a single shell script. A <tt>bash</tt> compatible shell is assumed, however the instructions should be easily adaptable to any other common shell scripting format. The following section assumes that the reader is building a compiler on an <tt>x86_64</tt> system running Linux and targeting the <tt>i686-elf</tt> architecture.
</p>
<h3><span class="mw-headline" id="Preparation">Preparation</span></h3>
<p>The following sets up the base variables used within our build script. The <tt>BUILD_TARGET</tt> variable specifies the <a href="Target_Triplet" title="Target Triplet">target triplet</a> for our build. This is a specific string format used by GNU tools to specify the target system for a build. The <tt>BUILD_PREFIX</tt> variable provides the installation directory prefix for our cross-compiler installation. <tt>${HOME}/opt/cross/</tt> is a common location for installing cross-compilers. Any sensible location can be used here, however sticking to established conventions is recommended for new developers. The <tt>HOST</tt> variable provides the target triplet that identifies our host system.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="ch">#!/usr/bin/env bash</span>

<span class="c1"># Recipe for building and installing a GNAT capable GCC cross-compiler from `x86-64-linux-elf`</span>
<span class="c1"># to `i686-elf` from source.</span>

<span class="c1"># The target triplet for the build.</span>
<span class="nb">export</span> <span class="nv">BUILD_TARGET</span><span class="o">=</span><span class="s2">&quot;i686-elf&quot;</span>
<span class="c1"># The install prefix.</span>
<span class="nb">export</span> <span class="nv">BUILD_PREFIX</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">HOME</span><span class="si">}</span><span class="s2">/opt/cross/</span><span class="si">${</span><span class="nv">BUILD_TARGET</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="c1"># The host target triplet.</span>
<span class="nb">export</span> <span class="nv">HOST</span><span class="o">=</span><span class="s2">&quot;x86_64-pc-linux-gnu&quot;</span>

<span class="c1"># Update the PATH variable for this script so it includes the build directory.</span>
<span class="c1"># This will add our newly built cross-compiler to the PATH.</span>
<span class="c1"># After the initial GCC cross-compiler build this initial cross-compiler </span>
<span class="c1"># will be used to build a version with Ada support.</span>
<span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BUILD_PREFIX</span><span class="si">}</span><span class="s2">/bin:</span><span class="si">${</span><span class="nv">PATH</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="c1"># The concurrency to use during the build process.</span>
<span class="c1"># Adjust this based upon the capabilities of the host system.</span>
<span class="nv">concurrency</span><span class="o">=</span><span class="m">8</span>

<span class="c1"># The directory where local library dependencies are installed.</span>
<span class="c1"># This is used to find installed dependencies such as MPFR, GMP, MPC, etc.</span>
<span class="c1"># This is the default location for installations using aptitude.</span>
<span class="c1"># Adjust this as necessary for the target system.</span>
<span class="nv">local_lib_dir</span><span class="o">=</span><span class="s2">&quot;/usr/local&quot;</span>
</pre></div>
<p>This guide assumes that the source for the build prerequisites is stored in the location <tt>${HOME}/src</tt> with another directory <tt>${HOME}/src/build</tt> used as an intermediate build directory prior to installation. If necessary, these directories can be substituted for others in the scripts below by modifying these variables.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="c1"># The directory where the source directories are located.</span>
<span class="nv">source_dir</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">HOME</span><span class="si">}</span><span class="s2">/src&quot;</span>
<span class="c1"># The directory to use as storage for the intermediate build dirs.</span>
<span class="nv">build_dir</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">HOME</span><span class="si">}</span><span class="s2">/src/build&quot;</span>
</pre></div>
<p>The below variables define the version of each dependency to build. These correspond to the source directories contained within the parent source directory listed above. These are defined here to facilitate easily changing the versions of the various dependencies in a single place.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="c1"># The versions of each dependency to build.</span>
<span class="nv">binutils_version</span><span class="o">=</span><span class="s2">&quot;2.32&quot;</span>
<span class="nv">gcc_version</span><span class="o">=</span><span class="s2">&quot;8.3.0&quot;</span>
</pre></div>
<h3><span class="mw-headline" id="Binutils">Binutils</span></h3>
<p>The following code details the process for building <a rel="nofollow" class="external text" href="https://www.gnu.org/software/binutils/">GNU binutils</a>, which is a required component in the cross-compiler build. Binutils provides utilities such as <tt>as</tt>, <tt>ld</tt>, and <tt>objdump</tt> built for the target architecture.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="nv">binutils_dir</span><span class="o">=</span><span class="s2">&quot;binutils-</span><span class="si">${</span><span class="nv">binutils_version</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="nb">cd</span> <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

<span class="k">if</span> <span class="o">[[</span>&#160;! -d <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">binutils_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
	mkdir <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">binutils_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
<span class="k">fi</span>

<span class="nb">cd</span> <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">binutils_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

<span class="si">${</span><span class="nv">source_dir</span><span class="si">}</span>/<span class="si">${</span><span class="nv">binutils_dir</span><span class="si">}</span>/configure          <span class="se">\</span>
	--target<span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BUILD_TARGET</span><span class="si">}</span><span class="s2">&quot;</span>               <span class="se">\</span>
	--prefix<span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BUILD_PREFIX</span><span class="si">}</span><span class="s2">&quot;</span>               <span class="se">\</span>
	--host<span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">HOST</span><span class="si">}</span><span class="s2">&quot;</span>                         <span class="se">\</span>
	--disable-nls                            <span class="se">\</span>
	--disable-multilib                       <span class="se">\</span>
	--disable-shared                         <span class="se">\</span>
        --with-sysroot <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

<span class="c1"># Check the host environment.</span>
make configure-host <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> install <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
</pre></div>
<p>Detailed explanations for the selected configuration options can be seen below:
</p>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1&#125;&#125;&#125;">

<tbody><tr>
<th>Option
</th>
<th>Explanation
</th></tr>
<tr>
<td>--target="${BUILD_TARGET}"
</td>
<td>Sets the <a href="Target_Triplet" title="Target Triplet">target triplet</a> for this cross-compiler build.
</td></tr>
<tr>
<td>--prefix="${BUILD_PREFIX}"
</td>
<td>Sets the install directory for the final build.
</td></tr>
<tr>
<td>--host="${HOST}"
</td>
<td>Sets the host architecture for the cross-compiler.
</td></tr>
<tr>
<td>--disable-nls
</td>
<td>Disables internationalisation, which is not necessary for this build.
</td></tr>
<tr>
<td>--disable-multilib
</td>
<td>Disables multilib support. Specifies that multiple target variant support, such as bi-endianness support, soft/hard float support, etc, will not be added. Assuming this build is targeting <tt>i686-elf</tt> it is not required.
</td></tr>
<tr>
<td>--disable-shared
</td>
<td>Disables building of shared libraries. Since this is a cross-compiler build, these are not necessary.
</td></tr>
<tr>
<td>--with-sysroot
</td>
<td>Enable <a href="Sysroot" class="mw-redirect" title="Sysroot">sysroot</a> support in the cross-compiler. Using the bare argument here without a directory specified will default to an empty directory. Supplying this argument will allow support for integrating a custom sysroot at a later point.
</td></tr></tbody></table>
<p>Additional configuration information can be found by calling the autoconf script with the <tt>--help</tt> argument.
</p>
<h3><span class="mw-headline" id="GCC">GCC</span></h3>
<p>In order to successfully create a build of GCC with Ada support, an initial GCC cross-compiler for the target architecture is required. This initial bootstrapping build will be built with only C support. This will be used to bootstrap our final GCC build with GNAT support.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="nv">gcc_dir</span><span class="o">=</span><span class="s2">&quot;gcc-</span><span class="si">${</span><span class="nv">gcc_version</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="nb">cd</span> <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

<span class="k">if</span> <span class="o">[[</span>&#160;! -d <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
	mkdir <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
<span class="k">fi</span>

<span class="nb">cd</span> <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

<span class="si">${</span><span class="nv">source_dir</span><span class="si">}</span>/<span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span>/configure          <span class="se">\</span>
	--target<span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BUILD_TARGET</span><span class="si">}</span><span class="s2">&quot;</span>          <span class="se">\</span>
	--prefix<span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BUILD_PREFIX</span><span class="si">}</span><span class="s2">&quot;</span>          <span class="se">\</span>
	--enable-languages<span class="o">=</span><span class="s2">&quot;c&quot;</span>              <span class="se">\</span>
	--disable-multilib                  <span class="se">\</span>
	--disable-shared                    <span class="se">\</span>
	--disable-nls                       <span class="se">\</span>
	--with-gmp<span class="o">=</span><span class="si">${</span><span class="nv">local_lib_dir</span><span class="si">}</span>         <span class="se">\</span>
	--with-mpc<span class="o">=</span><span class="si">${</span><span class="nv">local_lib_dir</span><span class="si">}</span>         <span class="se">\</span>
	--with-mpfr<span class="o">=</span><span class="si">${</span><span class="nv">local_lib_dir</span><span class="si">}</span>        <span class="se">\</span>
	--without-headers <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> all-gcc <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> install-gcc <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
</pre></div>
<p>Detailed explanations for the configuration options specific to this step can be seen below:
</p>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1&#125;&#125;&#125;">

<tbody><tr>
<th>Option
</th>
<th>Explanation
</th></tr>
<tr>
<td>--enable-languages="c"
</td>
<td>In order to bootstrap our GNAT build, only C support is required. This will speed up the cross-compiler build.
</td></tr>
<tr>
<td>--disable-nls
</td>
<td>Disables internationalisation, which is not necessary for this build.
</td></tr>
<tr>
<td>--disable-multilib
</td>
<td>Disables multilib support. Specifies that multiple target variant support, such as bi-endianness support, soft/hard float support, etc, will not be added. Assuming this build is targeting <tt>i686-elf</tt> it is not required.
</td></tr>
<tr>
<td>--disable-shared
</td>
<td>Disables building of shared libraries. Since this is a cross-compiler build, these are not necessary.
</td></tr>
<tr>
<td>--with-gmp/mpc/mpfr
</td>
<td>Instructs the build where to find these library dependencies.
</td></tr>
<tr>
<td>--without-headers
</td>
<td>Tells GCC not use any target headers from a libc when building the cross-compiler.
</td></tr></tbody></table>
<p>Additional configuration information can be found <a rel="nofollow" class="external text" href="https://gcc.gnu.org/install/configure.html">here</a>.
</p>
<h3><span class="mw-headline" id="GNAT">GNAT</span></h3>
<p>The code below shows the recipe for the final GCC build which will add Ada support.
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="nv">gcc_dir</span><span class="o">=</span><span class="s2">&quot;gcc-</span><span class="si">${</span><span class="nv">gcc_version</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="nb">cd</span> <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

<span class="k">if</span> <span class="o">[[</span>&#160;! -d <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
	mkdir <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
<span class="k">fi</span>

<span class="nb">cd</span> <span class="s2">&quot;</span><span class="si">${</span><span class="nv">build_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

<span class="si">${</span><span class="nv">source_dir</span><span class="si">}</span>/<span class="si">${</span><span class="nv">gcc_dir</span><span class="si">}</span>/configure          <span class="se">\</span>
	--target<span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BUILD_TARGET</span><span class="si">}</span><span class="s2">&quot;</span>          <span class="se">\</span>
	--prefix<span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BUILD_PREFIX</span><span class="si">}</span><span class="s2">&quot;</span>          <span class="se">\</span>
	--enable-languages<span class="o">=</span><span class="s2">&quot;c,c++,ada&quot;</span>      <span class="se">\</span>
	--disable-libada                    <span class="se">\</span>
	--disable-nls                       <span class="se">\</span>
	--disable-threads                   <span class="se">\</span>
	--disable-multilib                  <span class="se">\</span>
	--disable-shared                    <span class="se">\</span>
	--with-gmp<span class="o">=</span><span class="si">${</span><span class="nv">local_lib_dir</span><span class="si">}</span>         <span class="se">\</span>
	--with-mpc<span class="o">=</span><span class="si">${</span><span class="nv">local_lib_dir</span><span class="si">}</span>         <span class="se">\</span>
	--with-mpfr<span class="o">=</span><span class="si">${</span><span class="nv">local_lib_dir</span><span class="si">}</span>        <span class="se">\</span>
	--without-headers <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>

make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> all-gcc <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> all-target-libgcc <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> -C gcc cross-gnattools ada.all.cross <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
make -j<span class="si">${</span><span class="nv">concurrency</span><span class="si">}</span> install-strip-gcc install-target-libgcc <span class="o">||</span> <span class="nb">exit</span> <span class="m">1</span>
</pre></div>
<p><br />
Detailed explanations for the configuration options specific to this step be seen below:
</p>
<table border="2" cellpadding="4" cellspacing="0" style="margin-top:1em; margin-bottom:1em; background:#f9f9f9; border:1px #aaa solid; border-collapse:collapse; &#123;&#123;&#123;1&#125;&#125;&#125;">

<tbody><tr>
<th>Option
</th>
<th>Explanation
</th></tr>
<tr>
<td>--enable-languages="c,c++,ada"
</td>
<td>This is where Ada support is added to the compiler. C++ support is required for the build.
</td></tr>
<tr>
<td>--disable-libada
</td>
<td>Disables building the target system <a href="Ada_Runtime_Library" title="Ada Runtime Library">Ada Runtime Library</a>. GCC does not understand how to build a suitable run-time library. As required, this will need to be built manually.
</td></tr></tbody></table>
<h2><span class="mw-headline" id="Final_Setup">Final Setup</span></h2>
<p>In order to use the newly built cross-compiler its binaries must be visible on the system's <tt>PATH</tt>. On a Linux system this can be facilitated by adding the following line to the current user's <tt>~/.bashrc</tt> file, or the equivalent file on the host system:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="c1"># Adjust the following to reflect the location of the installed cross-compiler build.</span>
<span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">HOME</span><span class="si">}</span><span class="s2">/opt/cross/i686-elf:</span><span class="nv">$PATH</span><span class="s2">&quot;</span>
</pre></div>
<h2><span class="mw-headline" id="GPRbuild_Integration">GPRbuild Integration</span></h2>
<p><a rel="nofollow" class="external text" href="https://docs.adacore.com/gprbuild-docs/html/gprbuild_ug.html">GPRbuild</a> is a build tool designed for instrumenting the compilation of GNAT projects. It is written and maintained by AdaCore and is installed alongside their GNAT compiler or can be built from source. Its source code is publicly available on <a rel="nofollow" class="external text" href="https://github.com/AdaCore/gprbuild">AdaCore's Github profile</a>. Its function is analogous to that of GNU Make. It is capable of compiling projects featuring a variety of source languages such as Ada, C and Assembly, among others. Modern versions of GNAT do not natively feature the capability to compile GNAT project files, and will require the use of GPRbuild.
</p><p>GPRbuild will not automatically recognise the existence of the new cross-compiler toolchain. Additional steps are necessary before GPRbuild will recognise our target architecture as being valid. This is accomplished by adding configuration information about the newly built toolchain to GPRbuild's 'knowledge base'  linker configuration file. This file instructs GPRbuild how to link executables and libraries using the various toolchains supported by the host system. If GPRbuild was installed as part of an AdaCore GNAT installation, this configuration file will be located at <tt>${prefix}/share/gprconfig/linker.xml</tt>, where <tt>${prefix}</tt> is the location of the GNAT install directory. The easiest way to add a new target architecture is to duplicate an existing toolchain's target configuration. Inside the linker configuration file, search for an existing configuration such as <tt>leon-elf</tt>, and duplicate each entry for the existing configuration. modifying it to reflect the newly built <tt>i686-elf</tt>, or similar, target.
</p><p><i>Note: GPRbuild uses regular expressions to pattern match the target triplets.</i>  
</p><p>A truncated example of the new configuration entries can be seen below:
</p>
<div class="mw-highlight mw-highlight-lang-xml mw-content-ltr" dir="ltr"><pre><span></span>  <span class="nt">&lt;configuration&gt;</span>
    <span class="nt">&lt;targets&gt;</span>
       <span class="cm">&lt;!-- ... --&gt;</span>
       <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;^i686-elf$&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/targets&gt;</span>
    <span class="nt">&lt;config&gt;</span>
   for Library_Support  use &quot;static_only&quot;;
   for Library_Builder  use &quot;${GPRCONFIG_PREFIX}libexec/gprbuild/gprlib&quot;;
    <span class="nt">&lt;/config&gt;</span>
  <span class="nt">&lt;/configuration&gt;</span>

  <span class="cm">&lt;!-- ... --&gt;</span>

  <span class="nt">&lt;configuration&gt;</span>
    <span class="nt">&lt;targets&gt;</span>
      <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;^i686-elf$&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/targets&gt;</span>
    <span class="nt">&lt;config&gt;</span>
   for Archive_Builder  use (&quot;i686-elf-ar&quot;, &quot;cr&quot;);
   for Archive_Builder_Append_Option use (&quot;q&quot;);
   for Archive_Indexer  use (&quot;i686-elf-ranlib&quot;);
   for Archive_Suffix   use &quot;.a&quot;;
    <span class="nt">&lt;/config&gt;</span>
  <span class="nt">&lt;/configuration&gt;</span>
</pre></div>
<p>Once each entry has been duplicated and modified to reference the newly built toolchain, paying special attention to preserve any regex special characters, the newly built toolchain should be visible to GPRbuild.
</p><p>Additional information on GPRbuild configuration, and GPRbuild's toolchain knowledge base, can be found here: <a rel="nofollow" class="external autonumber" href="https://docs.adacore.com/gprbuild-docs/html/gprbuild_ug/companion_tools.html">[7]</a>
</p>
<!-- 
NewPP limit report
Cached time: 20250212011158
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.066 seconds
Real time usage: 1.143 seconds
Preprocessor visited node count: 148/1000000
Post‐expand include size: 988/2097152 bytes
Template argument size: 44/2097152 bytes
Highest expansion depth: 15/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 16991/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  810.191      1 -total
  0.49%    3.980      1 Template:Rating
  0.40%    3.243      2 Template:If
  0.33%    2.707      2 Template:Show1
  0.11%    0.853      2 Template:Eq
  0.06%    0.491      4 Template:Wikitable
  0.05%    0.407      2 Template:Eq1
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:4464-0!canonical and timestamp 20250212011157 and revision id 25437.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=GNAT_Cross-Compiler&amp;oldid=25437">https://wiki.osdev.org/index.php?title=GNAT_Cross-Compiler&amp;oldid=25437</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Level_1_Tutorials" title="Category:Level 1 Tutorials">Level 1 Tutorials</a></li><li><a href="./Category:Ada" title="Category:Ada">Ada</a></li><li><a href="./Category:Compilers" title="Category:Compilers">Compilers</a></li><li><a href="./Category:Tutorials" title="Category:Tutorials">Tutorials</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=GNAT+Cross-Compiler" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="GNAT_Cross-Compiler#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="GNAT_Cross-Compiler" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:GNAT_Cross-Compiler&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="GNAT_Cross-Compiler"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNAT_Cross-Compiler&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNAT_Cross-Compiler&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/GNAT_Cross-Compiler" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="./Special:RecentChangesLinked/GNAT_Cross-Compiler" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNAT_Cross-Compiler&amp;oldid=25437" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=GNAT_Cross-Compiler&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 14 December 2020, at 00:38.</li>
	<li id="footer-info-0">This page has been accessed 1,868 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=GNAT_Cross-Compiler&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.066","walltime":"1.143","ppvisitednodes":{"value":148,"limit":1000000},"postexpandincludesize":{"value":988,"limit":2097152},"templateargumentsize":{"value":44,"limit":2097152},"expansiondepth":{"value":15,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":16991,"limit":5000000},"timingprofile":["100.00%  810.191      1 -total","  0.49%    3.980      1 Template:Rating","  0.40%    3.243      2 Template:If","  0.33%    2.707      2 Template:Show1","  0.11%    0.853      2 Template:Eq","  0.06%    0.491      4 Template:Wikitable","  0.05%    0.407      2 Template:Eq1"]},"cachereport":{"timestamp":"20250212011158","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":1246});});</script>
</body>
</html>