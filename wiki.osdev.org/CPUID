<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>CPUID - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"116d5a51ebc37d88834eaa13","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"CPUID","wgTitle":"CPUID","wgCurRevisionId":29188,"wgRevisionId":29188,"wgArticleId":1450,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","Disputed Pages","X86 CPU","Hardware Detection"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"CPUID","wgRelevantArticleId":1450,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-CPUID rootpage-CPUID skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">CPUID</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="CPUID#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="CPUID#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>The CPUID instruction can be used to retrieve various information about your CPU, such as its vendor string and model number, the size of internal caches and (more interesting), the list of CPU features supported.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="CPUID#How_to_use_CPUID"><span class="tocnumber">1</span> <span class="toctext">How to use CPUID</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="CPUID#Checking_CPUID_availability"><span class="tocnumber">1.1</span> <span class="toctext">Checking CPUID availability</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="CPUID#Basic_usage"><span class="tocnumber">1.2</span> <span class="toctext">Basic usage</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="CPUID#CPU_Vendor_ID_String"><span class="tocnumber">1.3</span> <span class="toctext">CPU Vendor ID String</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="CPUID#CPU_Features"><span class="tocnumber">1.4</span> <span class="toctext">CPU Features</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="CPUID#Using_CPUID_from_GCC"><span class="tocnumber">2</span> <span class="toctext">Using CPUID from GCC</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="CPUID#See_Also"><span class="tocnumber">3</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="CPUID#Articles"><span class="tocnumber">3.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="CPUID#Threads"><span class="tocnumber">3.2</span> <span class="toctext">Threads</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="CPUID#External_Links"><span class="tocnumber">3.3</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="How_to_use_CPUID">How to use CPUID</span></h2>
<h3><span class="mw-headline" id="Checking_CPUID_availability">Checking CPUID availability</span></h3>
<p>Prior to using the CPUID instruction, you should also make sure the processor supports it by testing the 'ID' bit (0x200000) in eflags. This bit is modifiable only when the CPUID instruction is supported. For systems that don't support CPUID, changing the 'ID' bit will have no effect.
</p><p><b>Note:</b> Implementing this routine in for example C can lead to issues, because the compiler may change EFLAGS at any time.
</p><p>This assembly routine checks if CPUID is supported:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="w">    </span><span class="nf">pushfd</span><span class="w">                               </span><span class="c1">;Save EFLAGS</span>
<span class="w">    </span><span class="nf">pushfd</span><span class="w">                               </span><span class="c1">;Store EFLAGS</span>
<span class="w">    </span><span class="nf">xor</span><span class="w"> </span><span class="no">dword</span><span class="w"> </span><span class="p">[</span><span class="no">esp</span><span class="p">],</span><span class="mi">0x00200000</span><span class="w">           </span><span class="c1">;Invert the ID bit in stored EFLAGS</span>
<span class="w">    </span><span class="nf">popfd</span><span class="w">                                </span><span class="c1">;Load stored EFLAGS (with ID bit inverted)</span>
<span class="w">    </span><span class="nf">pushfd</span><span class="w">                               </span><span class="c1">;Store EFLAGS again (ID bit may or may not be inverted)</span>
<span class="w">    </span><span class="nf">pop</span><span class="w"> </span><span class="no">eax</span><span class="w">                              </span><span class="c1">;eax = modified EFLAGS (ID bit may or may not be inverted)</span>
<span class="w">    </span><span class="nf">xor</span><span class="w"> </span><span class="no">eax</span><span class="p">,[</span><span class="no">esp</span><span class="p">]</span><span class="w">                        </span><span class="c1">;eax = whichever bits were changed</span>
<span class="w">    </span><span class="nf">popfd</span><span class="w">                                </span><span class="c1">;Restore original EFLAGS</span>
<span class="w">    </span><span class="nf">and</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="mi">0x00200000</span><span class="w">                   </span><span class="c1">;eax = zero if ID bit can&#39;t be changed, else non-zero</span>
<span class="w">    </span><span class="nf">ret</span><span class="w"></span>
</pre></div>
<p>Note 1: There are some old CPUs where CPUID is supported but the ID bit in EFLAGS is not (NexGen). There are also CPUs that support CPUID if and only if it has to be enabled first (Cyrix M1).
</p><p>Note 2: You can simply attempt to execute the CPUID instruction and see if you get an invalid opcode exception. This avoids problems with CPUs that do support CPUID but don't support the ID bit in EFLAGS; and is likely to be faster for CPUs that do support CPUID (and slower for CPUs that don't).
</p>
<h3><span class="mw-headline" id="Basic_usage">Basic usage</span></h3>
<p>The idea of the CPUID instruction is that you can call it with different values in EAX, and it will return different information about the processor. For example, if we want the Vendor ID String (see below), we should code something like that:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0</span><span class="w"></span>
<span class="nf">cpuid</span><span class="w"></span>
</pre></div>
<p>There are differences between AMD and Intel. According to the Intel CPUID application note, we should first check the Vendor ID String for "GenuineIntel" before taking out information, such as the Processor Signature, Processor Feature Flags, etc.
</p>
<h3><span class="mw-headline" id="CPU_Vendor_ID_String">CPU Vendor ID String</span></h3>
<p>When called with EAX = 0, CPUID returns the vendor ID string in EBX, EDX and ECX. Writing these to memory in this order results in a 12-character string. These can be tested against known Vendor ID strings:
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">// Vendor strings from CPUs.</span>
<span class="cp">#define CPUID_VENDOR_AMD           &quot;AuthenticAMD&quot;</span>
<span class="cp">#define CPUID_VENDOR_AMD_OLD       &quot;AMDisbetter!&quot; </span><span class="c1">// Early engineering samples of AMD K5 processor</span>
<span class="cp">#define CPUID_VENDOR_INTEL         &quot;GenuineIntel&quot;</span>
<span class="cp">#define CPUID_VENDOR_VIA           &quot;VIA VIA VIA &quot;</span>
<span class="cp">#define CPUID_VENDOR_TRANSMETA     &quot;GenuineTMx86&quot;</span>
<span class="cp">#define CPUID_VENDOR_TRANSMETA_OLD &quot;TransmetaCPU&quot;</span>
<span class="cp">#define CPUID_VENDOR_CYRIX         &quot;CyrixInstead&quot;</span>
<span class="cp">#define CPUID_VENDOR_CENTAUR       &quot;CentaurHauls&quot;</span>
<span class="cp">#define CPUID_VENDOR_NEXGEN        &quot;NexGenDriven&quot;</span>
<span class="cp">#define CPUID_VENDOR_UMC           &quot;UMC UMC UMC &quot;</span>
<span class="cp">#define CPUID_VENDOR_SIS           &quot;SiS SiS SiS &quot;</span>
<span class="cp">#define CPUID_VENDOR_NSC           &quot;Geode by NSC&quot;</span>
<span class="cp">#define CPUID_VENDOR_RISE          &quot;RiseRiseRise&quot;</span>
<span class="cp">#define CPUID_VENDOR_VORTEX        &quot;Vortex86 SoC&quot;</span>
<span class="cp">#define CPUID_VENDOR_AO486         &quot;MiSTer AO486&quot;</span>
<span class="cp">#define CPUID_VENDOR_AO486_OLD     &quot;GenuineAO486&quot;</span>
<span class="cp">#define CPUID_VENDOR_ZHAOXIN       &quot;  Shanghai  &quot;</span>
<span class="cp">#define CPUID_VENDOR_HYGON         &quot;HygonGenuine&quot;</span>
<span class="cp">#define CPUID_VENDOR_ELBRUS        &quot;E2K MACHINE &quot;</span>
<span class="w"> </span>
<span class="c1">// Vendor strings from hypervisors.</span>
<span class="cp">#define CPUID_VENDOR_QEMU          &quot;TCGTCGTCGTCG&quot;</span>
<span class="cp">#define CPUID_VENDOR_KVM           &quot; KVMKVMKVM  &quot;</span>
<span class="cp">#define CPUID_VENDOR_VMWARE        &quot;VMwareVMware&quot;</span>
<span class="cp">#define CPUID_VENDOR_VIRTUALBOX    &quot;VBoxVBoxVBox&quot;</span>
<span class="cp">#define CPUID_VENDOR_XEN           &quot;XenVMMXenVMM&quot;</span>
<span class="cp">#define CPUID_VENDOR_HYPERV        &quot;Microsoft Hv&quot;</span>
<span class="cp">#define CPUID_VENDOR_PARALLELS     &quot; prl hyperv &quot;</span>
<span class="cp">#define CPUID_VENDOR_PARALLELS_ALT &quot; lrpepyh vr &quot; </span><span class="c1">// Sometimes Parallels incorrectly encodes &quot;prl hyperv&quot; as &quot;lrpepyh vr&quot; due to an endianness mismatch.</span>
<span class="cp">#define CPUID_VENDOR_BHYVE         &quot;bhyve bhyve &quot;</span>
<span class="cp">#define CPUID_VENDOR_QNX           &quot; QNXQVMBSQG &quot;</span>
</pre></div>
<p>You already know that the Vendor ID String is returned in EBX, ECX, EDX. Let us take an Intel processor. It should return "GenuineIntel". Look at the following text to see how the string is placed in the registers:
</p>
<pre>      MSB         LSB
EBX = 'u' 'n' 'e' 'G'
EDX = 'I' 'e' 'n' 'i'
ECX = 'l' 'e' 't' 'n' 
 
 Where, MSB stands for "Most Significant Byte" and LSB is the "Least Significant Byte".
</pre>
<p>Also, EAX is set to the maximum EAX value supported for CPUID calls, as not all queries are supported on all processors.
</p>
<h3><span class="mw-headline" id="CPU_Features">CPU Features</span></h3>
<p>When called with EAX = 1 (CPUID_GETFEATURES), CPUID returns a bit field in EDX containing the following values.
Note that different brands of CPUs may have given different meanings to these. 
Recent processors also use ECX for features (which form a different set), with which you should be very careful as some old CPUs return bogus information in this register.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="k">enum</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_SSE3</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_PCLMUL</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_DTES64</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_MONITOR</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_DS_CPL</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_VMX</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_SMX</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">6</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_EST</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">7</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_TM2</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_SSSE3</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">9</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_CID</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_SDBG</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">11</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_FMA</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">12</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_CX16</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">13</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_XTPR</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">14</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_PDCM</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">15</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_PCID</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">17</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_DCA</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">18</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_SSE4_1</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">19</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_SSE4_2</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">20</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_X2APIC</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">21</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_MOVBE</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">22</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_POPCNT</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">23</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_TSC</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">24</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_AES</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">25</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_XSAVE</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">26</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_OSXSAVE</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">27</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_AVX</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">28</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_F16C</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">29</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_RDRAND</span><span class="w">       </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">30</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_ECX_HYPERVISOR</span><span class="w">   </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">31</span><span class="p">,</span><span class="w"></span>

<span class="w">    </span><span class="n">CPUID_FEAT_EDX_FPU</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_VME</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_DE</span><span class="w">           </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_PSE</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_TSC</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_MSR</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_PAE</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">6</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_MCE</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">7</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_CX8</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_APIC</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">9</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_SEP</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">11</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_MTRR</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">12</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_PGE</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">13</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_MCA</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">14</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_CMOV</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">15</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_PAT</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">16</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_PSE36</span><span class="w">        </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">17</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_PSN</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">18</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_CLFLUSH</span><span class="w">      </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">19</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_DS</span><span class="w">           </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">21</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_ACPI</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">22</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_MMX</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">23</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_FXSR</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">24</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_SSE</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">25</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_SSE2</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">26</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_SS</span><span class="w">           </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">27</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_HTT</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">28</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_TM</span><span class="w">           </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">29</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_IA64</span><span class="w">         </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">30</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="n">CPUID_FEAT_EDX_PBE</span><span class="w">          </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">31</span><span class="w"></span>
<span class="p">};</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="Using_CPUID_from_GCC">Using CPUID from GCC</span></h2>
<p>Alternatively, one can use the __get_cpuid function that comes with GCC. To use this function, include &lt;cpuid.h&gt;.
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;cpuid.h&gt;</span><span class="cp"></span>

<span class="cm">/* Example: Get CPU&#39;s model number */</span><span class="w"></span>
<span class="k">static</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="nf">get_model</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">int</span><span class="w"> </span><span class="n">ebx</span><span class="p">,</span><span class="w"> </span><span class="n">unused</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">__cpuid</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="n">unused</span><span class="p">,</span><span class="w"> </span><span class="n">ebx</span><span class="p">,</span><span class="w"> </span><span class="n">unused</span><span class="p">,</span><span class="w"> </span><span class="n">unused</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="n">ebx</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>

<span class="cm">/* Example: Check for builtin local APIC. */</span><span class="w"></span>
<span class="k">static</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="nf">check_apic</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">eax</span><span class="p">,</span><span class="w"> </span><span class="n">unused</span><span class="p">,</span><span class="w"> </span><span class="n">edx</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="n">__get_cpuid</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">eax</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">unused</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">unused</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">edx</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="n">edx</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">CPUID_FEAT_EDX_APIC</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<center>
<table style="border: 1px solid #cfcfbf; padding: .0em .25em .0em; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><font color="black">The factual accuracy of this article or section is <a href="./Category:Disputed_Pages" title="Category:Disputed Pages">disputed</a>.</font><br /><small><font color="red">Please see the relevant discussion on the <a href="./Talk:CPUID" title="Talk:CPUID">talk page</a>.</font></small>
</p>
</td>
<td>
</td></tr></tbody></table>
</center>
<p>CPUID can be invoked with various request codes (in eax) and will return values in general registers (much as a built-in service interrupt). The following code is made Public Domain out of Clicker's x86/cpu.h
</p>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="cm">/* DEPRECATED: You should use the &lt;cpuid.h&gt; header that comes with GCC instead. */</span><span class="w"></span>

<span class="k">enum</span><span class="w"> </span><span class="n">cpuid_requests</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_GETVENDORSTRING</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_GETFEATURES</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_GETTLB</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_GETSERIAL</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span>
<span class="w">  </span><span class="n">CPUID_INTELEXTENDED</span><span class="o">=</span><span class="mh">0x80000000</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_INTELFEATURES</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_INTELBRANDSTRING</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_INTELBRANDSTRINGMORE</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="n">CPUID_INTELBRANDSTRINGEND</span><span class="p">,</span><span class="w"></span>
<span class="p">};</span><span class="w"></span>
<span class="w">    </span>
<span class="cm">/** issue a single request to CPUID. Fits &#39;intel features&#39;, for instance</span>
<span class="cm"> *  note that even if only &quot;eax&quot; and &quot;edx&quot; are of interest, other registers</span>
<span class="cm"> *  will be modified by the operation, so we need to tell the compiler about it.</span>
<span class="cm"> */</span><span class="w"></span>
<span class="k">static</span><span class="w"> </span><span class="kr">inline</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">cpuid</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">code</span><span class="p">,</span><span class="w"> </span><span class="kt">uint32_t</span><span class="w"> </span><span class="o">*</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="kt">uint32_t</span><span class="w"> </span><span class="o">*</span><span class="n">d</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="k">asm</span><span class="w"> </span><span class="k">volatile</span><span class="p">(</span><span class="s">&quot;cpuid&quot;</span><span class="o">:</span><span class="s">&quot;=a&quot;</span><span class="p">(</span><span class="o">*</span><span class="n">a</span><span class="p">),</span><span class="s">&quot;=d&quot;</span><span class="p">(</span><span class="o">*</span><span class="n">d</span><span class="p">)</span><span class="o">:</span><span class="s">&quot;a&quot;</span><span class="p">(</span><span class="n">code</span><span class="p">)</span><span class="o">:</span><span class="s">&quot;ecx&quot;</span><span class="p">,</span><span class="s">&quot;ebx&quot;</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
<span class="w">    </span>
<span class="cm">/** issue a complete request, storing general registers output as a string</span>
<span class="cm"> */</span><span class="w"></span>
<span class="k">static</span><span class="w"> </span><span class="kr">inline</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="nf">cpuid_string</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">code</span><span class="p">,</span><span class="w"> </span><span class="kt">uint32_t</span><span class="w"> </span><span class="n">where</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="k">asm</span><span class="w"> </span><span class="k">volatile</span><span class="p">(</span><span class="s">&quot;cpuid&quot;</span><span class="o">:</span><span class="s">&quot;=a&quot;</span><span class="p">(</span><span class="o">*</span><span class="n">where</span><span class="p">),</span><span class="s">&quot;=b&quot;</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">where</span><span class="o">+</span><span class="mi">1</span><span class="p">)),</span><span class="w"></span>
<span class="w">               </span><span class="s">&quot;=c&quot;</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">where</span><span class="o">+</span><span class="mi">2</span><span class="p">)),</span><span class="s">&quot;=d&quot;</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">where</span><span class="o">+</span><span class="mi">3</span><span class="p">))</span><span class="o">:</span><span class="s">&quot;a&quot;</span><span class="p">(</span><span class="n">code</span><span class="p">));</span><span class="w"></span>
<span class="w">  </span><span class="k">return</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">where</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="VMX" title="VMX">VMX</a> Intel's Virtual-Machine Extensions</li>
<li><a href="Detecting_CPU_Topology_(80x86)" title="Detecting CPU Topology (80x86)">Detecting CPU Topology (80x86)</a> Detecting CPU Topology on 80x86</li></ul>
<h3><span class="mw-headline" id="Threads">Threads</span></h3>
<ul><li><a href="http://forum.osdev.org/viewtopic.php?t=11998" class="extiw" title="topic:11998">CPUID For OS Developers</a>, an implementation written by Brynet-Inc.</li>
<li><a href="http://forum.osdev.org/viewtopic.php?t=12146" class="extiw" title="topic:12146">Forum topic about issues with CPUID</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="https://x86-cpuid.org">x86-cpuid.org</a>: for complete CPUID listings (<a rel="nofollow" class="external text" href="https://gitlab.com/x86-cpuid.org/x86-cpuid-db">GitLab repository</a>, <a rel="nofollow" class="external text" href="https://lore.kernel.org/lkml/ZpkckA2SHa1r3Bor@lx-t490">Project announcement</a>.)</li>
<li><a rel="nofollow" class="external text" href="https://sandpile.org/x86/cpuid.htm">SandPile.org</a>: for legacy CPUID listings</li>
<li>Intel's <a rel="nofollow" class="external text" href="http://bochs.sourceforge.net/techspec/24161821.pdf">CPUID Specification</a></li>
<li>AMD's <a rel="nofollow" class="external text" href="http://support.amd.com/TechDocs/25481.pdf">CPUID Specification</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211124252
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.059 seconds
Real time usage: 0.865 seconds
Preprocessor visited node count: 81/1000000
Post‐expand include size: 422/2097152 bytes
Template argument size: 9/2097152 bytes
Highest expansion depth: 4/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 34892/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    5.745      1 -total
100.00%    5.745      1 Template:Disputed
 30.23%    1.737      1 Template:DiscussThis
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1450-0!canonical and timestamp 20250211124251 and revision id 29188.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=CPUID&amp;oldid=29188">https://wiki.osdev.org/index.php?title=CPUID&amp;oldid=29188</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Disputed_Pages" title="Category:Disputed Pages">Disputed Pages</a></li><li><a href="./Category:X86_CPU" title="Category:X86 CPU">X86 CPU</a></li><li><a href="./Category:Hardware_Detection" title="Category:Hardware Detection">Hardware Detection</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=CPUID" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="CPUID#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="CPUID" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:CPUID" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="CPUID"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=CPUID&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=CPUID&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/CPUID" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/CPUID" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=CPUID&amp;oldid=29188" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=CPUID&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-lang" class="vector-menu mw-portlet mw-portlet-lang vector-menu-portal portal" aria-labelledby="p-lang-label" role="navigation"  >
	<h3
		id="p-lang-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">In other languages</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li class="interlanguage-link interwiki-de mw-list-item"><a href="http://www.lowlevel.eu/wiki/CPUID" title="CPUID – Deutsch" lang="de" hreflang="de" class="interlanguage-link-target"><span>Deutsch</span></a></li></ul>
		
	</div>
</nav>

</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 19 July 2024, at 21:20.</li>
	<li id="footer-info-0">This page has been accessed 26,682 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=CPUID&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.059","walltime":"0.865","ppvisitednodes":{"value":81,"limit":1000000},"postexpandincludesize":{"value":422,"limit":2097152},"templateargumentsize":{"value":9,"limit":2097152},"expansiondepth":{"value":4,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":34892,"limit":5000000},"timingprofile":["100.00%    5.745      1 -total","100.00%    5.745      1 Template:Disputed"," 30.23%    1.737      1 Template:DiscussThis"]},"cachereport":{"timestamp":"20250211124252","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":972});});</script>
</body>
</html>