<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>ARM Integrator-CP PL110 Dirty - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"6d269475088ec53cd8e50109","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"ARM_Integrator-CP_PL110_Dirty","wgTitle":"ARM Integrator-CP PL110 Dirty","wgCurRevisionId":28052,"wgRevisionId":28052,"wgArticleId":3150,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","Articles Written in First Person","ARM"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"ARM_Integrator-CP_PL110_Dirty","wgRelevantArticleId":3150,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,
"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-ARM_Integrator-CP_PL110_Dirty rootpage-ARM_Integrator-CP_PL110_Dirty skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">ARM Integrator-CP PL110 Dirty</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="ARM_Integrator-CP_PL110_Dirty#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="ARM_Integrator-CP_PL110_Dirty#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p>This page or section refers to its readers or editors using <i>I</i>, <i>my</i>, <i>we</i> or <i>us</i>. It should be <a rel="nofollow" class="external text" href="https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;action=edit">edited</a> to be in an encyclopedic tone.
</p>
</td></tr></tbody></table>
</center>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="ARM_Integrator-CP_PL110_Dirty#Integrator-CP_QEMU_PL110_16-Bit_Color_Example"><span class="tocnumber">1</span> <span class="toctext">Integrator-CP QEMU PL110 16-Bit Color Example</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="ARM_Integrator-CP_PL110_Dirty#Prerequisites"><span class="tocnumber">2</span> <span class="toctext">Prerequisites</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="ARM_Integrator-CP_PL110_Dirty#Memory"><span class="tocnumber">3</span> <span class="toctext">Memory</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="ARM_Integrator-CP_PL110_Dirty#C_Code"><span class="tocnumber">4</span> <span class="toctext">C Code</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="ARM_Integrator-CP_PL110_Dirty#Assembly"><span class="tocnumber">5</span> <span class="toctext">Assembly</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="ARM_Integrator-CP_PL110_Dirty#More_Flexible_Compile/Link"><span class="tocnumber">6</span> <span class="toctext">More Flexible Compile/Link</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="ARM_Integrator-CP_PL110_Dirty#link.ld"><span class="tocnumber">6.1</span> <span class="toctext">link.ld</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="ARM_Integrator-CP_PL110_Dirty#script"><span class="tocnumber">6.2</span> <span class="toctext">script</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="ARM_Integrator-CP_PL110_Dirty#Explanation"><span class="tocnumber">7</span> <span class="toctext">Explanation</span></a></li>
</ul>
</div>

<h3><span class="mw-headline" id="Integrator-CP_QEMU_PL110_16-Bit_Color_Example">Integrator-CP QEMU PL110 16-Bit Color Example</span></h3>
<p>This is quick and dirty really. I just want to get you on your feet with something that will make you enjoy doing this. Although, many people would consider going straight to working on the GUI not the correct way to do it is however very fun for many people. So here you go.
</p>
<h2><span class="mw-headline" id="Prerequisites">Prerequisites</span></h2>
<table class="wikitable">

<tbody><tr>
<th>Software
</th>
<th>Why
</th></tr>
<tr>
<td>QEMU</td>
<td>We are going to use it. We do not properly initialize the hardware. We almost do it correctly, but not quite enough for the real thing. Thats okay.
</td></tr>
<tr>
<td>C compiler or assembler</td>
<td>You need either a compiler or an assembler. I will show you code for doing it both ways. I will handwrite the assembly so it should be easier to read and work with.
</td></tr>
<tr>
<td>objcopy</td>
<td>You need something like objcopy on most Linux distributions. What we are going to have to do is copy out the .text section. Like I said this is just really quick and dirty example. We will make a flat binary.
</td></tr></tbody></table>
<h2><span class="mw-headline" id="Memory">Memory</span></h2>
<p>You will notice I am producing a flat binary output. This output contains no headers and the entry functions begins at the first byte of the image produced. The image is loaded by QEMU to the memory address 0x10000. QEMU supports loading an ELF format image and should
correctly place each image section at the specified address. When you write software for real embedded devices they are generally not going to support this as you will write the image directly to their ROM. A many devices have a secondary ROM area that actually provides support when placed in a special mode to allow you to flash your BOOT image which goes in the lower part of the ROM or somewhere different. This essentially consists of two ROMs in essence where the primary boot code allows you to easily flash the device over USB when a special button is held. If not it jumps to your BOOT code. If it can handle non flat binary formats then this special initial ROM code will support this functionality and you can find it in your boards documentation.
</p><p>But, for the most part you are going to be uploading a flat binary file.
</p>
<h2><span class="mw-headline" id="C_Code">C Code</span></h2>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr" dir="ltr"><pre><span></span><span class="k">typedef</span><span class="w"> </span><span class="kt">int</span><span class="p">(</span><span class="o">*</span><span class="n">PFN</span><span class="p">)(</span><span class="kt">void</span><span class="p">);</span><span class="w"></span>

<span class="kt">void</span><span class="w"> </span><span class="nf">start</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span><span class="w"></span>


<span class="kt">void</span><span class="w"> </span><span class="nf">__attribute__</span><span class="p">((</span><span class="kr">naked</span><span class="p">))</span><span class="w"> </span><span class="n">entry</span><span class="p">()</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">	</span><span class="n">__asm__</span><span class="p">(</span><span class="s">&quot;mov	sp, #0x60 &lt;&lt; 8&quot;</span><span class="p">);</span><span class="w"></span>
<span class="w">	</span><span class="n">__asm__</span><span class="p">(</span><span class="s">&quot;bl	start&quot;</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>

<span class="cp">#define PL110_CR_EN		0x001</span>
<span class="cp">#define PL110_CR_PWR		0x800</span>
<span class="cp">#define PL110_IOBASE		0xc0000000</span>
<span class="cp">#define PL110_PALBASE		(PL110_IOBASE + 0x200)</span>

<span class="k">typedef</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">		</span><span class="n">uint32</span><span class="p">;</span><span class="w"></span>
<span class="k">typedef</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">		</span><span class="n">uint8</span><span class="p">;</span><span class="w"></span>
<span class="k">typedef</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w">		</span><span class="n">uint16</span><span class="p">;</span><span class="w"></span>

<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_PL110MMIO</span><span class="w"> </span>
<span class="p">{</span><span class="w"></span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">tim0</span><span class="p">;</span><span class="w">		</span><span class="c1">//0</span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">tim1</span><span class="p">;</span><span class="w">		</span><span class="c1">//4</span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">tim2</span><span class="p">;</span><span class="w">		</span><span class="c1">//8</span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">d</span><span class="p">;</span><span class="w">		</span><span class="c1">//c</span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">upbase</span><span class="p">;</span><span class="w">	</span><span class="c1">//10</span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">f</span><span class="p">;</span><span class="w">		</span><span class="c1">//14</span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">g</span><span class="p">;</span><span class="w">		</span><span class="c1">//18</span>
<span class="w">	</span><span class="n">uint32</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="n">control</span><span class="p">;</span><span class="w">	</span><span class="c1">//1c</span>
<span class="p">}</span><span class="w"> </span><span class="n">PL110MMIO</span><span class="p">;</span><span class="w"></span>

<span class="kt">void</span><span class="w"> </span><span class="nf">start</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">	</span><span class="n">PFN</span><span class="w">		</span><span class="n">fn</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="n">PL110MMIO</span><span class="w">	</span><span class="o">*</span><span class="n">plio</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="kt">int</span><span class="w">		</span><span class="n">x</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="n">uint16</span><span class="w">		</span><span class="k">volatile</span><span class="w"> </span><span class="o">*</span><span class="n">fb</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span>
<span class="w">	</span><span class="n">plio</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">PL110MMIO</span><span class="o">*</span><span class="p">)</span><span class="n">PL110_IOBASE</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span>
<span class="w">	</span><span class="cm">/* 640x480 pixels */</span><span class="w"></span>
<span class="w">	</span><span class="n">plio</span><span class="o">-&gt;</span><span class="n">tim0</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mh">0x3f1f3f9c</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="n">plio</span><span class="o">-&gt;</span><span class="n">tim1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mh">0x080b61df</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="n">plio</span><span class="o">-&gt;</span><span class="n">upbase</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mh">0x200000</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="cm">/* 16-bit color */</span><span class="w"></span>
<span class="w">	</span><span class="n">plio</span><span class="o">-&gt;</span><span class="n">control</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mh">0x1829</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="n">fb</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">uint16</span><span class="o">*</span><span class="p">)</span><span class="mh">0x200000</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="p">(</span><span class="mi">640</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="mi">480</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">10</span><span class="p">;</span><span class="w"> </span><span class="o">++</span><span class="n">x</span><span class="p">)</span><span class="w"></span>
<span class="w">		</span><span class="n">fb</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mh">0x1f</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="p">(</span><span class="mi">5</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mi">6</span><span class="p">)</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="mh">0xf</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="mi">5</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span>
<span class="w">	</span><span class="cm">/* uncomment this and the function pointer should crash QEMU if you set it for 8MB of ram or less */</span><span class="w"></span>
<span class="w">	</span><span class="k">for</span><span class="p">(;;);</span><span class="w"></span>
<span class="w">	</span><span class="n">fn</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">PFN</span><span class="p">)</span><span class="mh">0x800f20</span><span class="p">;</span><span class="w"></span>
<span class="w">	</span><span class="n">fn</span><span class="p">();</span><span class="w"></span>
<span class="w">	</span><span class="k">return</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
<p>A naked function implementation so we can setup the stack, which then calls the actual C function start. Then we initialize the card and draw a light blue color across the screen.
</p><p>To compile it and produce the binary file to use with QEMU first copy the code above into
a file named <i>test.c</i>. Then execute the following. Your actual binaries will likely differ.
Make sure your using a cross-toolchain for ARM and not your host system unless your host
system is ARM.
</p>
<pre>    ./gcc-arm test.c -nostdlib -o test.o
    ./objcopy-arm -j .text -O binary test.o test.bin
     qemu-system-arm -m 8 -kernel test.bin
</pre>
<p>If all goes well QEMU will display a light blue screen.
</p><p><br />
</p>
<h2><span class="mw-headline" id="Assembly">Assembly</span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nl">main:</span><span class="w"></span>
<span class="w">	</span><span class="nf">eor</span><span class="w">	</span><span class="no">r0</span><span class="p">,</span><span class="w"> </span><span class="no">r0</span><span class="p">,</span><span class="w"> </span><span class="no">r0</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r0</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">xc0</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">24</span><span class="w"></span>
<span class="w">		</span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x3f</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">24</span><span class="w"></span>
<span class="w">	</span><span class="nf">add</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x1f</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>
<span class="w">	</span><span class="nf">add</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x3f</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">8</span><span class="w"></span>
<span class="w">	</span><span class="nf">add</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x9c</span><span class="w"></span>
<span class="w">	</span><span class="nf">str</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">r0</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="p">]</span><span class="w"></span>
<span class="w">	</span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x08</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">24</span><span class="w"></span>
<span class="w">	</span><span class="nf">add</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x0b</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>
<span class="w">	</span><span class="nf">add</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x61</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">8</span><span class="w"></span>
<span class="w">	</span><span class="nf">add</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">xdf</span><span class="w"></span>
<span class="w">	</span><span class="nf">str</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">r0</span><span class="p">,</span><span class="w"> </span><span class="mi">#4</span><span class="p">]</span><span class="w"></span>
<span class="w">	</span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x20</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>
<span class="w">	</span><span class="nf">str</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">r0</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x10</span><span class="p">]</span><span class="w"></span>
<span class="w">	</span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x18</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">8</span><span class="w"></span>
<span class="w">	</span><span class="nf">add</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x29</span><span class="w"></span>
<span class="w">	</span><span class="nf">str</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">r0</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x1c</span><span class="p">]</span><span class="w"></span>
<span class="w">	</span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r2</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x4b</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">12</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r1</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x20</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w">	</span><span class="no">r3</span><span class="p">,</span><span class="w"> </span><span class="mi">#0</span><span class="no">x1f</span><span class="w"></span>
<span class="nl">clearscreen:</span><span class="w"></span>
<span class="w">	</span><span class="nf">strh</span><span class="w">	</span><span class="no">r3</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">r1</span><span class="p">],</span><span class="w"> </span><span class="mi">#2</span><span class="w"></span>
<span class="w">	</span><span class="nf">subs</span><span class="w">	</span><span class="no">r2</span><span class="p">,</span><span class="w"> </span><span class="no">r2</span><span class="p">,</span><span class="w"> </span><span class="mi">#1</span><span class="w"></span>
<span class="w">	</span><span class="nf">bne</span><span class="w">	</span><span class="no">clearscreen</span><span class="w"></span>
<span class="w">	</span><span class="c1">#b	0x800000</span>
<span class="nl">lockme:</span><span class="w"></span>
<span class="w">	</span><span class="nf">b</span><span class="w">	</span><span class="no">lockme</span><span class="w"></span>
</pre></div>
<p>We initialize the card then we draw bright red to the screen.
</p><p>To assemble it and produce the binary file to use with QEMU first copy the code above into
a file named <i>test.asm</i>. Then execute the following. Your actual binaries will likely differ.
Make sure your using a cross-toolchain for ARM and not your host system unless your host
system is ARM.
</p>
<pre>     ./as-arm test.asm -o test.o
     ./objcopy-arm -j .text -O binary test.o test.bin
     qemu-system-arm -m 8 -kernel test.bin
</pre>
<p>If all goes well QEMU will display a bright red screen.
</p>
<h2><span id="More_Flexible_Compile.2FLink"></span><span class="mw-headline" id="More_Flexible_Compile/Link">More Flexible Compile/Link</span></h2>
<p>The 0x10000 is the area in memory this image is going to start at.
</p>
<h3><span class="mw-headline" id="link.ld">link.ld</span></h3>
<pre>ENTRY (entry)

SECTIONS
{
    . = 0x10000;
    .text&#160;: { *(.text*) *(.rodata*) *(.data*) *(.bss*) *(COMMON) }
     _EOI = .;
}
</pre>
<h3><span class="mw-headline" id="script">script</span></h3>
<p>You can notice now we are supporting the compile of multiple sources, and a seperate linking step which uses our linker
script (above). This build scheme supports properly referencing global variables in your code, but still produces a flat
binary file with no header or sections. It also directs any output written to the serial port to stdout.
</p>
<pre>#!/bin/sh
arm-linux-gnueabi-gcc -Wall -Wextra -Werror -nostdlib -nostartfiles -ffreestanding -std=gnu99 -c *.c
arm-linux-gnueabi-ld -T link.ld -o _armos.bin *.o
arm-linux-gnueabi-objcopy -j .text -O binary _armos.bin armos.bin
qemu-system-arm -m 8 -kernel armos.bin -serial stdio
</pre>
<p>See <a href="ARM_Integrator-CP_Bare_Bones" title="ARM Integrator-CP Bare Bones">ARM_Integrator-CP_Bare_Bones</a> for writing to the serial port.
</p>
<h2><span class="mw-headline" id="Explanation">Explanation</span></h2>
<p>Essentially, what we did was set just enough to make it work with <i>QEMU PC emulator version 0.12.5 (Debian 0.12.5+dfsg-3squeeze1), Copyright (c) 2003-2008 Fabrice Bellard</i>. If it does not work and you have a different version of QEMU then that could be the problem, but then again make sure you used the correct toolchain.
</p><p>Now, the real hardware. Well its going to want you to set more values then just that. Also, the pixels are 16-bit in the memory buffer at 0x200000 and they are in 565 format BGR. So blue bits occupy the most significant bits and there is 5 of them. B:5 G:6 R:5 - green has 6 bits. This is a common format and used with DXT1 compression format most graphics cards support.
</p><p>After we initialize the card we just set the same value in a loop. Now, you will notice that in both the C and the assembly code that I have a loop and a commented out branch instruction or in the C code I have a function pointer which will crash the emulator. Its not going to hard crash it, but it will make the emulator stop and display the registers. This is highly useful as a debugging aid. Since you place it somewhere in your program and it will tell you what all the registers contain so you can debug difficult pieces of code. It can also tell you if the code has deadlocked. How else do you know if the code has completed properly or has deadlocked? You do not know unless you make it do something to tell you. 
</p><p>Since you have the ability to plot colored pixels on the screen you have another way to debug your operating system that you are going to build a interesting GUI on top on while completely forgetting about the real interesting stuff like processes, threads, timers, priority, disk I/O, devices, memory management, heaps...
</p><p><i>But, having fun is important too it just requires forgetting about all that! So have fun because thats why I made this page.</i>
</p>
<!-- 
NewPP limit report
Cached time: 20250212012233
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.030 seconds
Real time usage: 0.297 seconds
Preprocessor visited node count: 68/1000000
Post‐expand include size: 902/2097152 bytes
Template argument size: 226/2097152 bytes
Highest expansion depth: 6/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 18399/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    1.206      1 -total
100.00%    1.206      1 Template:FirstPerson
 45.37%    0.547      1 Template:NoteBox
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:3150-0!canonical and timestamp 20250212012232 and revision id 28052.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;oldid=28052">https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;oldid=28052</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Articles_Written_in_First_Person" title="Category:Articles Written in First Person">Articles Written in First Person</a></li><li><a href="./Category:ARM" title="Category:ARM">ARM</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=ARM+Integrator-CP+PL110+Dirty" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="ARM_Integrator-CP_PL110_Dirty#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="ARM_Integrator-CP_PL110_Dirty" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:ARM_Integrator-CP_PL110_Dirty&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="ARM_Integrator-CP_PL110_Dirty"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/ARM_Integrator-CP_PL110_Dirty" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/ARM_Integrator-CP_PL110_Dirty" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;oldid=28052" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 9 July 2023, at 19:14.</li>
	<li id="footer-info-0">This page has been accessed 2,261 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=ARM_Integrator-CP_PL110_Dirty&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.030","walltime":"0.297","ppvisitednodes":{"value":68,"limit":1000000},"postexpandincludesize":{"value":902,"limit":2097152},"templateargumentsize":{"value":226,"limit":2097152},"expansiondepth":{"value":6,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":18399,"limit":5000000},"timingprofile":["100.00%    1.206      1 -total","100.00%    1.206      1 Template:FirstPerson"," 45.37%    0.547      1 Template:NoteBox"]},"cachereport":{"timestamp":"20250212012233","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":392});});</script>
</body>
</html>