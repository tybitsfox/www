<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>LLVM Cross-Compiler - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"70590e3da5598a8639a5219e","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"LLVM_Cross-Compiler","wgTitle":"LLVM Cross-Compiler","wgCurRevisionId":27941,"wgRevisionId":27941,"wgArticleId":2968,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","In Progress","Level 3 Tutorials","Compilers"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"LLVM_Cross-Compiler","wgRelevantArticleId":2968,"wgIsProbablyEditable":false,
"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-LLVM_Cross-Compiler rootpage-LLVM_Cross-Compiler skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">LLVM Cross-Compiler</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="LLVM_Cross-Compiler#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="LLVM_Cross-Compiler#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></tbody></table>
</center><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_3.png" class="image"><img alt="Difficulty 3.png" src="images/c/c1/Difficulty_3.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Advanced</td></tr></tbody></table>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="LLVM_Cross-Compiler#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="LLVM_Cross-Compiler#About"><span class="tocnumber">1.1</span> <span class="toctext">About</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="LLVM_Cross-Compiler#Requirements"><span class="tocnumber">1.2</span> <span class="toctext">Requirements</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="LLVM_Cross-Compiler#Building"><span class="tocnumber">1.3</span> <span class="toctext">Building</span></a>
<ul>
<li class="toclevel-3 tocsection-5"><a href="LLVM_Cross-Compiler#Checking_out_sources"><span class="tocnumber">1.3.1</span> <span class="toctext">Checking out sources</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="LLVM_Cross-Compiler#Building_from_sources_(Possibly_Unstable)"><span class="tocnumber">1.3.2</span> <span class="toctext">Building from sources (Possibly Unstable)</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="LLVM_Cross-Compiler#Debian"><span class="tocnumber">1.3.3</span> <span class="toctext">Debian</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-8"><a href="LLVM_Cross-Compiler#Building_libc++"><span class="tocnumber">1.4</span> <span class="toctext">Building libc++</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="LLVM_Cross-Compiler#Usage"><span class="tocnumber">1.5</span> <span class="toctext">Usage</span></a>
<ul>
<li class="toclevel-3 tocsection-10"><a href="LLVM_Cross-Compiler#Useful_Flags"><span class="tocnumber">1.5.1</span> <span class="toctext">Useful Flags</span></a>
<ul>
<li class="toclevel-4 tocsection-11"><a href="LLVM_Cross-Compiler#-ffreestanding"><span class="tocnumber">1.5.1.1</span> <span class="toctext">-ffreestanding</span></a></li>
<li class="toclevel-4 tocsection-12"><a href="LLVM_Cross-Compiler#-fno-builtin"><span class="tocnumber">1.5.1.2</span> <span class="toctext">-fno-builtin</span></a></li>
<li class="toclevel-4 tocsection-13"><a href="LLVM_Cross-Compiler#-nostdlib"><span class="tocnumber">1.5.1.3</span> <span class="toctext">-nostdlib</span></a></li>
<li class="toclevel-4 tocsection-14"><a href="LLVM_Cross-Compiler#-nostdinc"><span class="tocnumber">1.5.1.4</span> <span class="toctext">-nostdinc</span></a></li>
<li class="toclevel-4 tocsection-15"><a href="LLVM_Cross-Compiler#-nostdinc++"><span class="tocnumber">1.5.1.5</span> <span class="toctext">-nostdinc++</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-2 tocsection-16"><a href="LLVM_Cross-Compiler#Using_system_roots"><span class="tocnumber">1.6</span> <span class="toctext">Using system roots</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="LLVM_Cross-Compiler#TODO"><span class="tocnumber">1.7</span> <span class="toctext">TODO</span></a></li>
</ul>
</li>
</ul>
</div>

<h1><span class="mw-headline" id="Introduction">Introduction</span></h1>
<pre>NOTE: This article is not complete yet.
Having working and production ready llvm/clang cross-compiler involves much more work than just what is explained here
(such that having llvm/clang use correct target associated sysroot, static linker, C/C++ libraries, etc.)
See <a rel="nofollow" class="external text" href="http://clang.llvm.org/UniversalDriver.html">clang Universal driver</a>.
For working and production ready clang/llvm cross-compiler use dedicated tools (such as <a rel="nofollow" class="external text" href="http://www.embtoolkit.org">EmbToolkit</a>) generating one for you.
</pre>
<h3><span class="mw-headline" id="About">About</span></h3>
<p>Generally speaking, a cross-compiler is a compiler that runs on platform A (the <b>host</b>), but generates executables for platform B (the <b>target</b>). These two platforms may (but do not need to) differ in CPU, operating system, and/or <a href="./Category:Executable_Formats" title="Category:Executable Formats">executable format</a>.
</p><p>Clang (and llvm) are host cross compilers. They by default have the capability to cross compile, but also produce host binaries. See Usage
</p>
<h3><span class="mw-headline" id="Requirements">Requirements</span></h3>
<ul><li>A host system with a <i>working</i> compiler (can be GCC, Clang, etc).</li>
<li>A bash shell or comparable environment. If you are not using a bash shell, you might have to modify some of the command lines below. If you have just installed the basic <a href="Cygwin" title="Cygwin">Cygwin</a> package, you have to run the setup.exe again and install the following packages:
<ul><li>GNU Make or CMake</li>
<li>GNU Binutils (a fairly recent version of Binutils, try 2.21 or above if you get assembly compilation errors)</li>
<li>GIT or SVN (if building from sources)</li>
<li>Curl (if building from source using the linked article)</li></ul></li></ul>
<h2><span class="mw-headline" id="Building">Building</span></h2>
<h3><span class="mw-headline" id="Checking_out_sources">Checking out sources</span></h3>
<p>Clang/LLVM sources can be checked out either with GIT or SVN.
</p><p>For GIT, in bash:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>mkdir crossllvm
<span class="nb">cd</span> crossllvm
git clone http://llvm.org/git/llvm.git
<span class="nb">cd</span> llvm/tools
git clone http://llvm.org/git/clang.git
<span class="nb">cd</span> ../projects
git clone http://llvm.org/git/compiler-rt.git
</pre></div>
<p>For SVN, in bash:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>mkdir crossllvm
<span class="nb">cd</span> crossllvm
svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm
<span class="nb">cd</span> llvm/tools
svn co http://llvm.org/svn/llvm-project/cfe/trunk clang
<span class="nb">cd</span> ../projects
svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt
</pre></div>
<h3><span id="Building_from_sources_.28Possibly_Unstable.29"></span><span class="mw-headline" id="Building_from_sources_(Possibly_Unstable)">Building from sources (Possibly Unstable)</span></h3>
<p>After having checked out the sources (see above), in bash, from the "crossllvm" directory:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>mkdir build
<span class="nb">cd</span> build
../llvm/configure --enable-optimized
make
make install
</pre></div>
<p>Note: This Autoconf build has been removed from current versions of the LLVM build. All new builds must use CMake.
</p><p>Or with CMake (adjust the source path as needed):
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>mkdir build
<span class="nb">cd</span> build
cmake -DCMAKE_BUILD_TYPE:STRING<span class="o">=</span>Release ../llvm/
make
make install
</pre></div>
<p>Now you have got LLVM and Clang built!
</p><p>Alternatively, a faster and more up-to-date way for building from source (using ninja) is available <a rel="nofollow" class="external text" href="http://atta-metta.net/blog/2013/05/23/compiling-llvm-trunk/">here</a>. The linked article was written in May of 2013, so all of the article's provided custom patches are no longer required. Assuming you are using recent versions (released during or after June 2013) of compiler-rt, lldb, and libc++ then you can safely skip installing the provided patches within the article and proceed with compiling using the unmodified content of the git repos the article instructs you to download.
</p><p>A Clang cross-compiler is generated by <a rel="nofollow" class="external text" href="https://github.com/berkus/metta/blob/develop/build_toolchain.sh">this buildscript</a>. Dissect it to learn more. It uses some gcc and binutils to provide a fully working toolchain.
</p>
<h3><span class="mw-headline" id="Debian">Debian</span></h3>
<p>Open a terminal
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>sudo apt-get install clang
</pre></div>
<p>Note, you might have to disable host functionality. See Useful Flags
</p>
<h2><span id="Building_libc.2B.2B"></span><span class="mw-headline" id="Building_libc++">Building libc++</span></h2>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>$ git clone http://llvm.org/git/libcxx.git
$ <span class="nb">export</span> <span class="nv">TRIPLE</span><span class="o">=</span>-apple-
$ <span class="nb">cd</span> libcxx/lib
$ ./buildit
</pre></div>
<p>Built libc++ is not installed by default, you can use make install or copy files manually.
</p><p><br />
</p>
<h2><span class="mw-headline" id="Usage">Usage</span></h2>
<p>After building you will have a compiler able to output multiple output formats regardless of your current platform.
</p><p>For example, for cross compiling to ARM, you can use
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>-march<span class="o">=</span>armv7-a -mfloat-abi<span class="o">=</span>soft -ccc-host-triple arm-elf
</pre></div>
<p>Since 3.1, it can be shortened to
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>-target armv7--eabi -mcpu<span class="o">=</span>cortex-a9
</pre></div>
<p>An example for compiling to a generic X86 ELF target would be:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>--target<span class="o">=</span>i686-pc-none-elf -march<span class="o">=</span>i686
</pre></div>
<h3><span class="mw-headline" id="Useful_Flags">Useful Flags</span></h3>
<p>Some usefull flags for OS development.
</p>
<h4><span class="mw-headline" id="-ffreestanding">-ffreestanding</span></h4>
<p>Indicated that the file should be compiled for a freestanding enviroment (like a kernel), not a hosted (userspace), environment.
</p>
<h4><span class="mw-headline" id="-fno-builtin">-fno-builtin</span></h4>
<p>Disable special handling and optimizations of builtin functions like strlen and malloc.
</p>
<h4><span class="mw-headline" id="-nostdlib">-nostdlib</span></h4>
<p>Disables standard library
</p>
<h4><span class="mw-headline" id="-nostdinc">-nostdinc</span></h4>
<p>Makes sure the standard library headers are not included.
</p>
<h4><span id="-nostdinc.2B.2B"></span><span class="mw-headline" id="-nostdinc++">-nostdinc++</span></h4>
<p>Makes sure the standard C++ library headers are not included. This makes sense if you build a custom version of libc++ and want to avoid including system one.
</p>
<h2><span class="mw-headline" id="Using_system_roots">Using system roots</span></h2>
<p>Due to Clang's dependency on ld, you may get the error message "/usr/bin/ld: this linker was not configured to use sysroots". If you receive this error, you'll probably have to compile binutils with sysroot support. There is information how to do this <a href="GCC_Cross-Compiler#Binutils" title="GCC Cross-Compiler">GCC Cross-Compiler#Binutils</a> - note the "--with-sysroot" flag.
</p>
<h2><span class="mw-headline" id="TODO">TODO</span></h2>
<pre>TODO: describe non-svn build from released tarballs.
TODO: <a rel="nofollow" class="external text" href="http://www.embtoolkit.org">EmbToolkit project</a> recently added support to clang/llvm based cross compiler, ddd note about how it works.
</pre>
<!-- 
NewPP limit report
Cached time: 20250212010854
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.058 seconds
Real time usage: 1.225 seconds
Preprocessor visited node count: 218/1000000
Post‐expand include size: 730/2097152 bytes
Template argument size: 84/2097152 bytes
Highest expansion depth: 23/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 2633/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
105.28%    5.009      4 Template:If
100.00%    4.758      1 -total
 93.17%    4.433      4 Template:Show1
 86.06%    4.095      1 Template:Rating
 23.76%    1.130      4 Template:Eq
 12.59%    0.599      4 Template:Eq1
 12.27%    0.584      1 Template:In_Progress
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2968-0!canonical and timestamp 20250212010853 and revision id 27941.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=LLVM_Cross-Compiler&amp;oldid=27941">https://wiki.osdev.org/index.php?title=LLVM_Cross-Compiler&amp;oldid=27941</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:In_Progress" title="Category:In Progress">In Progress</a></li><li><a href="./Category:Level_3_Tutorials" title="Category:Level 3 Tutorials">Level 3 Tutorials</a></li><li><a href="./Category:Compilers" title="Category:Compilers">Compilers</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=LLVM+Cross-Compiler" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="LLVM_Cross-Compiler#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="LLVM_Cross-Compiler" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:LLVM_Cross-Compiler" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="LLVM_Cross-Compiler"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LLVM_Cross-Compiler&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LLVM_Cross-Compiler&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/LLVM_Cross-Compiler" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/LLVM_Cross-Compiler" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LLVM_Cross-Compiler&amp;oldid=27941" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=LLVM_Cross-Compiler&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 9 July 2023, at 15:53.</li>
	<li id="footer-info-0">This page has been accessed 4,523 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=LLVM_Cross-Compiler&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.058","walltime":"1.225","ppvisitednodes":{"value":218,"limit":1000000},"postexpandincludesize":{"value":730,"limit":2097152},"templateargumentsize":{"value":84,"limit":2097152},"expansiondepth":{"value":23,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":2633,"limit":5000000},"timingprofile":["105.28%    5.009      4 Template:If","100.00%    4.758      1 -total"," 93.17%    4.433      4 Template:Show1"," 86.06%    4.095      1 Template:Rating"," 23.76%    1.130      4 Template:Eq"," 12.59%    0.599      4 Template:Eq1"," 12.27%    0.584      1 Template:In_Progress"]},"cachereport":{"timestamp":"20250212010854","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":1324});});</script>
</body>
</html>