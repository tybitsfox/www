<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Rolling Your Own Bootloader - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"c0f1c0e1bc0cc0944dc3e3d8","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Rolling_Your_Own_Bootloader","wgTitle":"Rolling Your Own Bootloader","wgCurRevisionId":28631,"wgRevisionId":28631,"wgArticleId":1878,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","Level 2 Tutorials","OS Development","Tutorials","Bootloaders"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Rolling_Your_Own_Bootloader","wgRelevantArticleId":1878,
"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook",
"ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Rolling_Your_Own_Bootloader rootpage-Rolling_Your_Own_Bootloader skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Rolling Your Own Bootloader</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Rolling_Your_Own_Bootloader#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Rolling_Your_Own_Bootloader#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_2.png" class="image"><img alt="Difficulty 2.png" src="images/a/a1/Difficulty_2.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Medium</td></tr></tbody></table>
<p>Some people prefer to use their own software for everything, or wish to try their hand at coding a bootloader. This page attempts to describe what steps to take when you write your own bootloader. Before you start writing one, it is best that you know the background <a href="Bootloader" title="Bootloader">theory</a>.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Rolling_Your_Own_Bootloader#What_and_Why"><span class="tocnumber">1</span> <span class="toctext">What and Why</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Rolling_Your_Own_Bootloader#Disclaimer"><span class="tocnumber">1.1</span> <span class="toctext">Disclaimer</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="Rolling_Your_Own_Bootloader#What_you_need_to_do"><span class="tocnumber">1.2</span> <span class="toctext">What you need to do</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="Rolling_Your_Own_Bootloader#What_you_could_wish_to_add"><span class="tocnumber">1.3</span> <span class="toctext">What you could wish to add</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="Rolling_Your_Own_Bootloader#Loading..._Please_wait..."><span class="tocnumber">2</span> <span class="toctext">Loading... Please wait...</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="Rolling_Your_Own_Bootloader#Where_will_you_load_your_kernel?"><span class="tocnumber">2.1</span> <span class="toctext">Where will you load your kernel?</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="Rolling_Your_Own_Bootloader#How_will_you_find_your_kernel?"><span class="tocnumber">2.2</span> <span class="toctext">How will you find your kernel?</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="Rolling_Your_Own_Bootloader#What_else_could_you_need_to_load?"><span class="tocnumber">2.3</span> <span class="toctext">What else could you need to load?</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="Rolling_Your_Own_Bootloader#What_if_I_get_beyond_the_512_bytes_of_the_boot_sector?"><span class="tocnumber">2.4</span> <span class="toctext">What if I get beyond the 512 bytes of the boot sector?</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="Rolling_Your_Own_Bootloader#What_if_I_wish_to_offer_the_user_the_option_to_boot_several_OSes?"><span class="tocnumber">2.5</span> <span class="toctext">What if I wish to offer the user the option to boot several OSes?</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="Rolling_Your_Own_Bootloader#How_do_I_actually_load_bytes"><span class="tocnumber">2.6</span> <span class="toctext">How do I actually load bytes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="Rolling_Your_Own_Bootloader#Loaded._Gathering_Information"><span class="tocnumber">3</span> <span class="toctext">Loaded. Gathering Information</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="Rolling_Your_Own_Bootloader#Ready._Entering_Protected_Mode_..."><span class="tocnumber">4</span> <span class="toctext">Ready. Entering Protected Mode ...</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="Rolling_Your_Own_Bootloader#You_have_long_way_to_continue..."><span class="tocnumber">5</span> <span class="toctext">You have long way to continue...</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="Rolling_Your_Own_Bootloader#Help_I&#39;m_Stuck!"><span class="tocnumber">6</span> <span class="toctext">Help I'm Stuck!</span></a></li>
<li class="toclevel-1 tocsection-16"><a href="Rolling_Your_Own_Bootloader#A_list_of_things_you_might_want_to_do"><span class="tocnumber">7</span> <span class="toctext">A list of things you might want to do</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="What_and_Why">What and Why</span></h2>
<h3><span class="mw-headline" id="Disclaimer">Disclaimer</span></h3>
<p>Okay. You are here because you don't want to use a mainstream boot loader. You may also want to code your own bootloader as a learning experience to better understand how they function. We also have pages on many <a href="Bootloaders" class="mw-redirect" title="Bootloaders">Bootloaders</a> developed by this community, there's the <a href="Bare_bones" class="mw-redirect" title="Bare bones">Bare bones</a> but still people complain we don't have a page explaining how the bootloader can be coded.
</p><p>I won't try to give you full code that works because if that was what you were looking for, you'd be using one of the <a href="./Category:Bootloaders" title="Category:Bootloaders">premade bootloaders</a> instead. This page plans to tell you what is needed and what could be wished in a bootloader, and optionally points at parts of the FAQ that can help you achieving the goals.
</p><p>Whether or not you'll use your own bootloader or reuse an existing tool is completely up to you. If you get the feeling you don't understand a thing, make sure you read our page about the <a href="Boot_Sequence" title="Boot Sequence">Boot Sequence</a> first.<br />
</p><p>A good reason to have a custom bootloader would be a custom filesystem, though you could add support for your filesystem to <a href="GRUB" title="GRUB">GRUB</a> or perhaps some other bootloader. (GRUB is designed to accommodate such additions, other bootloaders may not be.)
</p>
<h3><span class="mw-headline" id="What_you_need_to_do">What you need to do</span></h3>
<p>The bootloader ultimately has to bring the kernel (and all the kernel needs to bootstrap) in memory, switch to an environment that the kernel will like and then transfer control to the kernel.
</p><p>As the scope of this article is protected mode C kernels, I'll assume that "an environment the kernel will like" means <a href="Protected_Mode" title="Protected Mode">Protected Mode</a>, with kernel and additional components being stored at their 'favorite', compile-time known locations, with a wide-enough stack ready and BSS section cleared.
</p>
<h3><span class="mw-headline" id="What_you_could_wish_to_add">What you could wish to add</span></h3>
<p>Since the bootloader runs in <a href="Real_Mode" title="Real Mode">Real Mode</a>, it has easier access to BIOS resources and functions. Therefore it's a good place to perform <a href="How_Do_I_Determine_The_Amount_Of_RAM" class="mw-redirect" title="How Do I Determine The Amount Of RAM">memory map detection</a>, <a href="Getting_VBE_Mode_Info" class="mw-redirect" title="Getting VBE Mode Info">detecting available video modes</a>, loading additional files etc. The bootloader will collect this information and present it in a way the kernel will be able to understand
</p>
<h2><span class="mw-headline" id="Loading..._Please_wait...">Loading... Please wait...</span></h2>
<h3><span id="Where_will_you_load_your_kernel.3F"></span><span class="mw-headline" id="Where_will_you_load_your_kernel?">Where will you load your kernel?</span></h3>
<p>You will have to decide where in memory you are going to load your kernel. Your kernel generally depends on it.
</p><p>In Real Mode, the easiest is to stay below the 1MB barrier, which means you practically have 512KB of memory to load things. You may wish the kernel to be loaded at a well-known position, say 0x10000 physical (es=0x1000, bx=0 when calling INT13h).
</p><p>If your kernel is bigger (or is expected to grow bigger) than this, you'll probably prefer to have the kernel above the 1MB barrier, which means you need to activate <a href="A20_Line" title="A20 Line">A20 gate</a> and switch to <a href="Unreal_Mode" title="Unreal Mode">Unreal Mode</a> to load the kernel (with A20 alone, you cannot have more than 64K above 1MB).
</p><p>Note that BIOS will still be unable to write to memory above 1MB, so you need to read stuff in a buffer below 1MB and then perform a rep movsd to place the data where they ultimately should go.
</p>
<h3><span id="How_will_you_find_your_kernel.3F"></span><span class="mw-headline" id="How_will_you_find_your_kernel?">How will you find your kernel?</span></h3>
<p>The bits of your kernel are somewhere on some disk (presumably the <a href="Bootable_Disk" title="Bootable Disk">booting disk</a>, but this is not mandatory). Question is: where on the disk? Is it a regular file on a <a href="FAT" title="FAT">FAT-formatted floppy</a>? is it a collection of consecutive sectors in the "reserved area" of the FAT12 floppy (in which case you may need a dedicated tool to format the disk and install the kernel on it)? Or is the floppy simply left unformatted and kernel pasted directly with a <a href="Disk_Images" title="Disk Images">disk image tool</a>.
</p><p>All the above options are possible. Maybe the one I'd choose myself would be to reserve enough space on a FAT12 floppy to store the <i>list of sectors</i> used by the kernel file. The "advantage" of being fully-FAT12 is that you don't need to re-write the bootsector every time you rewrite the kernel.
</p>
<h3><span id="What_else_could_you_need_to_load.3F"></span><span class="mw-headline" id="What_else_could_you_need_to_load?">What else could you need to load?</span></h3>
<p>That mainly depends on what's in your kernel. Linux, for instance, requires an additional 'initrd' file that will contain the 'initialization process' (as user level). If your kernel is modular and if <a href="File_Systems" title="File Systems">File Systems</a> are understood by some modules, you need to load the modules along with the kernel. Same goes for 'microkernel services' like disk/files/memory services, etc.
</p>
<h3><span id="What_if_I_get_beyond_the_512_bytes_of_the_boot_sector.3F"></span><span class="mw-headline" id="What_if_I_get_beyond_the_512_bytes_of_the_boot_sector?">What if I get beyond the 512 bytes of the boot sector?</span></h3>
<p>Make sure the first 512 bytes are able to load the rest of your loader and you're safe. Some do this with a separate "second stage" loader, others by really inserting a '512-bytes' break in their ASM code, making sure the rest of the loader is put after the bootsector (that is, starting at 0x7e00).
</p>
<h3><span id="What_if_I_wish_to_offer_the_user_the_option_to_boot_several_OSes.3F"></span><span class="mw-headline" id="What_if_I_wish_to_offer_the_user_the_option_to_boot_several_OSes?">What if I wish to offer the user the option to boot several OSes?</span></h3>
<p>The easiest way to boot another OS is a mechanism called <i>chainloading</i>. Windows stores something akin to a second-stage bootloader in the boot sector of the <i>partition</i> it was installed in. When installing Linux, writing e.g. LILO or GRUB to the <i>partition</i> boot sector instead of the MBR is also an option. Now, the thing your MBR bootsector can do is to <i>relocate</i> itself (copying from 0x0000:0x7c00 to, traditionally, 0x0060:0x0000), parse the partition table, display some kind of menu and let the user chose which partition to boot from. Then, your (relocated) MBR bootsector would load that <i>partition</i> boot sector to 0x0000:0x7c00, and jump there. The partition boot sector would be none the wiser that there already was a bootsector loaded <i>before</i>, and could actually load yet <i>another</i> bootsector - which is why it's called <i>chainloading</i>. It doesn't really matter where you decide to relocate the boot sector as long as you don't overwrite the <a href="IVT" class="mw-redirect" title="IVT">IVT</a> (if IF in EFLAGS is set), the <a href="Memory_Map_(x86)#BIOS_Data_Area_(BDA)" title="Memory Map (x86)">BDA</a> or the <a href="Memory_Map_(x86)#Extended_BIOS_Data_Area_(EBDA)" title="Memory Map (x86)">EBDA</a>.
</p><p>You see that with displaying a menu in some intelligible way and accepting keystrokes, such a multi-option bootloader can get quite complex rather quickly. We didn't even touch the subject of booting from extended partitions, which would require sequentially reading and parsing multiple extended partition tables before printing the menu.
</p><p>Taken to the extreme, boot managers like that can become as complex as a simple OS (much like GRUB is, which offers reading from various filesystems, booting <a href="Multiboot" title="Multiboot">Multiboot</a> kernels, chainloading, loading initrd ramdisks etc. etc. - such internals will not be addressed here.
</p>
<h3><span class="mw-headline" id="How_do_I_actually_load_bytes">How do I actually load bytes</span></h3>
<p><a href="BIOS" title="BIOS">BIOS</a> interrupt 13h. Get info about it at <a href="Ralf_Brown's_Interrupt_List" title="Ralf Brown&#39;s Interrupt List">Ralf Brown's Interrupt List</a>, make sure you know (the now outdated) floppies may fail one or two times, that you cannot read more than a track at once, you have to use CHS addressing and you're done.
</p><p>To read from the hard drive (which is the preferred way these days, also used by CDROMs and USB-sticks), you probably want int 13h, ah=0x42, drive number 0x80 that uses simple <a href="LBA" title="LBA">LBA</a> addressing. Details in the interrupt list.
</p><p>If you need guidance, feel free to check <a rel="nofollow" class="external text" href="http://clicker.cvs.sourceforge.net/clicker/c32-lxsdk/kernel/src/sosflppy/lowlevel.asm?view=log">lowlevel.asm</a>
</p><p><br />
Note also that most <a href="File_Systems" title="File Systems">File Systems</a> involve some conversion between allocation units (blocks/clusters) and physical "Cylinder:Head:Sector" values. Those conversions are simple once you know the <i>sectors-per-track</i> and <i>heads</i> counts. Check out <a rel="nofollow" class="external text" href="http://www.nondot.org/sabre/os/articles">OSRC</a> for additional info. This is only relevant for outdated floppies; everything else, like hard drives, CDROMs, USB-sticks all use the simple LBA addressing scheme.
</p>
<pre>&gt; Does anyone have a formula for converting DOS Sectors to
&gt; Physical Sectors (Head, Cylinder, Sector) such as used in
&gt; INT 13h?

DOS_sector_num = BIOS_sector_num - 1 + Head_num*Sectors_per_track
		+ Track_num*Sectors_per_track*Total_heads

BIOS_sector_num = 1 + (DOS_sector_num MOD Sectors_per_track)
BIOS_Head_num   = (DOS_sector_num DIV Sectors_per_track) MOD Total_heads
BIOS_Track_num  = (DOS_sector_num DIV Sectors_per_track) DIV Total_heads
</pre>
<p>If you're loading above 1MB, you should proceed in 2 steps: first using BIOS to load in the "conventional" area, and then performing a <tt>rep movsd</tt> to place the data where they ultimately should go.
</p>
<h2><span class="mw-headline" id="Loaded._Gathering_Information">Loaded. Gathering Information</span></h2>
<p>The next step consist of collecting as much information as you can/need: <a href="How_Do_I_Determine_The_Amount_Of_RAM" class="mw-redirect" title="How Do I Determine The Amount Of RAM">amount of installed RAM</a>, available <a href="Getting_VBE_Mode_Info" class="mw-redirect" title="Getting VBE Mode Info">video modes</a> and things alike are easier to do in real mode, so better do them while in <a href="Real_Mode" title="Real Mode">Real Mode</a> than trying to come back to real mode for a trip later. Of course the exact requirements depend on your kernel.
</p><p>A very simple solution here is to organize your information as a flat table (ala <a href="BIOS" title="BIOS">BIOS data area</a>). An alternative could be to add those information as a structured flow: you keep an index at a well-known address (or at some address you'll pass to the kernel when loaded) and that index gives for each "key" the address of the corresponding data structure. E.g.
</p>
<pre>  organization           lookup code (eax == signature)
  +------+------+          mov esi, well_known_index_address
  | RAM. | 1234 |        .loop:
  | VBE. | 5678 |          cmp [esi],'END.'
  | MODS | 9ABC |          je .notfound
  | DISK | DEF0 |          add esi,8
  | END. | ---- |          cmp [esi-4],eax
  +------+------+          jne .loop
                           mov eax,[esi]
                           ret
</pre>
<h2><span class="mw-headline" id="Ready._Entering_Protected_Mode_...">Ready. Entering <a href="Protected_Mode" title="Protected Mode">Protected Mode</a> ...</span></h2>
<p>To enter protected mode you should first disable interrupts and set global descriptor table. After it set PE bit of CR0:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="no">cr0</span><span class="w"></span>
<span class="nf">or</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="mi">1</span><span class="w"></span>
<span class="nf">mov</span><span class="w"> </span><span class="no">cr0</span><span class="p">,</span><span class="no">eax</span><span class="w"></span>
</pre></div>
<p>After it set registers and do a far jump to kernel.
If data selector is 10h, code selector is 8 and kernel offset is 10000h do:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="nf">mov</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="mi">10</span><span class="no">h</span><span class="w"></span>
<span class="nf">mov</span><span class="w"> </span><span class="no">ds</span><span class="p">,</span><span class="no">ax</span><span class="w"></span>
<span class="nf">mov</span><span class="w"> </span><span class="no">es</span><span class="p">,</span><span class="no">ax</span><span class="w"></span>
<span class="nf">mov</span><span class="w"> </span><span class="no">fs</span><span class="p">,</span><span class="no">ax</span><span class="w"></span>
<span class="nf">mov</span><span class="w"> </span><span class="no">gs</span><span class="p">,</span><span class="no">ax</span><span class="w"></span>
<span class="nf">mov</span><span class="w"> </span><span class="no">ss</span><span class="p">,</span><span class="no">ax</span><span class="w"></span>
<span class="nf">jmp</span><span class="w"> </span><span class="mi">8</span><span class="p">:</span><span class="mi">10000</span><span class="no">h</span><span class="w"></span>
</pre></div>
<p>Notes:
</p>
<ul><li>that in this case, the GDT will be <i>temporary</i>. Indeed, the loader has no idea of what the kernel wants to do with the GDT, so all it can do is providing a minimal and let the kernel reload GDTR with an appropriate GDT later.</li>
<li>it's common for the loader to keep interrupts disabled (the kernel will enable them later when an IDT is properly set up)</li>
<li>give yourself the time about thinking whether you'll enable paging now or not. Keep in mind that debugging paging initialization code without the help of exception handlers may quickly become a nightmare!</li>
<li>it is possible to perform more initialization once protected mode is enabled and before kernel is loaded. This will, however, require that you mix 16 bits and 32bits code in a single object file, which can quickly become a nightmare too...</li>
<li>it is very likely that your kernel does not start with an executable code, rather it has an ELF or PE header at 10000h. You'll have to parse that to get the entry point to jump to.</li></ul>
<h2><span class="mw-headline" id="You_have_long_way_to_continue...">You have long way to continue...</span></h2>
<p>Now, you are very distant from using extern and call function for C Code. You will need to enable <a href="A20" class="mw-redirect" title="A20">A20</a>, make something which reads images (so you can actually boot any .bin or .sys file), and so on.
</p>
<h2><span id="Help_I.27m_Stuck.21"></span><span class="mw-headline" id="Help_I'm_Stuck!">Help I'm Stuck!</span></h2>
<p>The only way to figure out what's wrong with your boot loader is to debug it in a VM. You could probably print out variables, but the limited space makes this uneccesarily hard.
Also reading <a href="My_Bootloader_Does_Not_Work" title="My Bootloader Does Not Work">common mistakes and gotchas</a> may give you ideas about your issue.
</p>
<h2><span class="mw-headline" id="A_list_of_things_you_might_want_to_do">A list of things you might want to do</span></h2>
<ul><li>Setup 16-bit segment registers and stack</li>
<li>Print startup message</li>
<li>Check presence of PCI, CPUID, MSRs</li>
<li>Enable and confirm enabled A20 line</li>
<li>Load GDTR</li>
<li>Inform BIOS of target processor mode</li>
<li>Get memory map from BIOS</li>
<li>Locate kernel in filesystem</li>
<li>Allocate memory to load kernel image</li>
<li>Load kernel image into buffer</li>
<li>Enable graphics mode</li>
<li>Check kernel image ELF headers</li>
<li>Enable long mode, if 64-bit</li>
<li>Allocate and map memory for kernel segments</li>
<li>Setup stack</li>
<li>Setup COM serial output port</li>
<li>Setup IDT</li>
<li>Disable PIC</li>
<li>Check presence of CPU features (NX, SMEP, x87, PCID, global pages, TCE, WP, MMX, SSE, SYSCALL), and enable them</li>
<li>Assign a PAT to write combining</li>
<li>Setup FS/GS base</li>
<li>Load IDTR</li>
<li>Enable APIC and setup using information in ACPI tables</li>
<li>Setup GDT and TSS</li></ul>
<!-- 
NewPP limit report
Cached time: 20250211122001
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.033 seconds
Real time usage: 0.302 seconds
Preprocessor visited node count: 192/1000000
Post‐expand include size: 342/2097152 bytes
Template argument size: 52/2097152 bytes
Highest expansion depth: 19/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 2771/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    4.492      1 Template:Rating
100.00%    4.492      1 -total
 97.84%    4.395      3 Template:If
 85.43%    3.838      3 Template:Show1
 21.51%    0.966      3 Template:Eq
 10.20%    0.458      3 Template:Eq1
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1878-0!canonical and timestamp 20250211122001 and revision id 28631.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Rolling_Your_Own_Bootloader&amp;oldid=28631">https://wiki.osdev.org/index.php?title=Rolling_Your_Own_Bootloader&amp;oldid=28631</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Level_2_Tutorials" title="Category:Level 2 Tutorials">Level 2 Tutorials</a></li><li><a href="./Category:OS_Development" title="Category:OS Development">OS Development</a></li><li><a href="./Category:Tutorials" title="Category:Tutorials">Tutorials</a></li><li><a href="./Category:Bootloaders" title="Category:Bootloaders">Bootloaders</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Rolling+Your+Own+Bootloader" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Rolling_Your_Own_Bootloader#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Rolling_Your_Own_Bootloader" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:Rolling_Your_Own_Bootloader" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Rolling_Your_Own_Bootloader"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rolling_Your_Own_Bootloader&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rolling_Your_Own_Bootloader&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Rolling_Your_Own_Bootloader" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="./Special:RecentChangesLinked/Rolling_Your_Own_Bootloader" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rolling_Your_Own_Bootloader&amp;oldid=28631" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Rolling_Your_Own_Bootloader&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-lang" class="vector-menu mw-portlet mw-portlet-lang vector-menu-portal portal" aria-labelledby="p-lang-label" role="navigation"  >
	<h3
		id="p-lang-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">In other languages</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li class="interlanguage-link interwiki-de mw-list-item"><a href="http://www.lowlevel.eu/wiki/Eigener_Bootloader" title="Eigener Bootloader – Deutsch" lang="de" hreflang="de" class="interlanguage-link-target"><span>Deutsch</span></a></li></ul>
		
	</div>
</nav>

</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 16 February 2024, at 09:24.</li>
	<li id="footer-info-0">This page has been accessed 25,193 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Rolling_Your_Own_Bootloader&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.033","walltime":"0.302","ppvisitednodes":{"value":192,"limit":1000000},"postexpandincludesize":{"value":342,"limit":2097152},"templateargumentsize":{"value":52,"limit":2097152},"expansiondepth":{"value":19,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":2771,"limit":5000000},"timingprofile":["100.00%    4.492      1 Template:Rating","100.00%    4.492      1 -total"," 97.84%    4.395      3 Template:If"," 85.43%    3.838      3 Template:Show1"," 21.51%    0.966      3 Template:Eq"," 10.20%    0.458      3 Template:Eq1"]},"cachereport":{"timestamp":"20250211122001","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":399});});</script>
</body>
</html>