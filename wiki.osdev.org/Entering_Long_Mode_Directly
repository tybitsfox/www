<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Entering Long Mode Directly - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"cb22e94e9249b9c9f33a7f6f","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Entering_Long_Mode_Directly","wgTitle":"Entering Long Mode Directly","wgCurRevisionId":29099,"wgRevisionId":29099,"wgArticleId":2322,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","X86-64"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Entering_Long_Mode_Directly","wgRelevantArticleId":2322,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],
"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Entering_Long_Mode_Directly rootpage-Entering_Long_Mode_Directly skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Entering Long Mode Directly</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Entering_Long_Mode_Directly#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Entering_Long_Mode_Directly#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>For some reason, you might want to switch to 64 bit mode in your bootloader without entering <a href="Protected_mode" class="mw-redirect" title="Protected mode">protected mode</a>. The following article practically described how to do so, mainly demonstrating it by example assembly code. Additionally, some may find it easier to switch directly to long mode on additional CPUs as they are initialized for <a href="Symmetric_Multiprocessing" title="Symmetric Multiprocessing">Symmetric Multiprocessing</a>.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Entering_Long_Mode_Directly#Switching_to_Long_Mode"><span class="tocnumber">1</span> <span class="toctext">Switching to Long Mode</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Entering_Long_Mode_Directly#Notes_about_the_above_code"><span class="tocnumber">1.1</span> <span class="toctext">Notes about the above code</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="Entering_Long_Mode_Directly#Example_bootsector"><span class="tocnumber">2</span> <span class="toctext">Example bootsector</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="Entering_Long_Mode_Directly#Notes_about_the_above_bootsector"><span class="tocnumber">2.1</span> <span class="toctext">Notes about the above bootsector</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="Entering_Long_Mode_Directly#See_Also"><span class="tocnumber">3</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="Entering_Long_Mode_Directly#Forum_Threads"><span class="tocnumber">3.1</span> <span class="toctext">Forum Threads</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Switching_to_Long_Mode">Switching to Long Mode</span></h2>
<p>The following can be used to switch directly to Long Mode. The code is well documented through comments, and nearly explains almost everything it does.
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">PAGE_PRESENT</span><span class="w">    </span><span class="p">(</span><span class="mi">1</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">0</span><span class="p">)</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">PAGE_WRITE</span><span class="w">      </span><span class="p">(</span><span class="mi">1</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">1</span><span class="p">)</span><span class="w"></span>

<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">CODE_SEG</span><span class="w">     </span><span class="mi">0x0008</span><span class="w"></span>
<span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">DATA_SEG</span><span class="w">     </span><span class="mi">0x0010</span><span class="w"></span>

<span class="nf">ALIGN</span><span class="w"> </span><span class="mi">4</span><span class="w"></span>
<span class="nl">IDT:</span><span class="w"></span>
<span class="w">    </span><span class="na">.Length</span><span class="w">       </span><span class="no">dw</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="w">    </span><span class="na">.Base</span><span class="w">         </span><span class="no">dd</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>

<span class="c1">; Function to switch directly to long mode from real mode.</span>
<span class="c1">; Identity maps the first 2MiB.</span>
<span class="c1">; Uses Intel syntax.</span>

<span class="c1">; es:edi    Should point to a valid page-aligned 16KiB buffer, for the PML4, PDPT, PD and a PT.</span>
<span class="c1">; ss:esp    Should point to memory that can be used as a small (1 uint32_t) stack</span>

<span class="nl">SwitchToLongMode:</span><span class="w"></span>
<span class="w">    </span><span class="c1">; Zero out the 16KiB buffer.</span>
<span class="w">    </span><span class="c1">; Since we are doing a rep stosd, count should be bytes/4.   </span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="no">di</span><span class="w">                           </span><span class="c1">; REP STOSD alters DI.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ecx</span><span class="p">,</span><span class="w"> </span><span class="mi">0x1000</span><span class="w"></span>
<span class="w">    </span><span class="nf">xor</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">cld</span><span class="w"></span>
<span class="w">    </span><span class="na">rep</span><span class="w"> </span><span class="nf">stosd</span><span class="w"></span>
<span class="w">    </span><span class="nf">pop</span><span class="w"> </span><span class="no">di</span><span class="w">                            </span><span class="c1">; Get DI back.</span>


<span class="w">    </span><span class="c1">; Build the Page Map Level 4.</span>
<span class="w">    </span><span class="c1">; es:di points to the Page Map Level 4 table.</span>
<span class="w">    </span><span class="nf">lea</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">es</span><span class="p">:</span><span class="no">di</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x1000</span><span class="p">]</span><span class="w">         </span><span class="c1">; Put the address of the Page Directory Pointer Table in to EAX.</span>
<span class="w">    </span><span class="nf">or</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">PAGE_PRESENT</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">PAGE_WRITE</span><span class="w"> </span><span class="c1">; Or EAX with the flags - present flag, writable flag.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="p">[</span><span class="no">es</span><span class="p">:</span><span class="no">di</span><span class="p">],</span><span class="w"> </span><span class="no">eax</span><span class="w">                  </span><span class="c1">; Store the value of EAX as the first PML4E.</span>


<span class="w">    </span><span class="c1">; Build the Page Directory Pointer Table.</span>
<span class="w">    </span><span class="nf">lea</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">es</span><span class="p">:</span><span class="no">di</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x2000</span><span class="p">]</span><span class="w">         </span><span class="c1">; Put the address of the Page Directory in to EAX.</span>
<span class="w">    </span><span class="nf">or</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">PAGE_PRESENT</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">PAGE_WRITE</span><span class="w"> </span><span class="c1">; Or EAX with the flags - present flag, writable flag.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="p">[</span><span class="no">es</span><span class="p">:</span><span class="no">di</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x1000</span><span class="p">],</span><span class="w"> </span><span class="no">eax</span><span class="w">         </span><span class="c1">; Store the value of EAX as the first PDPTE.</span>

<span class="w">    </span>
<span class="w">    </span><span class="c1">; Build the Page Directory.</span>
<span class="w">    </span><span class="nf">lea</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">es</span><span class="p">:</span><span class="no">di</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x3000</span><span class="p">]</span><span class="w">         </span><span class="c1">; Put the address of the Page Table in to EAX.</span>
<span class="w">    </span><span class="nf">or</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">PAGE_PRESENT</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">PAGE_WRITE</span><span class="w"> </span><span class="c1">; Or EAX with the flags - present flag, writeable flag.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="p">[</span><span class="no">es</span><span class="p">:</span><span class="no">di</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x2000</span><span class="p">],</span><span class="w"> </span><span class="no">eax</span><span class="w">         </span><span class="c1">; Store to value of EAX as the first PDE.</span>
<span class="w">    </span>
<span class="w">    </span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="no">di</span><span class="w">                           </span><span class="c1">; Save DI for the time being.</span>
<span class="w">    </span><span class="nf">lea</span><span class="w"> </span><span class="no">di</span><span class="p">,</span><span class="w"> </span><span class="p">[</span><span class="no">di</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">0x3000</span><span class="p">]</span><span class="w">             </span><span class="c1">; Point DI to the page table.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">PAGE_PRESENT</span><span class="w"> </span><span class="err">|</span><span class="w"> </span><span class="no">PAGE_WRITE</span><span class="w">    </span><span class="c1">; Move the flags into EAX - and point it to 0x0000.</span>


<span class="w">    </span><span class="c1">; Build the Page Table.</span>
<span class="nl">.LoopPageTable:</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="p">[</span><span class="no">es</span><span class="p">:</span><span class="no">di</span><span class="p">],</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">add</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x1000</span><span class="w"></span>
<span class="w">    </span><span class="nf">add</span><span class="w"> </span><span class="no">di</span><span class="p">,</span><span class="w"> </span><span class="mi">8</span><span class="w"></span>
<span class="w">    </span><span class="nf">cmp</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x200000</span><span class="w">                 </span><span class="c1">; If we did all 2MiB, end.</span>
<span class="w">    </span><span class="nf">jb</span><span class="w"> </span><span class="no">.LoopPageTable</span><span class="w"></span>

<span class="w">    </span><span class="nf">pop</span><span class="w"> </span><span class="no">di</span><span class="w">                            </span><span class="c1">; Restore DI.</span>
<span class="w">    </span>
<span class="w">    </span><span class="c1">; Disable IRQs</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="mi">0xFF</span><span class="w">                      </span><span class="c1">; Out 0xFF to 0xA1 and 0x21 to disable all IRQs.</span>
<span class="w">    </span><span class="nf">out</span><span class="w"> </span><span class="mi">0xA1</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w"></span>
<span class="w">    </span><span class="nf">out</span><span class="w"> </span><span class="mi">0x21</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w"></span>
<span class="w">    </span>
<span class="w">    </span><span class="nf">nop</span><span class="w"></span>
<span class="w">    </span><span class="nf">nop</span><span class="w"></span>

<span class="w">    </span><span class="nf">lidt</span><span class="w"> </span><span class="p">[</span><span class="no">IDT</span><span class="p">]</span><span class="w">                        </span><span class="c1">; Load a zero length IDT so that any NMI causes a triple fault.</span>

<span class="w">    </span><span class="c1">; Enter long mode.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">10100000</span><span class="no">b</span><span class="w">                </span><span class="c1">; Set the PAE and PGE bit.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">cr4</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">      </span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">edx</span><span class="p">,</span><span class="w"> </span><span class="no">edi</span><span class="w">                      </span><span class="c1">; Point CR3 at the PML4.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">cr3</span><span class="p">,</span><span class="w"> </span><span class="no">edx</span><span class="w"></span>
<span class="w">      </span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ecx</span><span class="p">,</span><span class="w"> </span><span class="mi">0xC0000080</span><span class="w">               </span><span class="c1">; Read from the EFER MSR. </span>
<span class="w">    </span><span class="nf">rdmsr</span><span class="w">    </span>

<span class="w">    </span><span class="no">or</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x00000100</span><span class="w">                </span><span class="c1">; Set the LME bit.</span>
<span class="w">    </span><span class="nf">wrmsr</span><span class="w"></span>
<span class="w">      </span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ebx</span><span class="p">,</span><span class="w"> </span><span class="no">cr0</span><span class="w">                      </span><span class="c1">; Activate long mode -</span>
<span class="w">    </span><span class="nf">or</span><span class="w"> </span><span class="no">ebx</span><span class="p">,</span><span class="mi">0x80000001</span><span class="w">                 </span><span class="c1">; - by enabling paging and protection simultaneously.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">cr0</span><span class="p">,</span><span class="w"> </span><span class="no">ebx</span><span class="w">                    </span>

<span class="w">    </span><span class="no">lgdt</span><span class="w"> </span><span class="p">[</span><span class="no">GDT.Pointer</span><span class="p">]</span><span class="w">                </span><span class="c1">; Load GDT.Pointer defined below.</span>
<span class="w">      </span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">CODE_SEG</span><span class="p">:</span><span class="no">LongMode</span><span class="w">             </span><span class="c1">; Load CS with 64 bit segment and flush the instruction cache</span>
<span class="w">      </span>
<span class="w">      </span>
<span class="w">    </span><span class="c1">; Global Descriptor Table</span>
<span class="nl">GDT:</span><span class="w"></span>
<span class="nl">.Null:</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x0000000000000000</span><span class="w">             </span><span class="c1">; Null Descriptor - should be present.</span>

<span class="nl">.Code:</span><span class="w"></span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x00209A0000000000</span><span class="w">             </span><span class="c1">; 64-bit code descriptor (exec/read).</span>
<span class="w">    </span><span class="nf">dq</span><span class="w"> </span><span class="mi">0x0000920000000000</span><span class="w">             </span><span class="c1">; 64-bit data descriptor (read/write).</span>
<span class="w">      </span>
<span class="nf">ALIGN</span><span class="w"> </span><span class="mi">4</span><span class="w"></span>
<span class="w">    </span><span class="nf">dw</span><span class="w"> </span><span class="mi">0</span><span class="w">                              </span><span class="c1">; Padding to make the &quot;address of the GDT&quot; field aligned on a 4-byte boundary</span>

<span class="nl">.Pointer:</span><span class="w"></span>
<span class="w">    </span><span class="nf">dw</span><span class="w"> </span><span class="no">$</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="no">GDT</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">1</span><span class="w">                    </span><span class="c1">; 16-bit Size (Limit) of GDT.</span>
<span class="w">    </span><span class="nf">dd</span><span class="w"> </span><span class="no">GDT</span><span class="w">                            </span><span class="c1">; 32-bit Base Address of GDT. (CPU will zero extend to 64-bit)</span>


<span class="err">[</span><span class="nf">BITS</span><span class="w"> </span><span class="mi">64</span><span class="p">]</span><span class="w">      </span>
<span class="no">LongMode</span><span class="p">:</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="no">DATA_SEG</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">es</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">fs</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">gs</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ss</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>

<span class="w">    </span><span class="c1">; Blank out the screen to a blue color.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">edi</span><span class="p">,</span><span class="w"> </span><span class="mi">0xB8000</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">rcx</span><span class="p">,</span><span class="w"> </span><span class="mi">500</span><span class="w">                      </span><span class="c1">; Since we are clearing uint64_t over here, we put the count as Count/4.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x1F201F201F201F20</span><span class="w">       </span><span class="c1">; Set the value to set the screen to: Blue background, white foreground, blank spaces.</span>
<span class="w">    </span><span class="na">rep</span><span class="w"> </span><span class="nf">stosq</span><span class="w">                         </span><span class="c1">; Clear the entire screen. </span>
<span class="w"> </span>
<span class="w">    </span><span class="c1">; Display &quot;Hello World!&quot;</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">edi</span><span class="p">,</span><span class="w"> </span><span class="mi">0x00b8000</span><span class="w">              </span>
<span class="w">    </span>
<span class="w">    </span><span class="no">mov</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x1F6C1F6C1F651F48</span><span class="w">    </span>
<span class="w">    </span><span class="no">mov</span><span class="w"> </span><span class="p">[</span><span class="no">edi</span><span class="p">],</span><span class="no">rax</span><span class="w"></span>
<span class="w">    </span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x1F6F1F571F201F6F</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="p">[</span><span class="no">edi</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">8</span><span class="p">],</span><span class="w"> </span><span class="no">rax</span><span class="w"></span>

<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">rax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x1F211F641F6C1F72</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="p">[</span><span class="no">edi</span><span class="w"> </span><span class="err">+</span><span class="w"> </span><span class="mi">16</span><span class="p">],</span><span class="w"> </span><span class="no">rax</span><span class="w"></span>
<span class="w">    </span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">Main.Long</span><span class="w">                     </span><span class="c1">; You should replace this jump to wherever you want to jump to.</span>
</pre></div>
<h3><span class="mw-headline" id="Notes_about_the_above_code">Notes about the above code</span></h3>
<ol><li>The above code assumes that the caller has checked whether the CPU supports x86_64 or not.</li>
<li>As noted in code comments, only 2MB is mapped. The code can be easily modified to map the kernel to higher half.</li>
<li>The code doesn't include BPB for floppies, or any such thing. This also can be easily added.</li></ol>
<h2><span class="mw-headline" id="Example_bootsector">Example bootsector</span></h2>
<p>The following example bootsector has been provided for completeness. It checks whether the CPU supports x86_64 or not. It then calls SwitchToLongMode to switch to long mode.
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="err">%</span><span class="nf">define</span><span class="w"> </span><span class="no">FREE_SPACE</span><span class="w"> </span><span class="mi">0x9000</span><span class="w"></span>

<span class="nf">ORG</span><span class="w"> </span><span class="mi">0x7C00</span><span class="w"></span>
<span class="nf">BITS</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>

<span class="c1">; Main entry point where BIOS leaves us.</span>

<span class="nl">Main:</span><span class="w"></span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="mi">0x0000</span><span class="p">:.</span><span class="no">FlushCS</span><span class="w">               </span><span class="c1">; Some BIOS&#39; may load us at 0x0000:0x7C00 while other may load us at 0x07C0:0x0000.</span>
<span class="w">                                      </span><span class="c1">; Do a far jump to fix this issue, and reload CS to 0x0000.</span>

<span class="nl">.FlushCS:</span><span class="w">   </span>
<span class="w">    </span><span class="nf">xor</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>

<span class="w">    </span><span class="c1">; Set up segment registers.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ss</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="c1">; Set up stack so that it starts below Main.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">sp</span><span class="p">,</span><span class="w"> </span><span class="no">Main</span><span class="w"></span>
<span class="w">    </span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">es</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">fs</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">gs</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">    </span><span class="nf">cld</span><span class="w"></span>

<span class="w">    </span><span class="nf">call</span><span class="w"> </span><span class="no">CheckCPU</span><span class="w">                     </span><span class="c1">; Check whether we support Long Mode or not.</span>
<span class="w">    </span><span class="nf">jc</span><span class="w"> </span><span class="no">.NoLongMode</span><span class="w"></span>

<span class="w">    </span><span class="c1">; Point edi to a free space bracket.</span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">edi</span><span class="p">,</span><span class="w"> </span><span class="no">FREE_SPACE</span><span class="w"></span>
<span class="w">    </span><span class="c1">; Switch to Long Mode.</span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">SwitchToLongMode</span><span class="w"></span>


<span class="nf">BITS</span><span class="w"> </span><span class="mi">64</span><span class="w"></span>
<span class="nl">.Long:</span><span class="w"></span>
<span class="w">    </span><span class="nf">hlt</span><span class="w"></span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">.Long</span><span class="w"></span>


<span class="nf">BITS</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>

<span class="nl">.NoLongMode:</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="no">NoLongMode</span><span class="w"></span>
<span class="w">    </span><span class="nf">call</span><span class="w"> </span><span class="no">Print</span><span class="w"></span>

<span class="nl">.Die:</span><span class="w"></span>
<span class="w">    </span><span class="nf">hlt</span><span class="w"></span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">.Die</span><span class="w"></span>


<span class="err">%</span><span class="nf">include</span><span class="w"> </span><span class="err">&quot;</span><span class="no">LongModeDirectly.asm</span><span class="err">&quot;</span><span class="w"></span>
<span class="nf">BITS</span><span class="w"> </span><span class="mi">16</span><span class="w"></span>


<span class="nf">NoLongMode</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="err">&quot;</span><span class="no">ERROR</span><span class="p">:</span><span class="w"> </span><span class="no">CPU</span><span class="w"> </span><span class="no">does</span><span class="w"> </span><span class="no">not</span><span class="w"> </span><span class="no">support</span><span class="w"> </span><span class="no">long</span><span class="w"> </span><span class="no">mode.</span><span class="err">&quot;</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0A</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0D</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>


<span class="c1">; Checks whether CPU supports long mode or not.</span>

<span class="c1">; Returns with carry set if CPU doesn&#39;t support long mode.</span>

<span class="nl">CheckCPU:</span><span class="w"></span>
<span class="w">    </span><span class="c1">; Check whether CPUID is supported or not.</span>
<span class="w">    </span><span class="nf">pushfd</span><span class="w">                            </span><span class="c1">; Get flags in EAX register.</span>
<span class="w">    </span>
<span class="w">    </span><span class="nf">pop</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">ecx</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w">  </span>
<span class="w">    </span><span class="no">xor</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x200000</span><span class="w"> </span>
<span class="w">    </span><span class="no">push</span><span class="w"> </span><span class="no">eax</span><span class="w"> </span>
<span class="w">    </span><span class="no">popfd</span><span class="w"></span>

<span class="w">    </span><span class="nf">pushfd</span><span class="w"> </span>
<span class="w">    </span><span class="no">pop</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">xor</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">ecx</span><span class="w"></span>
<span class="w">    </span><span class="nf">shr</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">21</span><span class="w"> </span>
<span class="w">    </span><span class="no">and</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w">                        </span><span class="c1">; Check whether bit 21 is set or not. If EAX now contains 0, CPUID isn&#39;t supported.</span>
<span class="w">    </span><span class="nf">push</span><span class="w"> </span><span class="no">ecx</span><span class="w"></span>
<span class="w">    </span><span class="nf">popfd</span><span class="w"> </span>

<span class="w">    </span><span class="no">test</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">    </span><span class="nf">jz</span><span class="w"> </span><span class="no">.NoLongMode</span><span class="w"></span>
<span class="w">    </span>
<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x80000000</span><span class="w">   </span>
<span class="w">    </span><span class="no">cpuid</span><span class="w">                 </span>
<span class="w">    </span>
<span class="w">    </span><span class="no">cmp</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x80000001</span><span class="w">               </span><span class="c1">; Check whether extended function 0x80000001 is available are not.</span>
<span class="w">    </span><span class="nf">jb</span><span class="w"> </span><span class="no">.NoLongMode</span><span class="w">                    </span><span class="c1">; If not, long mode not supported.</span>

<span class="w">    </span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x80000001</span><span class="w">  </span>
<span class="w">    </span><span class="no">cpuid</span><span class="w">                 </span>
<span class="w">    </span><span class="no">test</span><span class="w"> </span><span class="no">edx</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="err">&lt;&lt;</span><span class="w"> </span><span class="mi">29</span><span class="w">                 </span><span class="c1">; Test if the LM-bit, is set or not.</span>
<span class="w">    </span><span class="nf">jz</span><span class="w"> </span><span class="no">.NoLongMode</span><span class="w">                    </span><span class="c1">; If not Long mode not supported.</span>

<span class="w">    </span><span class="nf">ret</span><span class="w"></span>

<span class="nl">.NoLongMode:</span><span class="w"></span>
<span class="w">    </span><span class="nf">stc</span><span class="w"></span>
<span class="w">    </span><span class="nf">ret</span><span class="w"></span>


<span class="c1">; Prints out a message using the BIOS.</span>

<span class="c1">; es:si    Address of ASCIIZ string to print.</span>

<span class="nl">Print:</span><span class="w"></span>
<span class="w">    </span><span class="nf">pushad</span><span class="w"></span>
<span class="nl">.PrintLoop:</span><span class="w"></span>
<span class="w">    </span><span class="nf">lodsb</span><span class="w">                             </span><span class="c1">; Load the value at [@es:@si] in @al.</span>
<span class="w">    </span><span class="nf">test</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="w"> </span><span class="no">al</span><span class="w">                       </span><span class="c1">; If AL is the terminator character, stop printing.</span>
<span class="w">    </span><span class="nf">je</span><span class="w"> </span><span class="no">.PrintDone</span><span class="w">                  	</span>
<span class="w">    </span><span class="no">mov</span><span class="w"> </span><span class="no">ah</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0E</span><span class="w">	</span>
<span class="w">    </span><span class="no">int</span><span class="w"> </span><span class="mi">0x10</span><span class="w"></span>
<span class="w">    </span><span class="nf">jmp</span><span class="w"> </span><span class="no">.PrintLoop</span><span class="w">                    </span><span class="c1">; Loop till the null character not found.</span>
<span class="w">	</span>
<span class="nl">.PrintDone:</span><span class="w"></span>
<span class="w">    </span><span class="nf">popad</span><span class="w">                             </span><span class="c1">; Pop all general purpose registers to save them.</span>
<span class="w">    </span><span class="nf">ret</span><span class="w"></span>


<span class="c1">; Pad out file.</span>
<span class="nf">times</span><span class="w"> </span><span class="mi">510</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="p">(</span><span class="no">$-$$</span><span class="p">)</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="nf">dw</span><span class="w"> </span><span class="mi">0xAA55</span><span class="w"></span>
</pre></div>
<p>The above code can be compiled (and tested using QEMU) by the following:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>    nasm -fbin Main.asm -o LongModeDirectly         <span class="c1"># The main file&#39;s name should be Main.asm</span>
    qemu-system-x86_64 -hda LongModeDirectly        <span class="c1"># The secondary file&#39;s name should be LongModeDirectly.asm and should be in the same directory</span>
</pre></div>
<h3><span class="mw-headline" id="Notes_about_the_above_bootsector">Notes about the above bootsector</span></h3>
<ul><li>The above bootsector has been written just for completeness.</li>
<li>The above bootsector can't be used as an actual bootsector as it doesn't:</li></ul>
<ol><li>Enable <a href="A20" class="mw-redirect" title="A20">A20</a></li>
<li>Detect memory</li>
<li>Load required files from disk using BIOS</li></ol>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="Forum_Threads">Forum Threads</span></h3>
<ul><li><a rel="nofollow" class="external text" href="http://www.osdev.org/phpBB2/viewtopic.php?t=11093">Related forum thread</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211130739
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.039 seconds
Real time usage: 0.440 seconds
Preprocessor visited node count: 36/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 35316/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2322-0!canonical and timestamp 20250211130739 and revision id 29099.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Entering_Long_Mode_Directly&amp;oldid=29099">https://wiki.osdev.org/index.php?title=Entering_Long_Mode_Directly&amp;oldid=29099</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:X86-64" title="Category:X86-64">X86-64</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Entering+Long+Mode+Directly" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Entering_Long_Mode_Directly#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Entering_Long_Mode_Directly" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:Entering_Long_Mode_Directly" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Entering_Long_Mode_Directly"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Entering_Long_Mode_Directly&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Entering_Long_Mode_Directly&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Entering_Long_Mode_Directly" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Entering_Long_Mode_Directly" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Entering_Long_Mode_Directly&amp;oldid=29099" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Entering_Long_Mode_Directly&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 7 June 2024, at 13:39.</li>
	<li id="footer-info-0">This page has been accessed 12,417 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Entering_Long_Mode_Directly&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.039","walltime":"0.440","ppvisitednodes":{"value":36,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":35316,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211130739","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":91});});</script>
</body>
</html>