<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Porting Python - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"657c611bb29d00c31f82bb97","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Porting_Python","wgTitle":"Porting Python","wgCurRevisionId":28219,"wgRevisionId":28219,"wgArticleId":2547,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Pages using deprecated source tags","Level 4 Tutorials","In Progress","Articles Written in First Person","Porting","Python","Tutorials"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Porting_Python","wgRelevantArticleId":2547,
"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook",
"ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Porting_Python rootpage-Porting_Python skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Porting Python</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Porting_Python#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Porting_Python#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear:right; border:1px solid #aaaaaa; background:#eee; text-align:center;;"><tbody><tr><th>Difficulty level</th></tr><tr><td><a href="./File:Difficulty_4.png" class="image"><img alt="Difficulty 4.png" src="images/a/a3/Difficulty_4.png" decoding="async" width="46" height="14" data-file-width="46" data-file-height="14" /></a><br />Master</td></tr></tbody></table>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p><a href="./File:Under_Construction.png" class="image" title="This page is under construction!"><img alt="This page is under construction!" src="images/1/14/Under_Construction.png" decoding="async" width="50" height="50" data-file-width="50" data-file-height="50" /></a>
This page or section is a work in progress and may thus be incomplete. Its content may be changed in the near future.
</p>
</td>
<td>
</td></tr></tbody></table>
</center>
<center>
<table style="border: 1px solid #cfcfbf; margin-top: 25px; margin-bottom: 25px; background-color: #f0f0ff; text-align: center;">
<tbody><tr>
<td>
<p>This page or section refers to its readers or editors using <i>I</i>, <i>my</i>, <i>we</i> or <i>us</i>. It should be <a rel="nofollow" class="external text" href="https://wiki.osdev.org/index.php?title=Porting_Python&amp;action=edit">edited</a> to be in an encyclopedic tone.
</p>
</td></tr></tbody></table>
</center>
<dl><dd><i>This article is a bit out of date, poll <a href="./User:Sortie" title="User:Sortie">User:Sortie</a> or check <a rel="nofollow" class="external text" href="https://pub.sortix.org/sortix/release/nightly/patches/python.patch">his patch to Python 3.4</a>.</i></dd></dl>
<p>Python is a popular scripting language that, if ported, can allow you to do a lot of powerful tasks using simple scripts. I gained a lot from <a rel="nofollow" class="external text" href="http://www.ailis.de/~k/archives/19-ARM-cross-compiling-howto.html">this</a> and <a rel="nofollow" class="external text" href="http://whatschrisdoing.com/blog/2006/10/06/howto-cross-compile-python-25/">this</a>. Amazing what a simple Google search can do!
</p><p>The problem with porting Python is that the Python build process actually wants to use the built Python to build the rest of the modules that come with Python (eg, C modules). The build system also does not build build tools with the --build compiler, which means the build can fail quite early if you aren't prepared.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Porting_Python#Prerequisites"><span class="tocnumber">1</span> <span class="toctext">Prerequisites</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Porting_Python#Freebies"><span class="tocnumber">2</span> <span class="toctext">Freebies</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Porting_Python#The_Process"><span class="tocnumber">3</span> <span class="toctext">The Process</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Porting_Python#setup.py"><span class="tocnumber">4</span> <span class="toctext">setup.py</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Porting_Python#Caveats"><span class="tocnumber">5</span> <span class="toctext">Caveats</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="Porting_Python#What_if_my_host_toolchain_uses_a_different_shared_object_format?"><span class="tocnumber">6</span> <span class="toctext">What if my host toolchain uses a different shared object format?</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="Porting_Python#Works_On"><span class="tocnumber">7</span> <span class="toctext">Works On</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="Porting_Python#Final_Word"><span class="tocnumber">8</span> <span class="toctext">Final Word</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Prerequisites">Prerequisites</span></h2>
<p>Porting Python is <b>not</b> for the faint of heart. You should know a lot about configure scripts and the options of your toolchain.
</p><p>You will also need a cross toolchain that supports C++ (See <a href="OS_Specific_Toolchain" title="OS Specific Toolchain">OS Specific Toolchain</a>) and has a C++ standard library.
</p>
<h2><span class="mw-headline" id="Freebies">Freebies</span></h2>
<p>I have the patches I use for Python 2.6 and Python 2.7 here:
</p>
<ul><li><a rel="nofollow" class="external text" href="http://www.pedigree-project.org/projects/pedigree-apps/repository/revisions/master/show/packages/python26/patches">Python 2.6</a></li>
<li><a rel="nofollow" class="external text" href="http://www.pedigree-project.org/projects/pedigree-apps/repository/revisions/master/show/packages/python27/patches">Python 2.7</a></li></ul>
<p>In the directory above the patches directory each link links to, you can find the scripts I use to automate the Python build.
</p>
<h2><span class="mw-headline" id="The_Process">The Process</span></h2>
<p>Download the Python 2.5 source code. You need to patch it using <a rel="nofollow" class="external text" href="http://whatschrisdoing.com/~lambacck/Python2.5_xcompile.patch">this patch</a> in order to make the configure process work properly for the cross-compile.
</p><p>Basically, this patched configure script now uses two variables: HOSTPYTHON and HOSTPGEN in the later stages of the build. See, Python's build process builds Python itself, then uses the built Python binaries to build the modules. In the case of a cross-compiler, this won't work, so we need to point Python to a working Python binary.
</p><p>Run:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>./configure <span class="o">&amp;&amp;</span> make python Parser/pgen
</pre></div>
<p>in the Python-2.5 directory.
</p><p>This will build a version of Python using your host compiler.
</p><p>Now we need to make that the host Python and get ready for the real cross compile:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>mv python hostpython
mv Parser/pgen Parser/hostpgen
make distclean
</pre></div>
<p>This is where things get complicated. We now have to configure for the new target. Before you do this, export CC, CXX, AR and RANLIB for your target. In my case, I'll use "i686-myos":
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>./configure --host<span class="o">=</span>i686-myos --prefix<span class="o">=</span>/usr/python-cross
</pre></div>
<p>If things go wrong, you need to make sure your libc and libstdc++ provides the necessary functionality.
</p><p>At this stage, Python is configured to use your cross toolchain. Now we build Python:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>make python Parser/pgen
</pre></div>
<p>Right, that wasn't so hard, was it? So now you have the Python binary ready to run on your OS. However, it's missing libraries and modules. Let's build them now:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>make <span class="nv">HOSTPYTHON</span><span class="o">=</span>./hostpython <span class="nv">HOSTPGEN</span><span class="o">=</span>./Parser/hostpgen <span class="nv">BLDSHARED</span><span class="o">=</span><span class="s2">&quot;i686-myos-gcc -shared&quot;</span> <span class="nv">CROSS_COMPILE</span><span class="o">=</span>yes
</pre></div>
<p>You will need to edit "setup.py" to modify the default include and libraries directories to those which your compiler uses. See below ("setup.py") for the changes you need to make.
</p><p>Basically, the Makefile now calls "$HOSTPYTHON ./setup.py" to continue the build. That's why we need to set HOSTPYTHON now. Another important thing to mention is BLDSHARED. If your cross-toolchain can't build shared objects, you need to use one that can. If you're on Linux and you're using ELF in your OS, just set BLDSHARED="gcc -shared". If not, you're out of luck until your cross-toolchain can build shared objects.
</p><p>Your modules will now build. Keep track of error messages if you can, there will be modules that won't work until you add more functionality to your libc.
</p><p>To install, run:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span>make install <span class="nv">prefix</span><span class="o">=</span>&lt;install_dir&gt; <span class="nv">HOSTPYTHON</span><span class="o">=</span>./hostpython <span class="nv">HOSTPGEN</span><span class="o">=</span>./Parser/hostpgen <span class="nv">BLDSHARED</span><span class="o">=</span><span class="s2">&quot;i686-myos-gcc -shared&quot;</span> <span class="nv">CROSS_COMPILE</span><span class="o">=</span>yes
</pre></div>
<p>And you're done!
</p>
<h2><span class="mw-headline" id="setup.py">setup.py</span></h2>
<p>This is where things can get really complicated. setup.py is what Python uses to build the modules for your Python port - however it doesn't work so well for cross-compiling. I'll assume you've already applied the patch specified above, so let's get to it!
</p><p><b> NOTE: Make sure you watch the surrounding indentation when making these changes. Python knowledge would really help in this case. A lot of these changes I'm putting up here without indentation! </b>
</p><p>The first change we make is at the line "disabled_module_list":
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">disabled_module_list</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;_ctypes&#39;</span><span class="p">,</span> <span class="s1">&#39;syslogmodule&#39;</span><span class="p">,</span> <span class="s1">&#39;nismodule&#39;</span><span class="p">]</span>
</pre></div>
<p>This is pretty straightforward. If you're going to put anything here, make it '_ctypes'.
</p><p>Find "def detect_modules(self)". See at the top how it has those two directories? Let's change that...
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">#       add_dir_to_list(self.compiler.library_dirs, &#39;/usr/local/lib&#39;)</span>
<span class="c1">#       add_dir_to_list(self.compiler.include_dirs, &#39;/usr/local/include&#39;)</span>
        <span class="n">add_dir_to_list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">library_dirs</span><span class="p">,</span> <span class="s1">&#39;/usr/pedigree-cross/lib&#39;</span><span class="p">)</span>
        <span class="n">add_dir_to_list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">library_dirs</span><span class="p">,</span> <span class="s1">&#39;/usr/pedigree-cross/i686-pedigree/lib&#39;</span><span class="p">)</span>
        <span class="n">add_dir_to_list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">include_dirs</span><span class="p">,</span> <span class="s1">&#39;/usr/pedigree-cross/include&#39;</span><span class="p">)</span>
        <span class="n">add_dir_to_list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">library_dirs</span><span class="p">,</span> <span class="s1">&#39;/usr/pedigree-cross/i686-pedigree/include&#39;</span><span class="p">)</span>
</pre></div>
<p>Of course, you'll update these to the correct paths for your cross-toolchain. These will become not only the search paths for libraries but also the command line for the GCC invocation ("-I" and "-L" arguments).
</p><p>Further down there's a block setting "lib_dirs" to a bunch of folders such as "/lib64", "/usr/lib64", "/lib", and "/usr/lib". Beneath it is a line that sets up the include directories including "/usr/include". Change this to:
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">lib_dirs</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">library_dirs</span>
<span class="n">inc_dirs</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">compiler</span><span class="o">.</span><span class="n">include_dirs</span>
</pre></div>
<p>And if we keep on heading down just a couple of lines there's a "platform = self.get_platform()". The platform is used to make some assumptions further down, so we should set it to something like our OS name:
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span><span class="n">platform</span> <span class="o">=</span> <span class="s2">&quot;pedigree&quot;</span>
</pre></div>
<p>Halfway there! Find the line "if platform == 'darwin':" and add above it something like this:
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span>        <span class="k">if</span> <span class="n">platform</span> <span class="o">==</span> <span class="s1">&#39;pedigree&#39;</span><span class="p">:</span>
          <span class="n">lib_dirs</span> <span class="o">+=</span> <span class="p">[</span><span class="s1">&#39;/usr/pedigree-cross/lib&#39;</span><span class="p">]</span>
          <span class="n">inc_dirs</span> <span class="o">+=</span> <span class="p">[</span><span class="s1">&#39;/usr/pedigree-cross/i686-pedigree/include/ncurses&#39;</span><span class="p">]</span>
</pre></div>
<p>This just adds some directories to the list that we need for the platform. I will admit this is slightly redundant for this example (apart from the ncurses headers) - feel free to skip this if you've already covered it above with the "add_dir_to_list" lines. If you have any extra directories that you want the compile to use you can add them here (eg, unusual libraries locations or include files).
</p><p>If you have an OpenSSL port (and you can compile against it in your cross-toolchain), skip past this change.
</p><p>If not, find the lines starting with "ssl_incs = find_file...." and change to:
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span>        <span class="n">ssl_incs</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="c1">#find_file(&#39;openssl/ssl.h&#39;, inc_dirs,</span>
        <span class="c1">#                     search_for_ssl_incs_in</span>
        <span class="c1">#                     )</span>
</pre></div>
<p>This just removes the SSL header from the search path, so you don't get a bunch of undefined references.
</p><p>Now we're pretty much done. Keep going down until you find the Berkeley DB stuff (starts with "db_inc_paths", comment out all of the paths, keep the []. Comment out all four of the for() loops (they should be completely commented out). comment out the "for dn in inc_dirs" for block, and finally change the "db_inc_paths" variable as below:
</p>
<div class="mw-highlight mw-highlight-lang-python mw-content-ltr" dir="ltr"><pre><span></span>        <span class="n">db_inc_paths</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># std_variants + db_inc_paths</span>
</pre></div>
<p>The last step is to comment out the sqlite include paths (search for sqlite_inc_paths, again, keep the []).
</p><p>Save, exit your editor, and get compiling!
</p>
<h2><span class="mw-headline" id="Caveats">Caveats</span></h2>
<p>You will need dlopen, dlsym and dlclose to be able to do things like "import socket" which indirectly imports "_socket" (&lt;prefix&gt;/lib/python2.5/lib-dynload/_socket.so). By this stage you should already have shared object support so this should be simple!
</p>
<h2><span id="What_if_my_host_toolchain_uses_a_different_shared_object_format.3F"></span><span class="mw-headline" id="What_if_my_host_toolchain_uses_a_different_shared_object_format?">What if my host toolchain uses a different shared object format?</span></h2>
<p>Let's say you're on Cygwin, and your toolchain targets ELF. You're a little bit stuck because you can't build any modules, because you can't define BLDSHARED to "gcc -shared" (you'd get a DLL), and your ELF toolchain may not support shared objects. There is, of course, a workaround for this. Your BLDSHARED will look a bit like this:
</p>
<pre>BLDSHARED="i686-myos-gcc -nostdlib -shared -Wl,-shared"
</pre>
<p>That should build a shared object that does not rely on any other libraries.
</p>
<h2><span class="mw-headline" id="Works_On">Works On</span></h2>
<p>I've done this on:
</p>
<ul><li>Python 2.2</li>
<li>Python 2.5</li>
<li>Python 2.5.4 (the patch does <b>not</b> work - you'll need to read through the patch file and make the changes manually.)</li>
<li>Python 2.6.2</li>
<li>Python 2.6.6</li>
<li>Python 2.7.3</li></ul>
<h2><span class="mw-headline" id="Final_Word">Final Word</span></h2>
<p>Porting Python is really not that complex if you just work around some minor complexities that the build process uses. Good luck!
</p>
<!-- 
NewPP limit report
Cached time: 20250212011020
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.073 seconds
Real time usage: 1.985 seconds
Preprocessor visited node count: 225/1000000
Post‐expand include size: 1552/2097152 bytes
Template argument size: 277/2097152 bytes
Highest expansion depth: 23/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 6370/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    5.892      1 -total
 87.95%    5.182      4 Template:If
 76.96%    4.535      4 Template:Show1
 73.81%    4.349      1 Template:Rating
 18.06%    1.064      4 Template:Eq
 17.01%    1.002      1 Template:FirstPerson
  9.47%    0.558      1 Template:NoteBox
  9.29%    0.547      4 Template:Eq1
  6.55%    0.386      1 Template:In_Progress
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2547-0!canonical and timestamp 20250212011018 and revision id 28219.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Porting_Python&amp;oldid=28219">https://wiki.osdev.org/index.php?title=Porting_Python&amp;oldid=28219</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Level_4_Tutorials" title="Category:Level 4 Tutorials">Level 4 Tutorials</a></li><li><a href="./Category:In_Progress" title="Category:In Progress">In Progress</a></li><li><a href="./Category:Articles_Written_in_First_Person" title="Category:Articles Written in First Person">Articles Written in First Person</a></li><li><a href="./Category:Porting" title="Category:Porting">Porting</a></li><li><a href="./Category:Python" title="Category:Python">Python</a></li><li><a href="./Category:Tutorials" title="Category:Tutorials">Tutorials</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Porting+Python" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Porting_Python#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Porting_Python" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:Porting_Python" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Porting_Python"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Porting_Python&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Porting_Python&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Porting_Python" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Porting_Python" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Porting_Python&amp;oldid=28219" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Porting_Python&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 10 July 2023, at 20:21.</li>
	<li id="footer-info-0">This page has been accessed 5,650 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Porting_Python&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.073","walltime":"1.985","ppvisitednodes":{"value":225,"limit":1000000},"postexpandincludesize":{"value":1552,"limit":2097152},"templateargumentsize":{"value":277,"limit":2097152},"expansiondepth":{"value":23,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":6370,"limit":5000000},"timingprofile":["100.00%    5.892      1 -total"," 87.95%    5.182      4 Template:If"," 76.96%    4.535      4 Template:Show1"," 73.81%    4.349      1 Template:Rating"," 18.06%    1.064      4 Template:Eq"," 17.01%    1.002      1 Template:FirstPerson","  9.47%    0.558      1 Template:NoteBox","  9.29%    0.547      4 Template:Eq1","  6.55%    0.386      1 Template:In_Progress"]},"cachereport":{"timestamp":"20250212011020","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":2076});});</script>
</body>
</html>