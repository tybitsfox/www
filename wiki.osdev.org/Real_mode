<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Real Mode - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"3e8be1742c6b518aefb255ff","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Real_Mode","wgTitle":"Real Mode","wgCurRevisionId":22968,"wgRevisionId":22968,"wgArticleId":1712,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","Real Mode","X86","X86 CPU","Operating Modes"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Real_Mode","wgRelevantArticleId":1712,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgRedirectedFrom":"Real_mode","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgInternalRedirectTargetUrl":"/Real_Mode","wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["mediawiki.action.view.redirect","site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
<link rel="canonical" href="Real_Mode"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Real_Mode rootpage-Real_Mode skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Real Mode</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="mw-redirectedfrom">(Redirected from <a href="https://wiki.osdev.org/index.php?title=Real_mode&amp;redirect=no" class="mw-redirect" title="Real mode">Real mode</a>)</span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Real_mode#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Real_mode#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p><b>Real Mode</b> is a simplistic 16-bit mode that is present on all x86 processors. Real Mode was the first x86 mode design and was used by many early operating systems before the birth of <a href="Protected_Mode" title="Protected Mode">Protected Mode</a>. For compatibility purposes, all x86 processors <a href="Boot_Sequence" title="Boot Sequence">begin execution</a> in Real Mode.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Real_mode#Information"><span class="tocnumber">1</span> <span class="toctext">Information</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="Real_mode#Cons"><span class="tocnumber">1.1</span> <span class="toctext">Cons</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="Real_mode#Pros"><span class="tocnumber">1.2</span> <span class="toctext">Pros</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="Real_mode#Common_Misconception"><span class="tocnumber">1.3</span> <span class="toctext">Common Misconception</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="Real_mode#Memory_Addressing"><span class="tocnumber">2</span> <span class="toctext">Memory Addressing</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="Real_mode#The_Stack"><span class="tocnumber">2.1</span> <span class="toctext">The Stack</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="Real_mode#High_Memory_Area"><span class="tocnumber">2.2</span> <span class="toctext">High Memory Area</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="Real_mode#Addressing_Modes"><span class="tocnumber">2.3</span> <span class="toctext">Addressing Modes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="Real_mode#Switching_from_Protected_Mode_to_Real_Mode"><span class="tocnumber">3</span> <span class="toctext">Switching from Protected Mode to Real Mode</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="Real_mode#x86_Assembly_Example"><span class="tocnumber">4</span> <span class="toctext">x86 Assembly Example</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="Real_mode#See_Also"><span class="tocnumber">5</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-12"><a href="Real_mode#Articles"><span class="tocnumber">5.1</span> <span class="toctext">Articles</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="Real_mode#External_Links"><span class="tocnumber">5.2</span> <span class="toctext">External Links</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="Real_mode#References"><span class="tocnumber">5.3</span> <span class="toctext">References</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Information">Information</span></h2>
<p>All modern operating systems (Windows, Linux, ...) run in <a href="Protected_Mode" title="Protected Mode">Protected Mode</a>, due to the many limitations and problems that Real Mode
presents (see below, and the <a href="Real_Mode_OS_Warning" title="Real Mode OS Warning">Real Mode OS Warning</a> page). Older operating systems (such as DOS) and programs ran in Real Mode because it was the only mode available at the time. For information on how to switch from Real Mode to <a href="Protected_Mode" title="Protected Mode">Protected Mode</a>, see the corresponding article.
</p><p>Note: There is a mode called <a href="Virtual_8086_Mode" title="Virtual 8086 Mode">Virtual 8086 Mode</a> which allows operating systems running in Protected mode to emulate the Real Mode segmented model for individual applications. This can be used to allow a <a href="Protected_Mode" title="Protected Mode">Protected Mode</a> operating system to still have access to e.g. BIOS functions, whenever needed.
</p><p>Below you'll find a list of cons and pros. These are mostly 'in comparison to <a href="Protected_Mode" title="Protected Mode">Protected Mode</a>'.
</p>
<h3><span class="mw-headline" id="Cons">Cons</span></h3>
<ul><li>Less than 1 MB of RAM is available for use.</li>
<li>There is no hardware-based memory protection (GDT), nor virtual memory.</li>
<li>There is no built in security mechanisms to protect against buggy or malicious applications.</li>
<li>The default CPU operand length is only 16 bits.</li>
<li>The memory addressing modes provided are more restrictive than other CPU modes.</li>
<li>Accessing more than 64k requires the use of segment register that are difficult to work with.</li></ul>
<h3><span class="mw-headline" id="Pros">Pros</span></h3>
<ul><li>The <a href="BIOS" title="BIOS">BIOS</a> installs device drivers to control devices and handle interrupt.</li>
<li><a href="BIOS#BIOS_functions" title="BIOS">BIOS functions</a> provide operating systems with a advanced collection of low level API functions.</li>
<li>Memory access is faster due to the lack of descriptor tables to check and smaller registers.</li></ul>
<h3><span class="mw-headline" id="Common_Misconception">Common Misconception</span></h3>
<p>Programmers often think that since Real Mode defaults to 16 bits, that the 32 bit registers are not
accessible. This is not true.
</p><p>All of the 32-bit registers (EAX, ...) are still usable, by simply adding the "Operand Size Override
Prefix" (0x66) to the beginning of any instruction.  Your assembler is likely to do this for you, if
you simply try to use a 32-bit register.
</p>
<h2><span class="mw-headline" id="Memory_Addressing">Memory Addressing</span></h2>
<p>In Real Mode, there is a little over 1 MB of "addressable" memory (including the <a href="Real_mode#High_Memory_Area">High Memory Area</a>). See <a href="Detecting_Memory_(x86)" title="Detecting Memory (x86)">Detecting Memory (x86)</a> and <a href="Memory_Map_(x86)" title="Memory Map (x86)">Memory Map (x86)</a> to determine how much is actually <b>usable</b>. The usable amount will be much less than 1 MB. Memory access is done using <a href="Segmentation" title="Segmentation">Segmentation</a> via a segment:offset system.
</p><p>There are six 16-bit segment registers: CS, DS, ES, FS, GS, and SS. When using segment registers, addresses are given with the following notation (where 'Segment' is a value in a segment register and 'Offset' is a value in an address register):
</p>
<pre> 12F3 &#160;:  4B27
   ^       ^
Segment   Offset
</pre>
<p>Segments and Offsets are related to physical addresses by the equation:
</p>
<pre> PhysicalAddress = Segment * 16 + Offset
</pre>
<p>Thus, 12F3:4B27 corresponds to the physical address 0x17A57. Any physical address can be represented in multiple ways, with different segments and offsets. For example, physical address 0x210 can be 0020:0010, 0000:0210, or 0021:0000.
</p>
<h3><span class="mw-headline" id="The_Stack">The Stack</span></h3>
<p>SS and SP are 16-bit segment:offset registers that specify a 20-bit physical address (described above), which is the current "top" of the stack. The stack stores 16-bit words, grows downwards, and must be aligned on a word (16-bit) boundary. It is used every time a program does a PUSH, POP, CALL, INT, or RET opcode and also when the BIOS handles any hardware interrupt.
</p>
<h3><span class="mw-headline" id="High_Memory_Area">High Memory Area</span></h3>
<p>If you set DS (or any segment register) to a value of 0xFFFF, it points to an address that is 16 bytes below 1 MB. If you then use that segment register as a base, with an offset of 0x10 to 0xFFFF, you can access physical memory addresses from 0x100000 to 0x10FFEF. This (almost 64 kB) area above 1 MB is called the "High Memory Area" in Real Mode. Note that you have to have the <a href="A20" class="mw-redirect" title="A20">A20</a> address line activated for this to work.
</p>
<h3><span class="mw-headline" id="Addressing_Modes">Addressing Modes</span></h3>
<p>Real Mode uses 16-bit addressing mode by default. Assembly programmers are typically familiar with the
more common 32-bit addressing modes, and may want to make adjustments -- because the registers that are available
in 16-bit addressing mode for use as "pointers" are much more limited. The typical programs that run
in Real Mode are often limited in the number of bytes available, and it takes one extra byte in each
opcode to use 32-bit addressing instead.
</p><p>Note that you can still use 32-bit addressing modes in Real Mode, simply by adding the "Address Size
Override Prefix" (0x67) to the beginning of any instruction. Your assembler is likely to do this for you, if
you simply try to use a 32-bit addressing mode. But you are still constrained by the current "limit" for
the segment that you use in each memory access (always 64K in Real Mode -- <a href="Unreal_Mode" title="Unreal Mode">Unreal Mode</a> can be bigger).
</p>
<ul><li>[BX + val]</li>
<li>[SI + val]</li>
<li>[DI + val]</li>
<li>[BP + val]</li>
<li>[BX + SI + val]</li>
<li>[BX + DI + val]</li>
<li>[BP + SI + val]</li>
<li>[BP + DI + val]</li>
<li>[address]</li></ul>
<h2><span class="mw-headline" id="Switching_from_Protected_Mode_to_Real_Mode">Switching from <a href="Protected_Mode" title="Protected Mode">Protected Mode</a> to Real Mode</span></h2>
<p>As noted above, it is possible for a Protected mode operating system to use <a href="Virtual_8086_Mode" title="Virtual 8086 Mode">Virtual 8086 Mode</a> mode to access BIOS functions. However, VM86 mode has its own complications and difficulties. Some OS designers think that it is simpler and cleaner to temporarily return to Real Mode on those occasions when it is necessary to access a BIOS function. This requires creating a special Ring 0 program, and placing it in a physical memory address that can be accessed in Real Mode.
</p><p>The OS usually needs to pass an information packet about which BIOS function to execute.
</p><p>The program needs to go through the following steps:
</p>
<ol><li>Disable the interrupts:
<ul><li>Turn off maskable interrupts using CLI.</li>
<li>Disable <a href="NMI" class="mw-redirect" title="NMI">NMI</a> (optional).</li></ul></li>
<li>Turn off <a href="Paging" title="Paging">paging</a>:
<ul><li>Transfer control to a 1:1 page.</li>
<li>Ensure that the <a href="GDT" class="mw-redirect" title="GDT">GDT</a> and <a href="IDT" class="mw-redirect" title="IDT">IDT</a> are in a 1:1 page.</li>
<li>Clear the PG-flag in the zeroth control register.</li>
<li>Set the third control register to 0.</li></ul></li>
<li>Use GDT with 16-bit tables (skip this step if one is already available):
<ul><li>Create a new GDT with a 16-bit data and code segment:
<ul><li>Limit: 0xFFFFF</li>
<li>Base: 0x0</li>
<li>16-bit</li>
<li>Privilege level: 0</li>
<li>Granularity: 0</li>
<li>Read and Write: 1</li></ul></li>
<li>Load new GDT ensuring that the currently used selectors will remain the same (index in cs/ds/ss will be copy of original segment in new GDT)</li></ul></li>
<li>Far jump to 16-bit protected mode:
<ul><li>Far jump to 16-bit protected mode with a 16-bit segment index.</li></ul></li>
<li>Load data segment selectors with 16-bit indexes:
<ul><li>Load ds, es, fs, gs, ss with a 16-bit data segment.</li></ul></li>
<li>Load real mode IDT:
<ul><li>Limit: 0x3FF</li>
<li>Base 0x0</li>
<li>Use lidt</li></ul></li>
<li>Disable protected mode:
<ul><li>Set PE bit in CR0 to false.</li></ul></li>
<li>Far jump to real mode:
<ul><li>Far jump to real mode with real mode segment selector (usually 0).</li></ul></li>
<li>Reload data segment registers with real mode values:
<ul><li>Load ds, es, fs, gs, ss with appropriate real mode values (usually 0).</li></ul></li>
<li>Set stack pointer to appropriate value:
<ul><li>Set sp to stack value that will not interfere with real mode program.</li></ul></li>
<li>Enable interrupts:
<ul><li>Enable maskable interrupts with STI.</li></ul></li>
<li>Continue on in real mode with all bios interrupts.</li></ol>
<h2><span class="mw-headline" id="x86_Assembly_Example">x86 Assembly Example</span></h2>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="err">[</span><span class="nf">bits</span><span class="w"> </span><span class="mi">16</span><span class="p">]</span><span class="w"></span>

<span class="nl">idt_real:</span><span class="w"></span>
<span class="w">	</span><span class="nf">dw</span><span class="w"> </span><span class="mi">0x3ff</span><span class="w">		</span><span class="c1">; 256 entries, 4b each = 1K</span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="mi">0</span><span class="w">			</span><span class="c1">; Real Mode IVT @ 0x0000</span>

<span class="nl">savcr0:</span><span class="w"></span>
<span class="w">	</span><span class="nf">dd</span><span class="w"> </span><span class="mi">0</span><span class="w">			</span><span class="c1">; Storage location for pmode CR0.</span>

<span class="nl">Entry16:</span><span class="w"></span>
<span class="w">        </span><span class="c1">; We are already in 16-bit mode here!</span>

<span class="w">	</span><span class="nf">cli</span><span class="w">			</span><span class="c1">; Disable interrupts.</span>

<span class="w">	</span><span class="c1">; Need 16-bit Protected Mode GDT entries!</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">DATASEL16</span><span class="w">	</span><span class="c1">; 16-bit Protected Mode data selector.</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">es</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">fs</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">gs</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ss</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>


<span class="w">	</span><span class="c1">; Disable paging (we need everything to be 1:1 mapped).</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">cr0</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="p">[</span><span class="no">savcr0</span><span class="p">],</span><span class="w"> </span><span class="no">eax</span><span class="w">	</span><span class="c1">; save pmode CR0</span>
<span class="w">	</span><span class="nf">and</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x7FFFFFFe</span><span class="w">	</span><span class="c1">; Disable paging bit &amp; disable 16-bit pmode.</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">cr0</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>

<span class="w">	</span><span class="nf">jmp</span><span class="w"> </span><span class="mi">0</span><span class="p">:</span><span class="no">GoRMode</span><span class="w">		</span><span class="c1">; Perform Far jump to set CS.</span>

<span class="nl">GoRMode:</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">sp</span><span class="p">,</span><span class="w"> </span><span class="mi">0x8000</span><span class="w">		</span><span class="c1">; pick a stack pointer.</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w">		</span><span class="c1">; Reset segment registers to 0.</span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">es</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">fs</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">gs</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">	</span><span class="nf">mov</span><span class="w"> </span><span class="no">ss</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w"></span>
<span class="w">	</span><span class="nf">lidt</span><span class="w"> </span><span class="p">[</span><span class="no">idt_real</span><span class="p">]</span><span class="w"></span>
<span class="w">	</span><span class="nf">sti</span><span class="w">			</span><span class="c1">; Restore interrupts -- be careful, unhandled int&#39;s will kill it.</span>
</pre></div>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="Articles">Articles</span></h3>
<ul><li><a href="BIOS" title="BIOS">BIOS</a></li>
<li><a href="System_Initialization_(x86)" title="System Initialization (x86)">System Initialization (x86)</a></li>
<li><a href="Protected_Mode" title="Protected Mode">Protected Mode</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="https://web.archive.org/web/20130609073242/http://www.osdever.net/tutorials/rm_addressing.php?the_id=50">The Workings of: x86-16/32 Real Mode Addressing</a> (2003)</li>
<li><a rel="nofollow" class="external text" href="http://therx.sourceforge.net/osdev/files/ia32_rm_addr.pdf">The workings of IA32 real mode addressing and the A20 line</a> (2004)</li></ul>
<h3><span class="mw-headline" id="References">References</span></h3>
<ul><li><a rel="nofollow" class="external text" href="http://www.intel.com/products/processor/manuals/">Intel® 64 and IA-32 Architectures Software Developer's Manual</a> (2011)
<ul><li>Volume 3A: System Programming Guide, Part 1,Chapter 20:8086 EMULATION,which is a detailed reference about real mode using 32-bit addressing mode</li></ul></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211154538
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.022 seconds
Real time usage: 0.163 seconds
Preprocessor visited node count: 76/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 5850/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1712-0!canonical and timestamp 20250211154538 and revision id 22968.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Real_Mode&amp;oldid=22968">https://wiki.osdev.org/index.php?title=Real_Mode&amp;oldid=22968</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="https://wiki.osdev.org/index.php?title=Category:Real_Mode&amp;action=edit&amp;redlink=1" class="new" title="Category:Real Mode (page does not exist)">Real Mode</a></li><li><a href="./Category:X86" title="Category:X86">X86</a></li><li><a href="./Category:X86_CPU" title="Category:X86 CPU">X86 CPU</a></li><li><a href="./Category:Operating_Modes" title="Category:Operating Modes">Operating Modes</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Real+Mode" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Real_mode#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Real_Mode" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:Real_Mode" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Real_Mode"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_Mode&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_Mode&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Real_Mode" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="./Special:RecentChangesLinked/Real_Mode" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_Mode&amp;oldid=22968" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Real_Mode&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-lang" class="vector-menu mw-portlet mw-portlet-lang vector-menu-portal portal" aria-labelledby="p-lang-label" role="navigation"  >
	<h3
		id="p-lang-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">In other languages</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li class="interlanguage-link interwiki-de mw-list-item"><a href="http://www.lowlevel.eu/wiki/Real_Mode" title="Real Mode – Deutsch" lang="de" hreflang="de" class="interlanguage-link-target"><span>Deutsch</span></a></li></ul>
		
	</div>
</nav>

</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 25 September 2018, at 20:47.</li>
	<li id="footer-info-0">This page has been accessed 28,369 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Real_Mode&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.022","walltime":"0.163","ppvisitednodes":{"value":76,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":5850,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211154538","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":111});});</script>
</body>
</html>