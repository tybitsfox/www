<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Opcode syntax - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"9f5b26a72b50c6d836cf4e9a","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Opcode_syntax","wgTitle":"Opcode syntax","wgCurRevisionId":22877,"wgRevisionId":22877,"wgArticleId":1862,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","Assembly"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Opcode_syntax","wgRelevantArticleId":1862,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Opcode_syntax rootpage-Opcode_syntax skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Opcode syntax</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Opcode_syntax#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Opcode_syntax#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>The AT&amp;T syntax (as understood by GAS, the GNU assembler) is the standard syntax on most non-Intel platforms, but remains rare on x86 platforms.
However, AT&amp;T syntax is the default for GCC <a href="Inline_Assembly" title="Inline Assembly">Inline Assembly</a>, and it is what objdump will provide you with when debugging your kernel.
</p><p>NASM and FASM use Intel syntax, and Intel syntax is what the <a href="Bochs" title="Bochs">Bochs</a> debugger will provide you when debugging your kernel.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Opcode_syntax#Important_Details"><span class="tocnumber">1</span> <span class="toctext">Important Details</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Opcode_syntax#Converting_small_snippets_of_code_from_Intel_syntax_to_AT&amp;T"><span class="tocnumber">2</span> <span class="toctext">Converting small snippets of code from Intel syntax to AT&amp;T</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Opcode_syntax#See_Also"><span class="tocnumber">3</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="Opcode_syntax#External_Links"><span class="tocnumber">3.1</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Important_Details">Important Details</span></h2>
<p>There are some substantial differences between the AT&amp;T syntax and the Intel syntax, which a programmer intending to use the GNU tools should be aware of.
Here are a few key things to look for, when moving to AT&amp;T syntax:
</p>
<ul><li><b>Case Sensitivity:</b> MOVL is not the same as movl.</li>
<li><b>Numerical Base:</b> expressed as in C: 1 for decimal, 01 for octal, 0x01 for hex. (The Intel postfix-h syntax is not supported.)</li>
<li><b>Escapes:</b> Special characters are written as C-style escapes (\n, \", \#, \\, ...).</li>
<li><b>Comments:</b> Either C-style ( /* ... */ ) or shell style (# ...).</li>
<li><b>Directive syntax:</b> Directives begin with a period (".align 4" to align on a 32-bit boundary, ".word 0x1234" is the equivalent of "DW 1234h").</li>
<li><b>Strings:</b> Defined using special directives, .ascii (or .asciz for a zero-terminated string). Example: msg: .ascii "Hello, World!\n"</li>
<li><b>Current location address:</b> Indicated by a period (".", equivalent to Intel syntax "$").</li>
<li><b>Initializing Memory:</b> Done with .fill (roughly equivalent to Intel syntax 'times db'). Example: .fill 0x1fe - (. - START) , 1, 0 (where '1' is the size fill mask in bytes and START is a label marking the entry point of the code) is equal to Intel syntax times 1FEh - ($-$$) db 0. (The .skip and .space directives can be used in a similar manner.)</li>
<li>the <b>code counter</b> can be set multiple times, using the .org directive (as in .org 0x1fe + START, where START is a label marking the entry point of the code. The location-assignment directive, '.=', can be used in the same manner.</li>
<li><b>16/32 bit code</b> can be generated by stating .code16 or .code32 (equivalent to Intel syntax [BITS 16] and [BITS 32], respectively).</li>
<li><b>Target CPU:</b> Set with the .arch directive. It is a Good Idea to set it, even if you are sure that the default is 'i386'.</li>
<li><b>Label Declarations:</b> Always end in a colon.</li>
<li>a <b>new identifier</b> appearing at the beginning of a line, and not ending in a colon, is assumed to be part of an equivalence statement, and must be followed by an equals sign and an assigned value. Example: FOO = 0xF00</li>
<li><b>End of Instruction:</b> Designated either by a newline or with a semi-colon; the latter is primarily seen in macros, to allow multiple lines of code.</li>
<li><b>Line Continuation:</b> As in C, with a backslash ('\') as last character in a line. This also is mostly used in macros.</li>
<li><b>Registers:</b> Always prefixed with a percent sign: %eax, %cs, %esp, etc.</li>
<li><b>Source, Destination:</b> Move, load, store, and similar operations always have operands in the order 'source, destination', which is very unlike Intel syntax. Thus, "movl %eax, %ebx" moves the value of %eax into %ebx. This is the part that seems to confuse people the most, since it is nearly the opposite of the intel theme: <pre>Opcode    Register/Memory-being-modified, Data, Data</pre></li>
<li><b>Operand Size Suffixes:</b> Always appended to instructions (with the exception of ljmp, lcall, and lret on the x86): movb for "move byte", movw for "move word", movl for "move long", etc.</li>
<li><b>Direct-address Operands:</b> are not prefixed. Thus, "movl foo, %eax" moves the contents of memory location "foo" into %eax.</li>
<li><b>Immediate Operands:</b> are prefixed with a dollar sign ($): "pushl $4" pushes 0x00000004 onto the stack. This applies to labels as well: "movl $foo, %eax" moves the value of the label foo (that is, the address of variable foo) into %eax.</li>
<li><b>Indexed / Indirect Operands:</b> are used in the format segment:displacement (base, index, scale), like so: movl %eax, %ss:8(%ebp, 2, 3) (which is equivalent to Intel syntax mov dword [ss:ebp + 2 * 3 + 8], eax, that is, it moves the value of %eax to offset (%ebp + (2 *3) + 8) in segment %ss). Any of the five operands of an indirect address may be omitted.</li>
<li><b>Relative Addressing:</b> Used by default in all jump and call instructions. To use absolute addressing, the operand must be prefixed with an asterisk (*).</li>
<li><b>Far jumps / calls / returns:</b> Use the special opcodes 'ljmp', 'lcall' and 'lret'.</li></ul>
<p>The AT&amp;T syntax format for macros:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="na">.macro</span><span class="w"> </span><span class="err">&lt;</span><span class="no">name</span><span class="err">&gt;</span><span class="w"> </span><span class="err">&lt;</span><span class="no">args</span><span class="err">&gt;</span><span class="w"></span>
<span class="err">&lt;</span><span class="nf">operations</span><span class="err">&gt;</span><span class="w"></span>
<span class="na">.endm</span><span class="w"></span>
</pre></div>
<p>Example:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="na">.macro</span><span class="w"> </span><span class="no">write</span><span class="w"> </span><span class="no">string</span><span class="w"></span>
<span class="w">   </span><span class="nf">movw</span><span class="w"> </span><span class="no">string</span><span class="p">,</span><span class="w"> </span><span class="nv">%si</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">printstr</span><span class="w"></span>
<span class="na">.endm</span><span class="w"></span>
</pre></div>
<p>This would be equivalent to the NASM macro:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="err">%</span><span class="nf">macro</span><span class="w"> </span><span class="no">write</span><span class="w"> </span><span class="mi">1</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">si</span><span class="p">,</span><span class="w"> </span><span class="err">%</span><span class="mi">1</span><span class="w"></span>
<span class="w">   </span><span class="nf">call</span><span class="w"> </span><span class="no">printstr</span><span class="w"></span>
<span class="err">%</span><span class="nf">endmacro</span><span class="w"></span>
</pre></div>
<p>Additionally, the cpp and <a href="https://wiki.osdev.org/index.php?title=M4&amp;action=edit&amp;redlink=1" class="new" title="M4 (page does not exist)">M4</a> macro preprocessors are often used for macro handling.
</p>
<h2><span id="Converting_small_snippets_of_code_from_Intel_syntax_to_AT.26T"></span><span class="mw-headline" id="Converting_small_snippets_of_code_from_Intel_syntax_to_AT&amp;T">Converting small snippets of code from Intel syntax to AT&amp;T</span></h2>
<p>You can use the following script to convert short snippets of code (one liners) from Intel syntax to AT&amp;T syntax:
</p>
<div class="mw-highlight mw-highlight-lang-bash mw-content-ltr" dir="ltr"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="nb">set</span> -e

<span class="c1"># Usage:</span>
<span class="c1">#</span>
<span class="c1"># ./inteltoatt [16|32|64] &quot;mov eax, eax \n xor ecx, edx&quot;</span>
<span class="c1">#</span>

<span class="k">case</span> <span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span> <span class="k">in</span>
<span class="m">16</span><span class="p">|</span><span class="m">32</span><span class="p">|</span><span class="m">64</span><span class="o">)</span>
	<span class="nv">bits</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span>
	<span class="nb">shift</span> <span class="p">;;</span>
*<span class="o">)</span>
	<span class="nv">bits</span><span class="o">=</span><span class="s2">&quot;32&quot;</span> <span class="p">;;</span>
<span class="k">esac</span>
<span class="nv">code</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span>

<span class="nv">nasm</span><span class="o">=</span><span class="s2">&quot;</span><span class="k">$(</span>mktemp<span class="k">)</span><span class="s2">&quot;</span>
<span class="nv">obj</span><span class="o">=</span><span class="s2">&quot;</span><span class="k">$(</span>mktemp<span class="k">)</span><span class="s2">&quot;</span>
<span class="nv">objdump</span><span class="o">=</span><span class="s2">&quot;</span><span class="k">$(</span>mktemp<span class="k">)</span><span class="s2">&quot;</span>

<span class="k">case</span> <span class="s2">&quot;</span><span class="nv">$bits</span><span class="s2">&quot;</span> <span class="k">in</span>
	<span class="m">16</span><span class="o">)</span> <span class="nv">m</span><span class="o">=</span><span class="s2">&quot;i8086&quot;</span>       <span class="p">;;</span>
	<span class="m">32</span><span class="o">)</span> <span class="nv">m</span><span class="o">=</span><span class="s2">&quot;i386&quot;</span>        <span class="p">;;</span>
	<span class="m">64</span><span class="o">)</span> <span class="nv">m</span><span class="o">=</span><span class="s2">&quot;i386:x86-64&quot;</span> <span class="p">;;</span>
<span class="k">esac</span>

<span class="nb">echo</span> -e <span class="s2">&quot;BITS </span><span class="nv">$bits</span><span class="s2">\n</span><span class="nv">$code</span><span class="s2">&quot;</span> &gt; <span class="s2">&quot;</span><span class="nv">$nasm</span><span class="s2">&quot;</span>

nasm <span class="s2">&quot;</span><span class="nv">$nasm</span><span class="s2">&quot;</span> -o <span class="s2">&quot;</span><span class="nv">$obj</span><span class="s2">&quot;</span>
objdump -D -b binary -m <span class="nv">$m</span> -Maddr<span class="si">${</span><span class="nv">bits</span><span class="si">}</span>,data<span class="si">${</span><span class="nv">bits</span><span class="si">}</span> <span class="s2">&quot;</span><span class="nv">$obj</span><span class="s2">&quot;</span> &gt; <span class="s2">&quot;</span><span class="nv">$objdump</span><span class="s2">&quot;</span>

<span class="nv">lineno</span><span class="o">=</span><span class="s2">&quot;</span><span class="k">$(</span>egrep -m <span class="m">1</span> -n <span class="s1">&#39;&lt;\.data&gt;\:$&#39;</span> <span class="s2">&quot;</span><span class="nv">$objdump</span><span class="s2">&quot;</span> <span class="p">|</span> cut -d<span class="s1">&#39;:&#39;</span> -f1<span class="k">)</span><span class="s2">&quot;</span>
<span class="nv">lineno</span><span class="o">=</span><span class="k">$((</span>lineno+1<span class="k">))</span>

tail -n +<span class="nv">$lineno</span> <span class="s2">&quot;</span><span class="nv">$objdump</span><span class="s2">&quot;</span>
</pre></div>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li><a rel="nofollow" class="external text" href="http://www.delorie.com/djgpp/v2faq/faq17_1.html">DJGPP AT&amp;T Assembly Tutorial</a></li>
<li><a rel="nofollow" class="external text" href="http://asm.sourceforge.net//howto/Assembly-HOWTO.html">Linux Assembly HOWTO</a></li>
<li><a rel="nofollow" class="external text" href="https://savannah.nongnu.org/projects/gas-user/">GAS/AS End User Help Project</a></li>
<li><a rel="nofollow" class="external text" href="https://savannah.nongnu.org/projects/pgubook/">Programming from the Ground Up</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20250211122123
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.029 seconds
Real time usage: 0.569 seconds
Preprocessor visited node count: 40/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 6073/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1862-0!canonical and timestamp 20250211122122 and revision id 22877.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Opcode_syntax&amp;oldid=22877">https://wiki.osdev.org/index.php?title=Opcode_syntax&amp;oldid=22877</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:Assembly" title="Category:Assembly">Assembly</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Opcode+syntax" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Opcode_syntax#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Opcode_syntax" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:Opcode_syntax" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Opcode_syntax"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Opcode_syntax&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Opcode_syntax&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Opcode_syntax" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Opcode_syntax" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Opcode_syntax&amp;oldid=22877" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Opcode_syntax&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 14 September 2018, at 23:34.</li>
	<li id="footer-info-0">This page has been accessed 3,871 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Opcode_syntax&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.029","walltime":"0.569","ppvisitednodes":{"value":40,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":6073,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250211122123","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":662});});</script>
</body>
</html>