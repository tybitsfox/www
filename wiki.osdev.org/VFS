<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>VFS - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"ec98a601e186c27572904995","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"VFS","wgTitle":"VFS","wgCurRevisionId":29334,"wgRevisionId":29334,"wgArticleId":2258,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using duplicate arguments in template calls","Filesystems","OS theory"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"VFS","wgRelevantArticleId":2258,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","mmv.head","mmv.bootstrap.autostart","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-VFS rootpage-VFS skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">VFS</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="VFS#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="VFS#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table style="font-size:95%; line-height:1.5em; padding:0.25em; float:right; margin: 0 0 8px 15px; clear: right; border:1px solid #aaaaaa; background:#eee; text-align:center; width:200px; ;"><tbody><tr><th style="background:#ffce7b; padding:0.3em; font-size:1.1em;"><a href="File_Systems" title="File Systems">Filesystems</a></th></tr><tr><th>Virtual Filesystems</th></tr><tr><td><div>
<p><a class="mw-selflink selflink">VFS</a><br />
</p>
</div></td></tr><tr><th>Disk Filesystems</th></tr><tr><td><div>
<p><a href="FAT" title="FAT">FAT</a> <a href="FAT12" class="mw-redirect" title="FAT12">12</a>/<a href="FAT16" class="mw-redirect" title="FAT16">16</a>/<a href="FAT32" class="mw-redirect" title="FAT32">32</a>, <a href="VFAT" class="mw-redirect" title="VFAT">VFAT</a>, <a href="ExFAT" title="ExFAT">ExFAT</a><br />
<a href="Ext2" title="Ext2">Ext 2</a>/<a href="Ext3" title="Ext3">3</a>/<a href="Ext4" title="Ext4">4</a><br />
<a href="LEAN" title="LEAN">LEAN</a><br />
<a href="HPFS" title="HPFS">HPFS</a><br />
<a href="NTFS" title="NTFS">NTFS</a><br />
<a href="HFS" title="HFS">HFS</a><br />
<a href="HFS+" title="HFS+">HFS+</a><br />
<a href="MFS" title="MFS">MFS</a><br />
<a href="ReiserFS" title="ReiserFS">ReiserFS</a><br />
<a href="FFS_(Amiga)" title="FFS (Amiga)">FFS (Amiga)</a><br />
<a href="FFS_(BSD)" class="mw-redirect" title="FFS (BSD)">FFS (BSD)</a>/<a href="UFS" title="UFS">UFS</a><br />
<a href="BeFS" title="BeFS">BeFS</a><br />
<a href="BFS" title="BFS">BFS</a><br />
<a href="XFS" title="XFS">XFS</a><br />
<a href="SFS" title="SFS">SFS</a><br />
<a href="ZDSFS" title="ZDSFS">ZDSFS</a><br />
<a href="ZFS" title="ZFS">ZFS</a><br />
<a href="USTAR" title="USTAR">USTAR</a><br />
</p>
</div></td></tr><tr><th>CD/DVD Filesystems</th></tr><tr><td><div>
<p><a href="ISO_9660" title="ISO 9660">ISO 9660</a><br />
<a href="Joliet" title="Joliet">Joliet</a><br />
<a href="UDF" title="UDF">UDF</a><br />
</p>
</div></td></tr><tr><th><a href="./Category:Network_Filesystems" title="Category:Network Filesystems">Network Filesystems</a></th></tr><tr><td><div>
<p><a href="NFS" title="NFS">NFS</a><br />
<a href="RFS" title="RFS">RFS</a><br />
<a href="AFS" title="AFS">AFS</a><br />
</p>
</div></td></tr><tr><th>Flash Filesystems</th></tr><tr><td><div>
<p><a href="JFFS2" title="JFFS2">JFFS2</a><br />
<a href="YAFFS" title="YAFFS">YAFFS</a><br />
</p>
</div></td></tr></tbody></table>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="VFS#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="VFS#Disambiguation_of_the_underlying_semantics_of_a_VFS"><span class="tocnumber">1.1</span> <span class="toctext">Disambiguation of the underlying semantics of a VFS</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="VFS#VFS_Models"><span class="tocnumber">2</span> <span class="toctext">VFS Models</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="VFS#Indexed_(*-DOS/NT)"><span class="tocnumber">2.1</span> <span class="toctext">Indexed (*-DOS/NT)</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="VFS#Mount_Point_List"><span class="tocnumber">2.2</span> <span class="toctext">Mount Point List</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="VFS#Node_Graph_(Unix)"><span class="tocnumber">2.3</span> <span class="toctext">Node Graph (Unix)</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="VFS#Compromise"><span class="tocnumber">2.4</span> <span class="toctext">Compromise</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-8"><a href="VFS#File_Abstraction"><span class="tocnumber">3</span> <span class="toctext">File Abstraction</span></a>
<ul>
<li class="toclevel-2 tocsection-9"><a href="VFS#Opening_a_file"><span class="tocnumber">3.1</span> <span class="toctext">Opening a file</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="VFS#Reading_or_writing"><span class="tocnumber">3.2</span> <span class="toctext">Reading or writing</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="VFS#Closing_a_file"><span class="tocnumber">3.3</span> <span class="toctext">Closing a file</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="VFS#See_Also"><span class="tocnumber">4</span> <span class="toctext">See Also</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="VFS#External_Links"><span class="tocnumber">4.1</span> <span class="toctext">External Links</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Introduction">Introduction</span></h2>
<div class="thumb tright"><div class="thumbinner" style="width:199px;"><a href="./File:Vfs_diagram.png" class="image"><img alt="" src="images/e/e5/Vfs_diagram.png" decoding="async" width="197" height="199" class="thumbimage" data-file-width="197" data-file-height="199" /></a>  <div class="thumbcaption">VFS in relation to kernel</div></div></div>
<p>A <b>Virtual File System</b> (VFS) is not an on-disk file system, or a network file system. As such, it's neither a data structure (like ReiserFS, NTFS or FAT), nor a network protocol (like NFS). Actually, it's just an abstraction that many operating systems provide to applications, so don't let the name scare you.
</p><p>Virtual file systems are used to separate the high-level interface to the file system from the low level interfaces that different implementations (FAT, ext3, etc) may require, thus providing transparent access to storage devices from applications. This allows for greater flexibility, specially if one wants to support several file systems.
</p><p>The VFS sits between the higher level user space operations over the file system, and the file system drivers. Having a VFS interface implies having the idea of mount points. A mount point is a path inside the virtual file system tree that represents an in-use file system. This file system may be on a local device, in memory or stored on a networked device.
</p>
<h3><span class="mw-headline" id="Disambiguation_of_the_underlying_semantics_of_a_VFS">Disambiguation of the underlying semantics of a VFS</span></h3>
<p>A VFS, in concrete terms then, provides a uniform access path and subsystem for a group of file systems of the same type. To date, there are three common types of file system: <a href="Hierarchical_VFS_Theory" title="Hierarchical VFS Theory">Hierarchical</a> (the most common), tag-based and Database file systems.
</p>
<h2><span class="mw-headline" id="VFS_Models">VFS Models</span></h2>
<h3><span id="Indexed_.28.2A-DOS.2FNT.29"></span><span class="mw-headline" id="Indexed_(*-DOS/NT)">Indexed (*-DOS/NT)</span></h3>
<p>The VFS model used in *-DOS and Windows NT assigns a letter from the alphabet to each accessible file system on the machine. This type of VFS is the most simple to implement but is restricted to 26 mounted file systems and can get more and more complex as features are added, so you might want to use numbers instead.
When a file is requested the VFS checks what drive the file is on and then passes the request on to the relevant driver.
</p>
<h3><span class="mw-headline" id="Mount_Point_List">Mount Point List</span></h3>
<p>A more complex model is that of a mount point list. This system maintains a list of mounted file systems and where they are mounted. When a file is requested the list is scanned to determine what file system the file is on. The rest of the path is then passed on to the file system driver to fetch the file. This design is a quite versatile one but suffers from speed problems when large amounts of mount points are used.
</p>
<h3><span id="Node_Graph_.28Unix.29"></span><span class="mw-headline" id="Node_Graph_(Unix)">Node Graph (Unix)</span></h3>
<p>A VFS model that can be very efficient is the Node Graph. This model maintains a graph of file system nodes that can represent a file, folder, mount point or other type of file. A node graph can be faster to traverse than a list but suffers from complexity problems and, if a large amounts of nodes are needed, can take up large amounts of memory.
</p><p>Each node in a node graph has the name, permissions and inode stored within a structure along with pointers to file IO functions like Read, Write, Read Dir and Find Dir.
</p>
<h3><span class="mw-headline" id="Compromise">Compromise</span></h3>
<p>These models represent the basics for a VFS to be designed on, they have their problems however. Scanning through a list of mount points and then passing on to the file system the remainder of the path is usable for a simple OS but requires large amounts of repeated code as each driver must be able to parse a path reliably. A node graph on the other hand, requires a node for each file and directory on the system to present in memory at the same time, otherwise features like mount points would have to be constantly refreshed.
</p><p>A compromise between these two systems would be to have a list of mounted file systems and use that to determine what mount point a file lies on and then use nodes that do not necessarily have to permanently reside in memory to store file information and methods.
</p>
<h2><span class="mw-headline" id="File_Abstraction">File Abstraction</span></h2>
<p>One of the most important part of an OS is to create the file abstraction, that is, hide the underlying file system structure and sector layout from the application. This is usually implemented by <b>open</b>, <b>read</b>, <b>write</b> and <b>close</b> system calls (stands for both POSIX and Windows).
</p>
<h3><span class="mw-headline" id="Opening_a_file">Opening a file</span></h3>
<p>This function is responsible for finding or creating a context (VFS inode or vnode) for the given filename. This usually means to iterate on the aforementioned VFS nodes in memory, and if file is not found, consult the mount list (see above), the file system driver and the storage driver to get the required metadata (in POSIX terminology, fstat struct). The open system call returns an identifier that connects the opened file with that context. This identifier can be globally unique (like FCB), or local to the process (an integer, typical in UNIX-like systems). The pointed context should have information like
</p>
<ul><li>storage device where the opened file resides</li>
<li>structure describing which sectors belong to this file on the storage (or a simple inode reference)</li>
<li>file size</li>
<li>file position (seek offset)</li>
<li>file access mode (read / write)</li></ul>
<p>It is advisable to create another abstraction layer here and divide the context into two. One structure describing all the information from the FS point of view (vnode), and another structure for the application's point of view (open file struct, only referencing the vnode). The advantage here is, that you can keep a counter of number of open streams in the vnode, which you'll need later. Remember, more process can open the same file for reading, therefore you cannot put file position in the vnode directly. Whether you allocate this open file list in the process' address space or in the VFS, is up to you. But vnodes must be stored in a central place in VFS, otherwise you won't be able to avoid race-conditions and implement proper file locking.
</p>
<h3><span class="mw-headline" id="Reading_or_writing">Reading or writing</span></h3>
<p>Applications know nothing, all they can see is a linear, contigous data stream. This means that the heavy duty of translation falls to the VFS layer. This is a very complex task, and notoriously hard to get it right for the first time. A typical <b>read</b> should do the following steps:
</p><p>1. Using the file position and the file size information in the context, it must determine how many sectors needed (depends on FS logical sector size). It's possible that file position is greater or equal of the file size, therefore the answer is zero. In that case VFS must provide a way to indicate EOF condition. If file position and size is greater than file size, then the size argument must be lowered. Note that file position may not be on sector boundary, and even a read of 2 bytes can spread across multiple sectors.
</p><p>2. Using the file storage information in the context, VFS must create a list of sector addresses for the device. This can be done in a uniform (FS independent) way, although file systems tends to use very different allocation algorithms (FAT clusters, inode indirect tree, extents etc), therefore most VFS implementation delegates this task to the file system driver. Don't forget that file systems use logical sectors.
</p><p>3. The list of logical sectors must be converted to a list of physical sectors. This usually means to add the starting sector of the partition the file system is on, but could also mean more or less items in the list if logical sector size and physical sector size differ. In short, the VFS (knowing the characteristics of the underlying storage device) must convert LSN list into LBA list.
</p><p>4. Now that the list of physical sectors is known, the VFS can use readsector calls in the appropriate disk driver. The storage device is stored in the context (providing the device parameter for the call), and the kernel's device tree should tell which driver to use.
</p><p>5. Once the sectors are in memory, the VFS needs to copy their contents into the reader's buffer. If file position is not multiple of the sector size, then the first sector will start with extra data VFS must skip. If file position plus read size is not multiple of sector size, then the last sector has extra data that VFS must discard.
</p><p>6. The VFS must do housekeeping in the context. This typically means adjusting the file position and things alike.
</p><p>7. The VFS may now notify the reader (in POSIX that means to wake up the blocked process).
</p><p>Write has similar steps, but there the VFS must allocate logical sectors (or clusters, stripes, etc. whatever the file system is using for allocation) by calling the file system driver. With writes, the VFS should read the first and the last sector at a minimum, because they may have extra data, see step 5 above.
</p>
<h3><span class="mw-headline" id="Closing_a_file">Closing a file</span></h3>
<p>Finally, the close function is responsible for saving any modifications to the file into the storage (in case of writing) and updating the file system metadata. This usually means a call into the file system driver. Finally, free the memory allocated for the open file list entry. If you have a separate vnode + open file list (you should), then the VFS must decrease the vnode's open streams counter, and if that's zero, also free the vnode.
</p>
<h2><span class="mw-headline" id="See_Also">See Also</span></h2>
<ul><li><a href="Symbolic_link" title="Symbolic link">Symbolic link</a></li>
<li><a href="Hierarchical_VFS_Theory" title="Hierarchical VFS Theory">Hierarchical VFS Theory</a></li></ul>
<h3><span class="mw-headline" id="External_Links">External Links</span></h3>
<ul><li>2001 Linux VFS article <a rel="nofollow" class="external text" href="http://www.freeos.com/articles/3838/">part 1</a> and <a rel="nofollow" class="external text" href="http://www.freeos.com/articles/3851/">part 2</a> on <a rel="nofollow" class="external text" href="http://www.freeos.com/">FreeOS</a></li>
<li>1996 Linux VFS <a rel="nofollow" class="external text" href="http://tldp.org/LDP/khg/HyperNews/get/fs/vfstour.html">article</a> in the <a rel="nofollow" class="external text" href="http://tldp.org/LDP/khg/HyperNews/get/khg.html">Linux Kernel Hackers' Guide</a></li>
<li><a rel="nofollow" class="external text" href="http://doc.cat-v.org/plan_9/4th_edition/papers/names">The Use of Name Spaces in Plan 9</a> - Describes how Plan 9 takes advantage of both private namespaces and an VFS that matches <a rel="nofollow" class="external text" href="http://9p.cat-v.org">the 9P distributed file system protocol</a>.</li>
<li>1986 "Vnodes: An Architecture for Multiple File System Types in Sun UNIX" (Kleiman) <a rel="nofollow" class="external autonumber" href="https://www.cs.fsu.edu/~awang/courses/cop5611_s2024/vnode.pdf">[1]</a> describes a common approach to VFS</li></ul>
<!-- 
NewPP limit report
Cached time: 20250212010750
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.025 seconds
Real time usage: 0.025 seconds
Preprocessor visited node count: 373/1000000
Post‐expand include size: 3240/2097152 bytes
Template argument size: 2358/2097152 bytes
Highest expansion depth: 8/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    6.653      1 Template:Filesystems
100.00%    6.653      1 -total
 82.40%    5.482      1 Template:SmallNavBox
 61.16%    4.069     20 Template:If
 41.38%    2.753     20 Template:Show1
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2258-0!canonical and timestamp 20250212010750 and revision id 29334.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=VFS&amp;oldid=29334">https://wiki.osdev.org/index.php?title=VFS&amp;oldid=29334</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_duplicate_arguments_in_template_calls&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using duplicate arguments in template calls (page does not exist)">Pages using duplicate arguments in template calls</a></li><li><a href="./Category:Filesystems" title="Category:Filesystems">Filesystems</a></li><li><a href="./Category:OS_theory" title="Category:OS theory">OS theory</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=VFS" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="VFS#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="VFS" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="mw-list-item"><a href="./Talk:VFS" rel="discussion" title="Discussion about the content page [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="VFS"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VFS&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VFS&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/VFS" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="./Special:RecentChangesLinked/VFS" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VFS&amp;oldid=29334" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=VFS&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 30 December 2024, at 14:15.</li>
	<li id="footer-info-0">This page has been accessed 8,500 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=VFS&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.025","walltime":"0.025","ppvisitednodes":{"value":373,"limit":1000000},"postexpandincludesize":{"value":3240,"limit":2097152},"templateargumentsize":{"value":2358,"limit":2097152},"expansiondepth":{"value":8,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":0,"limit":5000000},"timingprofile":["100.00%    6.653      1 Template:Filesystems","100.00%    6.653      1 -total"," 82.40%    5.482      1 Template:SmallNavBox"," 61.16%    4.069     20 Template:If"," 41.38%    2.753     20 Template:Show1"]},"cachereport":{"timestamp":"20250212010750","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":121});});</script>
</body>
</html>