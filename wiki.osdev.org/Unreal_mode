<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Unreal Mode - OSDev Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"42585c291582c2af9fadd7a2","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Unreal_Mode","wgTitle":"Unreal Mode","wgCurRevisionId":28136,"wgRevisionId":28136,"wgArticleId":1715,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using deprecated source tags","X86 CPU","Operating Modes","FAQ"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Unreal_Mode","wgRelevantArticleId":1715,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgRedirectedFrom":"Unreal_mode","wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgVector2022PreviewPages":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgInternalRedirectTargetUrl":"/Unreal_Mode","wgEditSubmitButtonLabelPublish":false};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.DarkMode.styles":"ready"};RLPAGEMODULES=["mediawiki.action.view.redirect","site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.DarkMode","ext.moderation.notify","ext.moderation.ve","ext.moderation.ajaxhook","ext.moderation.notify.desktop"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=ext.DarkMode.styles%7Cext.pygments%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="https://wiki.osdev.org/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="https://wiki.osdev.org/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.7"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="opensearch_desc.php" title="OSDev Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="OSDev Wiki Atom feed" href="https://wiki.osdev.org/index.php?title=Special:RecentChanges&amp;feed=atom"/>
<link rel="canonical" href="Unreal_Mode"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Unreal_Mode rootpage-Unreal_Mode skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">Unreal Mode</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From OSDev Wiki</div>
		<div id="contentSub"><span class="mw-redirectedfrom">(Redirected from <a href="https://wiki.osdev.org/index.php?title=Unreal_mode&amp;redirect=no" class="mw-redirect" title="Unreal mode">Unreal mode</a>)</span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="Unreal_mode#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="Unreal_mode#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p><b>Unreal mode</b> consists of breaking the 64KiB limit of real mode segments (while retaining 16-bit instructions and the <tt>segment * 16 + offset</tt> addressing mode) by tweaking the <a href="Descriptor_Cache" title="Descriptor Cache">descriptor caches</a>.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Unreal_mode#Usage"><span class="tocnumber">1</span> <span class="toctext">Usage</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Unreal_mode#Implementation"><span class="tocnumber">2</span> <span class="toctext">Implementation</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="Unreal_mode#Big_Unreal_Mode"><span class="tocnumber">2.1</span> <span class="toctext">Big Unreal Mode</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="Unreal_mode#Huge_Unreal_Mode"><span class="tocnumber">2.2</span> <span class="toctext">Huge Unreal Mode</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="Unreal_mode#Compiler_Support"><span class="tocnumber">3</span> <span class="toctext">Compiler Support</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="Unreal_mode#Smaller_C"><span class="tocnumber">3.1</span> <span class="toctext">Smaller C</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Usage">Usage</span></h2>
<p>Unreal mode is usually recommended in the two following cases:
</p>
<ul><li>You're trying to extend a legacy 16-bit DOS program so that it can deal with larger data and neither <a href="Virtual_8086_Mode" title="Virtual 8086 Mode">Virtual 8086 Mode</a>, nor xms are suitable for your needs.</li>
<li>You're trying to load something that will run in 32-bit mode which is larger than 640K (therefore you cannot load it in conventional memory) and you don't want to bother writing a protected mode disk driver yet, but you also want to avoid switching between real and protected mode to copy chunks from the conventional memory buffer into extended memory.</li></ul>
<p>You still will not have full access to all physical RAM if you do not have the <a href="A20_Line" title="A20 Line">A20 Line</a> enabled; all the "odd" 1 MiB blocks will be unavailable.
</p>
<h2><span class="mw-headline" id="Implementation">Implementation</span></h2>
<p>To do this, you need to set the descriptor cache's limits for your segment register(s) to any value higher than 64KiB (usually a full 4GiB (<tt>0xffffffff</tt>)).
</p><p>In protected mode, bits 3-15 in the segment registers represent an index into <a href="GDT" class="mw-redirect" title="GDT">the global descriptor table</a>. That's why in the following code 0x08 = 1000b gets you entry #1 (entry #0 is ALWAYS a null descriptor).
</p><p>When (in protected mode) a segment register is loaded with a "selector", a "segment descriptor cache register" is filled with the descriptor's values, including the size (or limit). After the switch back to real mode, these values are not modified, regardless of what value is in the 16-bit segment register. So the 64KiB limit is no longer valid and 32-bit offsets can be used in Real Mode to actually access areas above 64KiB (<tt>segment * 16 + 32-bit offset</tt>).
</p>
<h3><span class="mw-headline" id="Big_Unreal_Mode">Big Unreal Mode</span></h3>
<p>This won't touch CS. <br />
Therefore IP is unaffected by all this, and the code itself is still limited to 64KiB.
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">; Assembly example</span>

<span class="c1">; nasm boot.asm -o boot.bin</span>
<span class="c1">; partcopy boot.bin 0 200 -f0</span>

<span class="nf">ORG</span><span class="w"> </span><span class="mi">0x7c00</span><span class="w">                </span><span class="c1">; add to offsets</span>

<span class="nl">start:</span><span class="w"></span>
<span class="w">   </span><span class="nf">xor</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w">             </span><span class="c1">; make it zero</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w">             </span><span class="c1">; DS=0</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">ss</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w">             </span><span class="c1">; stack starts at seg 0</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">sp</span><span class="p">,</span><span class="w"> </span><span class="mi">0x9c00</span><span class="w">         </span><span class="c1">; 2000h past code start, </span>
<span class="w">                          </span><span class="c1">; making the stack 7.5k in size</span>

<span class="w">   </span><span class="nf">cli</span><span class="w">                    </span><span class="c1">; no interrupts</span>
<span class="w">   </span><span class="nf">push</span><span class="w"> </span><span class="no">ds</span><span class="w">                </span><span class="c1">; save real mode</span>

<span class="w">   </span><span class="nf">lgdt</span><span class="w"> </span><span class="p">[</span><span class="no">gdtinfo</span><span class="p">]</span><span class="w">         </span><span class="c1">; load gdt register</span>

<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="no">cr0</span><span class="w">          </span><span class="c1">; switch to pmode by</span>
<span class="w">   </span><span class="nf">or</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="mi">1</span><span class="w">                </span><span class="c1">; set pmode bit</span>
<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">cr0</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="mi">0x8</span><span class="p">:</span><span class="no">pmode</span><span class="w"></span>

<span class="nl">pmode:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">bx</span><span class="p">,</span><span class="w"> </span><span class="mi">0x10</span><span class="w">          </span><span class="c1">; select descriptor 2</span>
<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">bx</span><span class="w">            </span><span class="c1">; 10h = 10000b</span>

<span class="w">   </span><span class="nf">and</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="mi">0xFE</span><span class="w">            </span><span class="c1">; back to realmode</span>
<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">cr0</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w">          </span><span class="c1">; by toggling bit again</span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="mi">0x0</span><span class="p">:</span><span class="no">unreal</span><span class="w"></span>

<span class="nl">unreal:</span><span class="w"></span>
<span class="w">   </span><span class="nf">pop</span><span class="w"> </span><span class="no">ds</span><span class="w">                 </span><span class="c1">; get back old segment</span>
<span class="w">   </span><span class="nf">sti</span><span class="w"></span>

<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">bx</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0f01</span><span class="w">         </span><span class="c1">; attrib/char of smiley</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">eax</span><span class="p">,</span><span class="w"> </span><span class="mi">0x0b8000</span><span class="w">      </span><span class="c1">; note 32 bit offset</span>
<span class="w">   </span><span class="nf">mov</span><span class="w"> </span><span class="no">word</span><span class="w"> </span><span class="p">[</span><span class="no">ds</span><span class="p">:</span><span class="no">eax</span><span class="p">],</span><span class="w"> </span><span class="no">bx</span><span class="w"></span>

<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="no">$</span><span class="w">                  </span><span class="c1">; loop forever</span>

<span class="nl">gdtinfo:</span><span class="w"></span>
<span class="w">   </span><span class="nf">dw</span><span class="w"> </span><span class="no">gdt_end</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="no">gdt</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">1</span><span class="w">   </span><span class="c1">;last byte in table</span>
<span class="w">   </span><span class="nf">dd</span><span class="w"> </span><span class="no">gdt</span><span class="w">                 </span><span class="c1">;start of table</span>

<span class="nl">gdt:</span><span class="w">        </span><span class="nf">dd</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="w">        </span><span class="c1">; entry 0 is always unused</span>
<span class="nl">codedesc:</span><span class="w">   </span><span class="nf">db</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">10011010</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">00000000</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="nl">flatdesc:</span><span class="w">   </span><span class="nf">db</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">10010010</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">11001111</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="nl">gdt_end:</span><span class="w"></span>

<span class="w">   </span><span class="nf">times</span><span class="w"> </span><span class="mi">510</span><span class="p">-(</span><span class="no">$-$$</span><span class="p">)</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="mi">0</span><span class="w">  </span><span class="c1">; fill sector w/ 0&#39;s</span>
<span class="w">   </span><span class="nf">dw</span><span class="w"> </span><span class="mi">0xAA55</span><span class="w">              </span><span class="c1">; Required by some BIOSes</span>
</pre></div>
<h3><span class="mw-headline" id="Huge_Unreal_Mode">Huge Unreal Mode</span></h3>
<p>Huge Unreal Mode enables code over 64KiB. However, it is more difficult to implement as real mode interrupts do not automatically save the high 16 bits of EIP. Initialization is simple though, you just load a code segment with a 4GiB limit:
</p>
<div class="mw-highlight mw-highlight-lang-asm mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">; Assembly example</span>

<span class="c1">; nasm boot.asm -o boot.bin</span>
<span class="c1">; partcopy boot.bin 0 200 -f0</span>

<span class="w"> </span><span class="nf">ORG</span><span class="w"> </span><span class="mi">0x7c00</span><span class="w">               </span><span class="c1">; add to offsets</span>

<span class="nl">start:</span><span class="w">   </span><span class="nf">xor</span><span class="w"> </span><span class="no">ax</span><span class="p">,</span><span class="w"> </span><span class="no">ax</span><span class="w">       </span><span class="c1">; make it zero</span>

<span class="w">   </span><span class="na">...</span><span class="w">                    </span><span class="c1">; As before</span>

<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">cr0</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w"></span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="mi">0x8</span><span class="p">:</span><span class="no">pmode</span><span class="w"></span>
<span class="nl">pmode:</span><span class="w"></span>
<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">bx</span><span class="p">,</span><span class="w"> </span><span class="mi">0x10</span><span class="w">          </span><span class="c1">; select descriptor 2, instead of 1</span>
<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">ds</span><span class="p">,</span><span class="w"> </span><span class="no">bx</span><span class="w">            </span><span class="c1">; 10h = 10000b</span>

<span class="w">   </span><span class="nf">and</span><span class="w"> </span><span class="no">al</span><span class="p">,</span><span class="mi">0xFE</span><span class="w">            </span><span class="c1">; back to realmode</span>
<span class="w">   </span><span class="nf">mov</span><span class="w">  </span><span class="no">cr0</span><span class="p">,</span><span class="w"> </span><span class="no">eax</span><span class="w">          </span><span class="c1">; by toggling bit again</span>
<span class="w">   </span><span class="nf">jmp</span><span class="w"> </span><span class="mi">0x0</span><span class="p">:</span><span class="no">huge_unreal</span><span class="w"></span>
<span class="nl">huge_unreal:</span><span class="w"></span>

<span class="w">   </span><span class="na">...</span><span class="w">                    </span><span class="c1">;As before</span>

<span class="nl">gdtinfo:</span><span class="w"></span>
<span class="w">   </span><span class="nf">dw</span><span class="w"> </span><span class="no">gdt_end</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="no">gdt</span><span class="w"> </span><span class="p">-</span><span class="w"> </span><span class="mi">1</span><span class="w">   </span><span class="c1">;last byte in table</span>
<span class="w">   </span><span class="nf">dd</span><span class="w"> </span><span class="no">gdt</span><span class="w">                 </span><span class="c1">;start of table</span>

<span class="nf">gdt</span><span class="w">         </span><span class="no">dd</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="w">        </span><span class="c1">; entry 0 is always unused</span>
<span class="nf">flatcode</span><span class="w">    </span><span class="no">db</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">10011010</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">10001111</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="nf">flatdata</span><span class="w">    </span><span class="no">db</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0xff</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">10010010</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">11001111</span><span class="no">b</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"></span>
<span class="nl">gdt_end:</span><span class="w"></span>

<span class="w">   </span><span class="nf">times</span><span class="w"> </span><span class="mi">510</span><span class="p">-(</span><span class="no">$-$$</span><span class="p">)</span><span class="w"> </span><span class="no">db</span><span class="w"> </span><span class="mi">0</span><span class="w">  </span><span class="c1">; fill sector w/ 0&#39;s</span>
<span class="w">   </span><span class="nf">dw</span><span class="w"> </span><span class="mi">0xAA55</span><span class="w">              </span><span class="c1">; Required by some BIOSes</span>
</pre></div>
<p>WARNING: this may not work on some emulators or some hardware.
</p>
<h2><span class="mw-headline" id="Compiler_Support">Compiler Support</span></h2>
<h3><span class="mw-headline" id="Smaller_C">Smaller C</span></h3>
<p>The <a href="Smaller_C" title="Smaller C">Smaller C</a> compiler supports unreal mode. It produces <a href="MZ" title="MZ">MZ</a> executables for unreal mode (can be loaded with <a href="BootProg" title="BootProg">BootProg</a>).
</p><p>The code and the stack are to be located below the 1MB mark and the stack size is limited by 64KB (IOW, there's nothing unusual about CS:(E)IP, SS:(E)SP, it's a natural setup for MZ executables in DOS). The DS and ES segment registers are set to 0, so C pointers can work as flat 32-bit physical addresses and address data or memory-mapped devices anywhere in the first 4GB of memory.
</p><p>The startup code of these executables performs the necessary relocation (there are only custom relocations and no standard MZ relocations, which may simplify loading of the executables) and sets up unreal mode before passing control to the equivalent of <i>main()</i>. See <i>srclib/c0du.asm</i> and other C/assembly code under <i>srclib</i> in the compiler source tree for how to write bits of assembly code for unreal mode (look for <i>asm("inline asm code")</i> under <i>#ifdef __UNREAL__</i>).
</p><p>You can try out unreal mode in DOS (e.g. in DOSBox, VirtualBox + FreeDOS) as the compiler fully supports the DOS + unreal mode combo in its C library. <i>tests/vesalfb.c</i> is a simple example of setting up a <a href="VESA" class="mw-redirect" title="VESA">VESA</a> graphics mode with the linear frame buffer enabled and drawing something on the screen in unreal mode.
</p><p>For an example of an Unreal Mode <a href="Bootloader" title="Bootloader">bootloader</a> implementation with Smaller C, look at <a rel="nofollow" class="external text" href="https://github.com/fysnet/FYSOS/tree/master/loader">FYSOS</a>.
</p>
<!-- 
NewPP limit report
Cached time: 20250212025152
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.029 seconds
Real time usage: 0.305 seconds
Preprocessor visited node count: 33/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 14331/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:1715-0!canonical and timestamp 20250212025152 and revision id 28136.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://wiki.osdev.org/index.php?title=Unreal_Mode&amp;oldid=28136">https://wiki.osdev.org/index.php?title=Unreal_Mode&amp;oldid=28136</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="./Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="https://wiki.osdev.org/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="./Category:X86_CPU" title="Category:X86 CPU">X86 CPU</a></li><li><a href="./Category:Operating_Modes" title="Category:Operating Modes">Operating Modes</a></li><li><a href="./Category:FAQ" title="Category:FAQ">FAQ</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Special:UserLogin&amp;returnto=Unreal+Mode" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li><li id="pt-darkmode" class="mw-list-item"><a href="Unreal_mode#" class="ext-darkmode-link"><span>Dark mode</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="Unreal_Mode" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Talk:Unreal_Mode&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="Unreal_Mode"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Unreal_Mode&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Unreal_Mode&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="https://wiki.osdev.org/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search OSDev Wiki" aria-label="Search OSDev Wiki" autocapitalize="sentences" title="Search OSDev Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="index.html"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage" class="mw-list-item"><a href="index.html" title="Visit the main page [z]" accesskey="z"><span>Main Page</span></a></li><li id="n-portal" class="mw-list-item"><a href="http://forum.osdev.org/" rel="nofollow" title="About the project, what you can do, where to find things"><span>Forums</span></a></li><li id="n-FAQ" class="mw-list-item"><a href="./Category:FAQ"><span>FAQ</span></a></li><li id="n-OS-Projects" class="mw-list-item"><a href="Projects"><span>OS Projects</span></a></li><li id="n-randompage" class="mw-list-item"><a href="https://wiki.osdev.org/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-about" class="vector-menu mw-portlet mw-portlet-about vector-menu-portal portal" aria-labelledby="p-about-label" role="navigation"  >
	<h3
		id="p-about-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">About</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-This-site" class="mw-list-item"><a href="./OSDevWiki:About"><span>This site</span></a></li><li id="n-Joining" class="mw-list-item"><a href="./OSDevWiki:Joining"><span>Joining</span></a></li><li id="n-Editing-help" class="mw-list-item"><a href="./OSDevWiki:Editing"><span>Editing help</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="./Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="./Special:WhatLinksHere/Unreal_Mode" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="https://wiki.osdev.org/Special:RecentChangesLinked/Unreal_Mode" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="./Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Unreal_Mode&amp;oldid=28136" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="https://wiki.osdev.org/index.php?title=Unreal_Mode&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 10 July 2023, at 02:54.</li>
	<li id="footer-info-0">This page has been accessed 10,771 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="./OSDev_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="./OSDev_Wiki:About">About OSDev Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="./OSDev_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="https://wiki.osdev.org/index.php?title=Unreal_Mode&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="resources/assets/poweredby_mediawiki_132x47.png 1.5x, resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.029","walltime":"0.305","ppvisitednodes":{"value":33,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":14331,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20250212025152","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":416});});</script>
</body>
</html>